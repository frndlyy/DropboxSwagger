{
  "info": {
    "version": "1.0.0", 
    "description": "The Dropbox Business API allows apps to manage the user lifecycle for a Dropbox Business account and perform API actions on all members of a team. It also gives apps programmatic access to Dropbox Business admin functionality.", 
    "title": "Dropbox Team API v2"
  }, 
  "paths": {
    "/team/groups/job_status/get": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/GroupsPollError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/PollEmptyResult"
            }
          }
        }, 
        "operationId": "TeamGroupsJobStatusGet", 
        "description": "Once an async_job_id is returned from :route:`groups/delete`, :route:`groups/members/add` , or :route:`groups/members/remove` use this method to poll the status of granting/revoking group members' access to group-owned resources.\nPermission : Team member management.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/PollArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Groups - Job Status - Get"
      }
    }, 
    "/team/members/recover": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/MembersRecoverError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "type": "null"
            }
          }
        }, 
        "operationId": "TeamMembersRecover", 
        "description": "Recover a deleted member.\nPermission : Team member management\nExactly one of team_member_id, email, or external_id must be provided to identify the user account.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/MembersRecoverArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Members - Recover"
      }
    }, 
    "/team/reports/get_devices": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/DateRangeError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/GetDevicesReport"
            }
          }
        }, 
        "operationId": "TeamReportsGetDevices", 
        "description": "Retrieves reporting data about a team's linked devices.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/DateRange"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Reports - Get Devices"
      }
    }, 
    "/team/properties/template/get": {
      "post": {
        "operationId": "TeamPropertiesTemplateGet", 
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/TemplateError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/GetTemplateResult"
            }
          }
        }, 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/GetTemplateArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Properties - Template - Get"
      }
    }, 
    "/team/devices/list_team_devices": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/ListTeamDevicesError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/ListTeamDevicesResult"
            }
          }
        }, 
        "operationId": "TeamDevicesListTeamDevices", 
        "description": "List all device sessions of a team.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/ListTeamDevicesArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Devices - List Team Devices"
      }
    }, 
    "/team_log/get_events/continue": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/GetTeamEventsContinueError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/GetTeamEventsResult"
            }
          }
        }, 
        "operationId": "TeamLogGetEventsContinue", 
        "description": "Once a cursor has been retrieved from :route:`get_events`, use this to paginate through all events.\nPermission : Team Auditing.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/GetTeamEventsContinueArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team Log - Get Events - Continue"
      }
    }, 
    "/team/team_folder/list": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/TeamFolderListError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/TeamFolderListResult"
            }
          }
        }, 
        "operationId": "TeamTeamFolderList", 
        "description": "Lists all team folders.\nPermission : Team member file access.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/TeamFolderListArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Team Folder - List"
      }
    }, 
    "/team/groups/create": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/GroupCreateError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/GroupFullInfo"
            }
          }
        }, 
        "operationId": "TeamGroupsCreate", 
        "description": "Creates a new, empty group, with a requested name.\nPermission : Team member management.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/GroupCreateArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Groups - Create"
      }
    }, 
    "/team/namespaces/list": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "type": "null"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/TeamNamespacesListResult"
            }
          }
        }, 
        "operationId": "TeamNamespacesList", 
        "description": "Returns a list of all team-accessible namespaces. This list includes team folders, shared folders containing team members, team members' home namespaces, and team members' app folders. Home namespaces and app folders are always owned by this team or members of the team, but shared folders may be owned by other users or other teams. Duplicates may occur in the list.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/TeamNamespacesListArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Namespaces - List"
      }
    }, 
    "/team/team_folder/archive": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/TeamFolderArchiveError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/TeamFolderArchiveLaunch"
            }
          }
        }, 
        "operationId": "TeamTeamFolderArchive", 
        "description": "Sets an active team folder's status to archived and removes all folder and file members.\nPermission : Team member file access.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/TeamFolderArchiveArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Team Folder - Archive"
      }
    }, 
    "/team/devices/revoke_device_session": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/RevokeDeviceSessionError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "type": "null"
            }
          }
        }, 
        "operationId": "TeamDevicesRevokeDeviceSession", 
        "description": "Revoke a device session of a team's member.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/RevokeDeviceSessionArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Devices - Revoke Device Session"
      }
    }, 
    "/team/members/set_admin_permissions": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/MembersSetPermissionsError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/MembersSetPermissionsResult"
            }
          }
        }, 
        "operationId": "TeamMembersSetAdminPermissions", 
        "description": "Updates a team member's permissions.\nPermission : Team member management.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/MembersSetPermissionsArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Members - Set Admin Permissions"
      }
    }, 
    "/team/properties/template/list": {
      "post": {
        "operationId": "TeamPropertiesTemplateList", 
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/TemplateError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/ListTemplateResult"
            }
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "null"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Properties - Template - List"
      }
    }, 
    "/team/devices/list_members_devices": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/ListMembersDevicesError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/ListMembersDevicesResult"
            }
          }
        }, 
        "operationId": "TeamDevicesListMembersDevices", 
        "description": "List all device sessions of a team.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/ListMembersDevicesArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Devices - List Members Devices"
      }
    }, 
    "/team/member_space_limits/excluded_users/add": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/ExcludedUsersUpdateError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/ExcludedUsersUpdateResult"
            }
          }
        }, 
        "operationId": "TeamMemberSpaceLimitsExcludedUsersAdd", 
        "description": "Add users to member space limits excluded users list.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/ExcludedUsersUpdateArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Member Space Limits - Excluded Users - Add"
      }
    }, 
    "/team/groups/list/continue": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/GroupsListContinueError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/GroupsListResult"
            }
          }
        }, 
        "operationId": "TeamGroupsListContinue", 
        "description": "Once a cursor has been retrieved from :route:`groups/list`, use this to paginate through all groups.\nPermission : Team Information.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/GroupsListContinueArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Groups - List - Continue"
      }
    }, 
    "/team/groups/update": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/GroupUpdateError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/GroupFullInfo"
            }
          }
        }, 
        "operationId": "TeamGroupsUpdate", 
        "description": "Updates a group's name and/or external ID.\nPermission : Team member management.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/GroupUpdateArgs"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Groups - Update"
      }
    }, 
    "/team/team_folder/get_info": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "type": "null"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "$ref": "#/definitions/TeamFolderGetInfoItem"
              }, 
              "type": "array"
            }
          }
        }, 
        "operationId": "TeamTeamFolderGetInfo", 
        "description": "Retrieves metadata for team folders.\nPermission : Team member file access.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/TeamFolderIdListArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Team Folder - Get Info"
      }
    }, 
    "/team/team_folder/create": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/TeamFolderCreateError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/TeamFolderMetadata"
            }
          }
        }, 
        "operationId": "TeamTeamFolderCreate", 
        "description": "Creates a new, active, team folder with no members.\nPermission : Team member file access.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/TeamFolderCreateArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Team Folder - Create"
      }
    }, 
    "/team/member_space_limits/excluded_users/remove": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/ExcludedUsersUpdateError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/ExcludedUsersUpdateResult"
            }
          }
        }, 
        "operationId": "TeamMemberSpaceLimitsExcludedUsersRemove", 
        "description": "Remove users from member space limits excluded users list.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/ExcludedUsersUpdateArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Member Space Limits - Excluded Users - Remove"
      }
    }, 
    "/team/namespaces/list/continue": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/TeamNamespacesListContinueError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/TeamNamespacesListResult"
            }
          }
        }, 
        "operationId": "TeamNamespacesListContinue", 
        "description": "Once a cursor has been retrieved from :route:`namespaces/list`, use this to paginate through all team-accessible namespaces. Duplicates may occur in the list.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/TeamNamespacesListContinueArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Namespaces - List - Continue"
      }
    }, 
    "/team/team_folder/list/continue": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/TeamFolderListContinueError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/TeamFolderListResult"
            }
          }
        }, 
        "operationId": "TeamTeamFolderListContinue", 
        "description": "Once a cursor has been retrieved from :route:`team_folder/list`, use this to paginate through all team folders.\nPermission : Team member file access.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/TeamFolderListContinueArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Team Folder - List - Continue"
      }
    }, 
    "/team/member_space_limits/remove_custom_quota": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/CustomQuotaError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "$ref": "#/definitions/RemoveCustomQuotaResult"
              }, 
              "type": "array"
            }
          }
        }, 
        "operationId": "TeamMemberSpaceLimitsRemoveCustomQuota", 
        "description": "Remove users custom quota. A maximum of 1000 members can be specified in a single call.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/CustomQuotaUsersArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Member Space Limits - Remove Custom Quota"
      }
    }, 
    "/team/members/remove": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/MembersRemoveError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/LaunchEmptyResult"
            }
          }
        }, 
        "operationId": "TeamMembersRemove", 
        "description": "Removes a member from a team.\nPermission : Team member management\nExactly one of team_member_id, email, or external_id must be provided to identify the user account.\nAccounts can be recovered via :route:`members/recover` for a 7 day period or until the account has been permanently deleted or transferred to another account (whichever comes first). Calling :route:`members/add` while a user is still recoverable on your team will return with :field:`MemberAddResult.user_already_on_team`.\nAccounts can have their files transferred via the admin console for a limited time, based on the version history length associated with the team (120 days for most teams).\nThis endpoint may initiate an asynchronous job. To obtain the final result of the job, the client should periodically poll :route:`members/remove/job_status/get`.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/MembersRemoveArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Members - Remove"
      }
    }, 
    "/team/groups/members/list/continue": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/GroupsMembersListContinueError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/GroupsMembersListResult"
            }
          }
        }, 
        "operationId": "TeamGroupsMembersListContinue", 
        "description": "Once a cursor has been retrieved from :route:`groups/members/list`, use this to paginate through all members of the group.\nPermission : Team information.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/GroupsMembersListContinueArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Groups - Members - List - Continue"
      }
    }, 
    "/team/team_folder/permanently_delete": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/TeamFolderPermanentlyDeleteError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "type": "null"
            }
          }
        }, 
        "operationId": "TeamTeamFolderPermanentlyDelete", 
        "description": "Permanently deletes an archived team folder.\nPermission : Team member file access.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/TeamFolderIdArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Team Folder - Permanently Delete"
      }
    }, 
    "/team/linked_apps/revoke_linked_app_batch": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/RevokeLinkedAppBatchError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/RevokeLinkedAppBatchResult"
            }
          }
        }, 
        "operationId": "TeamLinkedAppsRevokeLinkedAppBatch", 
        "description": "Revoke a list of linked applications of the team members.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/RevokeLinkedApiAppBatchArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Linked Apps - Revoke Linked App Batch"
      }
    }, 
    "/team/members/send_welcome_email": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/MembersSendWelcomeError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "type": "null"
            }
          }
        }, 
        "operationId": "TeamMembersSendWelcomeEmail", 
        "description": "Sends welcome email to pending team member.\nPermission : Team member management\nExactly one of team_member_id, email, or external_id must be provided to identify the user account.\nNo-op if team member is not pending.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/UserSelectorArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Members - Send Welcome Email"
      }
    }, 
    "/team/members/add": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "type": "null"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/MembersAddLaunch"
            }
          }
        }, 
        "operationId": "TeamMembersAdd", 
        "description": "Adds members to a team.\nPermission : Team member management\nA maximum of 20 members can be specified in a single call.\nIf no Dropbox account exists with the email address specified, a new Dropbox account will be created with the given email address, and that account will be invited to the team.\nIf a personal Dropbox account exists with the email address specified in the call, this call will create a placeholder Dropbox account for the user on the team and send an email inviting the user to migrate their existing personal account onto the team.\nTeam member management apps are required to set an initial given_name and surname for a user to use in the team invitation and for 'Perform as team member' actions taken on the user before they become 'active'.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/MembersAddArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Members - Add"
      }
    }, 
    "/team/members/suspend": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/MembersSuspendError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "type": "null"
            }
          }
        }, 
        "operationId": "TeamMembersSuspend", 
        "description": "Suspend a member from a team.\nPermission : Team member management\nExactly one of team_member_id, email, or external_id must be provided to identify the user account.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/MembersDeactivateArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Members - Suspend"
      }
    }, 
    "/team/members/unsuspend": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/MembersUnsuspendError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "type": "null"
            }
          }
        }, 
        "operationId": "TeamMembersUnsuspend", 
        "description": "Unsuspend a member from a team.\nPermission : Team member management\nExactly one of team_member_id, email, or external_id must be provided to identify the user account.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/MembersUnsuspendArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Members - Unsuspend"
      }
    }, 
    "/team/groups/members/set_access_type": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/GroupMemberSetAccessTypeError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "$ref": "#/definitions/GroupsGetInfoItem"
              }, 
              "type": "array"
            }
          }
        }, 
        "operationId": "TeamGroupsMembersSetAccessType", 
        "description": "Sets a member's access type in a group.\nPermission : Team member management.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/GroupMembersSetAccessTypeArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Groups - Members - Set Access Type"
      }
    }, 
    "/team/members/list": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/MembersListError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/MembersListResult"
            }
          }
        }, 
        "operationId": "TeamMembersList", 
        "description": "Lists members of a team.\nPermission : Team information.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/MembersListArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Members - List"
      }
    }, 
    "/team/members/get_info": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/MembersGetInfoError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "$ref": "#/definitions/MembersGetInfoItem"
              }, 
              "type": "array"
            }
          }
        }, 
        "operationId": "TeamMembersGetInfo", 
        "description": "Returns information about multiple team members.\nPermission : Team information\nThis endpoint will return :field:`MembersGetInfoItem.id_not_found`, for IDs (or emails) that cannot be matched to a valid team member.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/MembersGetInfoArgs"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Members - Get Info"
      }
    }, 
    "/team/groups/members/remove": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/GroupMembersRemoveError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/GroupMembersChangeResult"
            }
          }
        }, 
        "operationId": "TeamGroupsMembersRemove", 
        "description": "Removes members from a group.\nThe members are removed immediately. However the revoking of group-owned resources may take additional time. Use the :route:`groups/job_status/get` to determine whether this process has completed.\nThis method permits removing the only owner of a group, even in cases where this is not possible via the web client.\nPermission : Team member management.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/GroupMembersRemoveArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Groups - Members - Remove"
      }
    }, 
    "/team/team_folder/rename": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/TeamFolderRenameError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/TeamFolderMetadata"
            }
          }
        }, 
        "operationId": "TeamTeamFolderRename", 
        "description": "Changes an active team folder's name.\nPermission : Team member file access.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/TeamFolderRenameArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Team Folder - Rename"
      }
    }, 
    "/team/devices/revoke_device_session_batch": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/RevokeDeviceSessionBatchError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/RevokeDeviceSessionBatchResult"
            }
          }
        }, 
        "operationId": "TeamDevicesRevokeDeviceSessionBatch", 
        "description": "Revoke a list of device sessions of team members.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/RevokeDeviceSessionBatchArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Devices - Revoke Device Session Batch"
      }
    }, 
    "/team/team_folder/archive/check": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/PollError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/TeamFolderArchiveJobStatus"
            }
          }
        }, 
        "operationId": "TeamTeamFolderArchiveCheck", 
        "description": "Returns the status of an asynchronous job for archiving a team folder.\nPermission : Team member file access.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/PollArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Team Folder - Archive - Check"
      }
    }, 
    "/team/linked_apps/list_members_linked_apps": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/ListMembersAppsError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/ListMembersAppsResult"
            }
          }
        }, 
        "operationId": "TeamLinkedAppsListMembersLinkedApps", 
        "description": "List all applications linked to the team members' accounts.\nNote, this endpoint does not list any team-linked applications.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/ListMembersAppsArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Linked Apps - List Members Linked Apps"
      }
    }, 
    "/team/members/add/job_status/get": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/PollError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/MembersAddJobStatus"
            }
          }
        }, 
        "operationId": "TeamMembersAddJobStatusGet", 
        "description": "Once an async_job_id is returned from :route:`members/add` , use this to poll the status of the asynchronous request.\nPermission : Team member management.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/PollArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Members - Add - Job Status - Get"
      }
    }, 
    "/team/linked_apps/list_team_linked_apps": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/ListTeamAppsError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/ListTeamAppsResult"
            }
          }
        }, 
        "operationId": "TeamLinkedAppsListTeamLinkedApps", 
        "description": "List all applications linked to the team members' accounts.\nNote, this endpoint doesn't list any team-linked applications.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/ListTeamAppsArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Linked Apps - List Team Linked Apps"
      }
    }, 
    "/team/properties/template/add": {
      "post": {
        "operationId": "TeamPropertiesTemplateAdd", 
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/ModifyTemplateError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/AddTemplateResult"
            }
          }
        }, 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/AddTemplateArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Properties - Template - Add"
      }
    }, 
    "/team/groups/delete": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/GroupDeleteError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/LaunchEmptyResult"
            }
          }
        }, 
        "operationId": "TeamGroupsDelete", 
        "description": "Deletes a group.\nThe group is deleted immediately. However the revoking of group-owned resources may take additional time. Use the :route:`groups/job_status/get` to determine whether this process has completed.\nPermission : Team member management.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/GroupSelector"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Groups - Delete"
      }
    }, 
    "/team/team_folder/update_sync_settings": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/TeamFolderUpdateSyncSettingsError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/TeamFolderMetadata"
            }
          }
        }, 
        "operationId": "TeamTeamFolderUpdateSyncSettings", 
        "description": "Updates the sync settings on a team folder or its contents.  Use of this endpoint requires that the team has team selective sync enabled.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/TeamFolderUpdateSyncSettingsArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Team Folder - Update Sync Settings"
      }
    }, 
    "/team/reports/get_storage": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/DateRangeError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/GetStorageReport"
            }
          }
        }, 
        "operationId": "TeamReportsGetStorage", 
        "description": "Retrieves reporting data about a team's storage usage.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/DateRange"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Reports - Get Storage"
      }
    }, 
    "/team/groups/members/add": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/GroupMembersAddError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/GroupMembersChangeResult"
            }
          }
        }, 
        "operationId": "TeamGroupsMembersAdd", 
        "description": "Adds members to a group.\nThe members are added immediately. However the granting of group-owned resources may take additional time. Use the :route:`groups/job_status/get` to determine whether this process has completed.\nPermission : Team member management.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/GroupMembersAddArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Groups - Members - Add"
      }
    }, 
    "/team/reports/get_activity": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/DateRangeError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/GetActivityReport"
            }
          }
        }, 
        "operationId": "TeamReportsGetActivity", 
        "description": "Retrieves reporting data about a team's user activity.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/DateRange"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Reports - Get Activity"
      }
    }, 
    "/team/member_space_limits/excluded_users/list": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/ExcludedUsersListError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/ExcludedUsersListResult"
            }
          }
        }, 
        "operationId": "TeamMemberSpaceLimitsExcludedUsersList", 
        "description": "List member space limits excluded users.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/ExcludedUsersListArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Member Space Limits - Excluded Users - List"
      }
    }, 
    "/team/members/remove/job_status/get": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/PollError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/PollEmptyResult"
            }
          }
        }, 
        "operationId": "TeamMembersRemoveJobStatusGet", 
        "description": "Once an async_job_id is returned from :route:`members/remove` , use this to poll the status of the asynchronous request.\nPermission : Team member management.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/PollArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Members - Remove - Job Status - Get"
      }
    }, 
    "/team/linked_apps/revoke_linked_app": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/RevokeLinkedAppError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "type": "null"
            }
          }
        }, 
        "operationId": "TeamLinkedAppsRevokeLinkedApp", 
        "description": "Revoke a linked application of the team member.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/RevokeLinkedApiAppArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Linked Apps - Revoke Linked App"
      }
    }, 
    "/team/groups/get_info": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/GroupsGetInfoError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "$ref": "#/definitions/GroupsGetInfoItem"
              }, 
              "type": "array"
            }
          }
        }, 
        "operationId": "TeamGroupsGetInfo", 
        "description": "Retrieves information about one or more groups. Note that the optional field  :field:`GroupFullInfo.members` is not returned for system-managed groups.\nPermission : Team Information.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/GroupsSelector"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Groups - Get Info"
      }
    }, 
    "/team/members/list/continue": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/MembersListContinueError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/MembersListResult"
            }
          }
        }, 
        "operationId": "TeamMembersListContinue", 
        "description": "Once a cursor has been retrieved from :route:`members/list`, use this to paginate through all team members.\nPermission : Team information.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/MembersListContinueArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Members - List - Continue"
      }
    }, 
    "/team/member_space_limits/get_custom_quota": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/CustomQuotaError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "$ref": "#/definitions/CustomQuotaResult"
              }, 
              "type": "array"
            }
          }
        }, 
        "operationId": "TeamMemberSpaceLimitsGetCustomQuota", 
        "description": "Get users custom quota. Returns none as the custom quota if none was set. A maximum of 1000 members can be specified in a single call.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/CustomQuotaUsersArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Member Space Limits - Get Custom Quota"
      }
    }, 
    "/team/groups/members/list": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/GroupSelectorError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/GroupsMembersListResult"
            }
          }
        }, 
        "operationId": "TeamGroupsMembersList", 
        "description": "Lists members of a group.\nPermission : Team Information.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/GroupsMembersListArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Groups - Members - List"
      }
    }, 
    "/team/members/set_profile": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/MembersSetProfileError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/TeamMemberInfo"
            }
          }
        }, 
        "operationId": "TeamMembersSetProfile", 
        "description": "Updates a team member's profile.\nPermission : Team member management.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/MembersSetProfileArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Members - Set Profile"
      }
    }, 
    "/team/member_space_limits/excluded_users/list/continue": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/ExcludedUsersListContinueError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/ExcludedUsersListResult"
            }
          }
        }, 
        "operationId": "TeamMemberSpaceLimitsExcludedUsersListContinue", 
        "description": "Continue listing member space limits excluded users.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/ExcludedUsersListContinueArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Member Space Limits - Excluded Users - List - Continue"
      }
    }, 
    "/team/properties/template/update": {
      "post": {
        "operationId": "TeamPropertiesTemplateUpdate", 
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/ModifyTemplateError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/UpdateTemplateResult"
            }
          }
        }, 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/UpdateTemplateArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Properties - Template - Update"
      }
    }, 
    "/team/member_space_limits/set_custom_quota": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/SetCustomQuotaError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "$ref": "#/definitions/CustomQuotaResult"
              }, 
              "type": "array"
            }
          }
        }, 
        "operationId": "TeamMemberSpaceLimitsSetCustomQuota", 
        "description": "Set users custom quota. Custom quota has to be at least 15GB. A maximum of 1000 members can be specified in a single call.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/SetCustomQuotaArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Member Space Limits - Set Custom Quota"
      }
    }, 
    "/team_log/get_events": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/GetTeamEventsError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/GetTeamEventsResult"
            }
          }
        }, 
        "operationId": "TeamLogGetEvents", 
        "description": "Retrieves team events.\nEvents have a lifespan of two years. Events older than two years will not be returned.\nMany attributes note 'may be missing due to historical data gap'.\nNote that the file_operations category and & analogous paper events are not available on all Dropbox Business :link:`plans /business/plans-comparison`. Use :link:`features/get_values /developers/documentation/http/teams#team-features-get_values` to check for this feature.\nPermission : Team Auditing.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/GetTeamEventsArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team Log - Get Events"
      }
    }, 
    "/team/groups/list": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "type": "null"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/GroupsListResult"
            }
          }
        }, 
        "operationId": "TeamGroupsList", 
        "description": "Lists groups on a team.\nPermission : Team Information.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/GroupsListArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Groups - List"
      }
    }, 
    "/team/get_info": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "type": "null"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/TeamGetInfoResult"
            }
          }
        }, 
        "operationId": "TeamGetInfo", 
        "description": "Retrieves information about a team.", 
        "parameters": [
          {
            "schema": {
              "type": "null"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Get Info"
      }
    }, 
    "/team/reports/get_membership": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/DateRangeError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/GetMembershipReport"
            }
          }
        }, 
        "operationId": "TeamReportsGetMembership", 
        "description": "Retrieves reporting data about a team's membership.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/DateRange"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Reports - Get Membership"
      }
    }, 
    "/team/devices/list_member_devices": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/ListMemberDevicesError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/ListMemberDevicesResult"
            }
          }
        }, 
        "operationId": "TeamDevicesListMemberDevices", 
        "description": "List all device sessions of a team's member.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/ListMemberDevicesArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Devices - List Member Devices"
      }
    }, 
    "/team/team_folder/activate": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/TeamFolderActivateError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/TeamFolderMetadata"
            }
          }
        }, 
        "operationId": "TeamTeamFolderActivate", 
        "description": "Sets an archived team folder's status to active.\nPermission : Team member file access.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/TeamFolderIdArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Team Folder - Activate"
      }
    }, 
    "/team/token/get_authenticated_admin": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/TokenGetAuthenticatedAdminError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/TokenGetAuthenticatedAdminResult"
            }
          }
        }, 
        "operationId": "TeamTokenGetAuthenticatedAdmin", 
        "description": "Returns the member profile of the admin who generated the team access token used to make the call.", 
        "parameters": [
          {
            "schema": {
              "type": "null"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Token - Get Authenticated Admin"
      }
    }, 
    "/team/features/get_values": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/FeaturesGetValuesBatchError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/FeaturesGetValuesBatchResult"
            }
          }
        }, 
        "operationId": "TeamFeaturesGetValues", 
        "description": "Get the values for one or more featues. This route allows you to check your account's capability for what feature you can access or what value you have for certain features.\nPermission : Team information.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/FeaturesGetValuesBatchArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Features - Get Values"
      }
    }, 
    "/team/linked_apps/list_member_linked_apps": {
      "post": {
        "responses": {
          "default": {
            "description": "Error", 
            "schema": {
              "$ref": "#/definitions/ListMemberAppsError"
            }
          }, 
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/ListMemberAppsResult"
            }
          }
        }, 
        "operationId": "TeamLinkedAppsListMemberLinkedApps", 
        "description": "List all linked applications of the team member.\nNote, this endpoint does not list any team-linked applications.", 
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/ListMemberAppsArg"
            }, 
            "name": "body", 
            "in": "body"
          }
        ], 
        "summary": "Team - Linked Apps - List Member Linked Apps"
      }
    }
  }, 
  "produces": [
    "application/json"
  ], 
  "basePath": "/2", 
  "host": "api.dropbox.com", 
  "definitions": {
    "TfaAddBackupPhoneType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "DeviceApprovalsPolicy": {
      "type": "object", 
      "description": "unlimited: None\nlimited: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "unlimited", 
            "limited", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of DeviceApprovalsPolicy"
        }
      }
    }, 
    "MembersSetPermissionsError": {
      "type": "object", 
      "description": "user_not_found: No matching user found. The provided team_member_id, email, or external_id does not exist on this team.\nlast_admin: Cannot remove the admin setting of the last admin.\nuser_not_in_team: The user is not a member of the team.\ncannot_set_permissions: Cannot remove/grant permissions.\nteam_license_limit: Team is full. The organization has no available licenses.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "user_not_found", 
            "last_admin", 
            "user_not_in_team", 
            "cannot_set_permissions", 
            "team_license_limit", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of MembersSetPermissionsError"
        }
      }
    }, 
    "TeamFolderCreateError": {
      "type": "object", 
      "description": "invalid_folder_name: The provided name cannot be used.\nfolder_name_already_used: There is already a team folder with the provided name.\nfolder_name_reserved: The provided name cannot be used because it is reserved.\nsync_settings_error: An error occurred setting the sync settings.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "invalid_folder_name", 
            "folder_name_already_used", 
            "folder_name_reserved", 
            "sync_settings_error", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of TeamFolderCreateError"
        }, 
        "sync_settings_error": {
          "$ref": "#/definitions/SyncSettingsError"
        }
      }
    }, 
    "FileRequestsEmailsRestrictedToTeamOnlyDetails": {
      "type": "object", 
      "description": "Enabled file request emails for team.\n", 
      "properties": {}
    }, 
    "DataPlacementRestrictionChangePolicyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SharedNoteOpenedDetails": {
      "type": "object", 
      "description": "Opened shared Paper doc.\n", 
      "properties": {}
    }, 
    "FileRenameType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "PaperContentRemoveMemberDetails": {
      "type": "object", 
      "description": "Removed team member from Paper doc/folder.\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "ShowcaseAddMemberDetails": {
      "type": "object", 
      "description": "Added member to showcase.\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "SmartSyncNotOptOutDetails": {
      "type": "object", 
      "description": "Opted team into Smart Sync.\nprevious_value: Previous Smart Sync opt out policy.\nnew_value: New Smart Sync opt out policy.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/SmartSyncOptOutPolicy"
        }, 
        "previous_value": {
          "$ref": "#/definitions/SmartSyncOptOutPolicy"
        }
      }
    }, 
    "MobileDeviceSessionLogInfo": {
      "type": "object", 
      "description": "Information about linked Dropbox mobile client sessions\ndevice_name: The device name.\nclient_type: The mobile application type.\nip_address: The IP address of the last activity from this session. Might be missing due to historical data gap.\ncreated: The time this session was created. Might be missing due to historical data gap.\nupdated: The time of the last activity from this session. Might be missing due to historical data gap.\nsession_info: Mobile session unique id. Might be missing due to historical data gap.\nclient_version: The Dropbox client version.\nos_version: The hosting OS version.\nlast_carrier: last carrier used by the device.\n", 
      "properties": {
        "updated": {
          "type": "string", 
          "description": "The time of the last activity from this session. Might be missing due to historical data gap."
        }, 
        "session_info": {
          "$ref": "#/definitions/MobileSessionLogInfo"
        }, 
        "created": {
          "type": "string", 
          "description": "The time this session was created. Might be missing due to historical data gap."
        }, 
        "device_name": {
          "type": "string", 
          "description": "The device name."
        }, 
        "os_version": {
          "type": "string", 
          "description": "The hosting OS version."
        }, 
        "client_type": {
          "$ref": "#/definitions/MobileClientPlatform"
        }, 
        "last_carrier": {
          "type": "string", 
          "description": "last carrier used by the device."
        }, 
        "client_version": {
          "type": "string", 
          "description": "The Dropbox client version."
        }, 
        "ip_address": {
          "type": "string", 
          "description": "The IP address of the last activity from this session. Might be missing due to historical data gap."
        }
      }
    }, 
    "PaperDocDeletedDetails": {
      "type": "object", 
      "description": "Archived Paper doc.\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "MemberSpaceLimitsAddExceptionDetails": {
      "type": "object", 
      "description": "Added members to member space limit exception list.\n", 
      "properties": {}
    }, 
    "MemberSpaceLimitsRemoveExceptionDetails": {
      "type": "object", 
      "description": "Removed members from member space limit exception list.\n", 
      "properties": {}
    }, 
    "SharedLinkDownloadType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "GroupChangeMemberRoleType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "AdminTier": {
      "type": "object", 
      "description": "Describes which team-related admin permissions a user has.\nteam_admin: User is an administrator of the team - has all permissions.\nuser_management_admin: User can do most user provisioning, de-provisioning and management.\nsupport_admin: User can do a limited set of common support tasks for existing users.\nmember_only: User is not an admin of the team.\n", 
      "properties": {
        ".tag": {
          "enum": [
            "team_admin", 
            "user_management_admin", 
            "support_admin", 
            "member_only"
          ], 
          "type": "string", 
          "title": "Choice of AdminTier"
        }
      }
    }, 
    "TeamFolderAccessError": {
      "type": "object", 
      "description": "invalid_team_folder_id: The team folder ID is invalid.\nno_access: The authenticated app does not have permission to manage that team folder.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "invalid_team_folder_id", 
            "no_access", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of TeamFolderAccessError"
        }
      }
    }, 
    "MemberChangeAdminRoleDetails": {
      "type": "object", 
      "description": "Changed team member admin role.\nnew_value: New admin role. This field is relevant when the admin role is changed or whenthe user role changes from no admin rights to with admin rights.\nprevious_value: Previous admin role. This field is relevant when the admin role is changed or when the admin role is removed.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/AdminRole"
        }, 
        "previous_value": {
          "$ref": "#/definitions/AdminRole"
        }
      }
    }, 
    "SmartSyncOptOutDetails": {
      "type": "object", 
      "description": "Opted team out of Smart Sync.\nprevious_value: Previous Smart Sync opt out policy.\nnew_value: New Smart Sync opt out policy.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/SmartSyncOptOutPolicy"
        }, 
        "previous_value": {
          "$ref": "#/definitions/SmartSyncOptOutPolicy"
        }
      }
    }, 
    "PropertyFieldTemplate": {
      "type": "object", 
      "description": "Defines how a single property field may be structured. Used exclusively by :type:`PropertyGroupTemplate`.\nname: Key of the property field being described. Property field keys can be up to 256 bytes.\ndescription: Description of the property field. Property field descriptions can be up to 1024 bytes.\ntype: Data type of the value of this property field. This type will be enforced upon property creation and modifications.\n", 
      "properties": {
        "type": {
          "$ref": "#/definitions/PropertyType"
        }, 
        "name": {
          "type": "string", 
          "description": "Key of the property field being described. Property field keys can be up to 256 bytes."
        }, 
        "description": {
          "type": "string", 
          "description": "Description of the property field. Property field descriptions can be up to 1024 bytes."
        }
      }
    }, 
    "DomainVerificationRemoveDomainType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "MembersGetInfoError": {
      "type": "object", 
      "description": "other: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "other"
          ], 
          "type": "string", 
          "title": "Choice of MembersGetInfoError"
        }
      }
    }, 
    "ShowcaseFileRemovedDetails": {
      "type": "object", 
      "description": "Removed file from showcase.\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "SfAddGroupType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "FeaturesGetValuesBatchError": {
      "type": "object", 
      "description": "empty_features_list: At least one :type:`Feature` must be included in the :type:`FeaturesGetValuesBatchArg`.features list.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "empty_features_list", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of FeaturesGetValuesBatchError"
        }
      }
    }, 
    "ShowcaseRequestAccessType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "ShowcaseFileDownloadDetails": {
      "type": "object", 
      "description": "Downloaded file from showcase.\nevent_uuid: Event unique identifier.\ndownload_type: Showcase download type.\n", 
      "properties": {
        "download_type": {
          "type": "string", 
          "description": "Showcase download type."
        }, 
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "ListMembersDevicesArg": {
      "type": "object", 
      "description": "cursor: At the first call to the :route:`devices/list_members_devices` the cursor shouldn't be passed. Then, if the result of the call includes a cursor, the following requests should include the received cursors in order to receive the next sub list of team devices.\ninclude_web_sessions: Whether to list web sessions of the team members.\ninclude_desktop_clients: Whether to list desktop clients of the team members.\ninclude_mobile_clients: Whether to list mobile clients of the team members.\n", 
      "properties": {
        "cursor": {
          "type": "string", 
          "description": "At the first call to the :route:`devices/list_members_devices` the cursor shouldn't be passed. Then, if the result of the call includes a cursor, the following requests should include the received cursors in order to receive the next sub list of team devices."
        }, 
        "include_desktop_clients": {
          "type": "boolean", 
          "description": "Whether to list desktop clients of the team members."
        }, 
        "include_web_sessions": {
          "type": "boolean", 
          "description": "Whether to list web sessions of the team members."
        }, 
        "include_mobile_clients": {
          "type": "boolean", 
          "description": "Whether to list mobile clients of the team members."
        }
      }
    }, 
    "FileDeleteCommentDetails": {
      "type": "object", 
      "description": "Deleted file comment.\ncomment_text: Comment text. Might be missing due to historical data gap.\n", 
      "properties": {
        "comment_text": {
          "type": "string", 
          "description": "Comment text. Might be missing due to historical data gap."
        }
      }
    }, 
    "ShowcaseRenamedDetails": {
      "type": "object", 
      "description": "Renamed showcase.\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "FileRevertDetails": {
      "type": "object", 
      "description": "Reverted files to previous version.\n", 
      "properties": {}
    }, 
    "AccountCaptureRelinquishAccountDetails": {
      "type": "object", 
      "description": "Account-captured user changed account email to personal email.\ndomain_name: Domain name.\n", 
      "properties": {
        "domain_name": {
          "type": "string", 
          "description": "Domain name."
        }
      }
    }, 
    "PaperEnabledUsersGroupRemovalDetails": {
      "type": "object", 
      "description": "Removed users from Paper-enabled users list.\n", 
      "properties": {}
    }, 
    "UserLinkedAppLogInfo": {
      "type": "object", 
      "description": "User linked app\napp_id: App unique ID. Might be missing due to historical data gap.\ndisplay_name: App display name. Might be missing due to historical data gap.\n", 
      "properties": {
        "display_name": {
          "type": "string", 
          "description": "App display name. Might be missing due to historical data gap."
        }, 
        "app_id": {
          "type": "string", 
          "description": "App unique ID. Might be missing due to historical data gap."
        }
      }
    }, 
    "SfFbInviteChangeRoleType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "UpdateTemplateArg": {
      "type": "object", 
      "description": "template_id: An identifier for template added by  See :route:`templates/add_for_user` or :route:`templates/add_for_team`.\nname: A display name for the template. template names can be up to 256 bytes.\ndescription: Description for the new template. Template descriptions can be up to 1024 bytes.\nadd_fields: Property field templates to be added to the group template. There can be up to 32 properties in a single template.\n", 
      "properties": {
        "add_fields": {
          "items": {
            "$ref": "#/definitions/PropertyFieldTemplate"
          }, 
          "type": "array", 
          "description": "Property field templates to be added to the group template. There can be up to 32 properties in a single template."
        }, 
        "description": {
          "type": "string", 
          "description": "Description for the new template. Template descriptions can be up to 1024 bytes."
        }, 
        "template_id": {
          "type": "string", 
          "description": "An identifier for template added by  See :route:`templates/add_for_user` or :route:`templates/add_for_team`."
        }, 
        "name": {
          "type": "string", 
          "description": "A display name for the template. template names can be up to 256 bytes."
        }
      }
    }, 
    "SharedContentDownloadType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "CreateFolderType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "ListMembersAppsError": {
      "type": "object", 
      "description": "Error returned by :route:`linked_apps/list_members_linked_apps`.\nreset: Indicates that the cursor has been invalidated. Call :route:`linked_apps/list_members_linked_apps` again with an empty cursor to obtain a new cursor.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "reset", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of ListMembersAppsError"
        }
      }
    }, 
    "MembersAddJobStatus": {
      "type": "object", 
      "description": "in_progress: The asynchronous job is still in progress.\ncomplete: The asynchronous job has finished. For each member that was specified in the parameter :type:`MembersAddArg` that was provided to :route:`members/add`, a corresponding item is returned in this list.\nfailed: The asynchronous job returned an error. The string contains an error message.\n", 
      "properties": {
        "failed": {
          "type": "string", 
          "description": "The asynchronous job returned an error. The string contains an error message."
        }, 
        ".tag": {
          "enum": [
            "in_progress", 
            "complete", 
            "failed"
          ], 
          "type": "string", 
          "title": "Choice of MembersAddJobStatus"
        }, 
        "complete": {
          "items": {
            "$ref": "#/definitions/MemberAddResult"
          }, 
          "type": "array", 
          "description": "The asynchronous job has finished. For each member that was specified in the parameter :type:`MembersAddArg` that was provided to :route:`members/add`, a corresponding item is returned in this list."
        }
      }
    }, 
    "FileRequestsEmailsRestrictedToTeamOnlyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "DomainInvitesDeclineRequestToJoinTeamType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "ShowcaseFileDownloadType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "DeviceChangeIpMobileDetails": {
      "type": "object", 
      "description": "Changed IP address associated with active mobile session.\ndevice_session_info: Device's session logged information.\n", 
      "properties": {
        "device_session_info": {
          "$ref": "#/definitions/DeviceSessionLogInfo"
        }
      }
    }, 
    "ExcludedUsersListContinueError": {
      "type": "object", 
      "description": "Excluded users list continue error.\ninvalid_cursor: The cursor is invalid.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "invalid_cursor", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of ExcludedUsersListContinueError"
        }
      }
    }, 
    "UserCustomQuotaArg": {
      "type": "object", 
      "description": "User and their required custom quota in GB (1 TB = 1024 GB).\nuser: None\nquota_gb: None\n", 
      "properties": {
        "quota_gb": {
          "type": "number"
        }, 
        "user": {
          "$ref": "#/definitions/UserSelectorArg"
        }
      }
    }, 
    "GroupLogInfo": {
      "type": "object", 
      "description": "Group's logged information.\ndisplay_name: The name of this group.\ngroup_id: The unique id of this group. Might be missing due to historical data gap.\nexternal_id: External group ID. Might be missing due to historical data gap.\n", 
      "properties": {
        "external_id": {
          "type": "string", 
          "description": "External group ID. Might be missing due to historical data gap."
        }, 
        "group_id": {
          "type": "string", 
          "description": "The unique id of this group. Might be missing due to historical data gap."
        }, 
        "display_name": {
          "type": "string", 
          "description": "The name of this group."
        }
      }
    }, 
    "TwoAccountPolicy": {
      "type": "object", 
      "description": "Policy for pairing personal account to work account\ndisabled: None\nenabled: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "disabled", 
            "enabled", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of TwoAccountPolicy"
        }
      }
    }, 
    "PaperDocTrashedType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "ContentSyncSetting": {
      "type": "object", 
      "description": "id: Id of the item this setting is applied to.\nsync_setting: Setting for this item.\n", 
      "properties": {
        "sync_setting": {
          "$ref": "#/definitions/SyncSetting"
        }, 
        "id": {
          "type": "string", 
          "description": "Id of the item this setting is applied to."
        }
      }
    }, 
    "FileDeleteCommentType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "TfaRemoveSecurityKeyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "MemberAddNameType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "TeamFolderStatus": {
      "type": "object", 
      "description": "active: The team folder and sub-folders are available to all members.\narchived: The team folder is not accessible outside of the team folder manager.\narchive_in_progress: The team folder is not accessible outside of the team folder manager.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "active", 
            "archived", 
            "archive_in_progress", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of TeamFolderStatus"
        }
      }
    }, 
    "FileRevertType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "FileEditType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SharedContentClaimInvitationDetails": {
      "type": "object", 
      "description": "Acquired membership of shared file/folder by accepting invite.\nshared_content_link: Shared content link.\n", 
      "properties": {
        "shared_content_link": {
          "type": "string", 
          "description": "Shared content link."
        }
      }
    }, 
    "PaperFolderDeletedDetails": {
      "type": "object", 
      "description": "Archived Paper folder.\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "EmmRemoveExceptionDetails": {
      "type": "object", 
      "description": "Removed members from EMM exception list.\n", 
      "properties": {}
    }, 
    "PaperDocChangeMemberRoleDetails": {
      "type": "object", 
      "description": "Changed team member permissions for Paper doc.\nevent_uuid: Event unique identifier.\naccess_type: Paper doc access type.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }, 
        "access_type": {
          "$ref": "#/definitions/PaperAccessType"
        }
      }
    }, 
    "SecondaryMailsPolicy": {
      "type": "object", 
      "description": "disabled: None\nenabled: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "disabled", 
            "enabled", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of SecondaryMailsPolicy"
        }
      }
    }, 
    "SharedFolderMemberPolicy": {
      "type": "object", 
      "description": "Policy governing who can be a member of a folder shared by a team member.\nteam: Only a teammate can be a member of a folder shared by a team member.\nanyone: Anyone can be a member of a folder shared by a team member.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "team", 
            "anyone", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of SharedFolderMemberPolicy"
        }
      }
    }, 
    "PaperContentRestoreDetails": {
      "type": "object", 
      "description": "Restored archived Paper doc/folder.\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "ListMembersAppsArg": {
      "type": "object", 
      "description": "Arguments for :route:`linked_apps/list_members_linked_apps`.\ncursor: At the first call to the :route:`linked_apps/list_members_linked_apps` the cursor shouldn't be passed. Then, if the result of the call includes a cursor, the following requests should include the received cursors in order to receive the next sub list of the team applications.\n", 
      "properties": {
        "cursor": {
          "type": "string", 
          "description": "At the first call to the :route:`linked_apps/list_members_linked_apps` the cursor shouldn't be passed. Then, if the result of the call includes a cursor, the following requests should include the received cursors in order to receive the next sub list of the team applications."
        }
      }
    }, 
    "MemberSuggestDetails": {
      "type": "object", 
      "description": "Suggested person to add to team.\nsuggested_members: suggested users emails.\n", 
      "properties": {
        "suggested_members": {
          "items": {
            "type": "string"
          }, 
          "type": "array", 
          "description": "suggested users emails."
        }
      }
    }, 
    "ResellerSupportSessionStartType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "ExcludedUsersUpdateError": {
      "type": "object", 
      "description": "Excluded users update error.\nusers_not_in_team: At least one of the users is not part of your team.\ntoo_many_users: A maximum of 1000 users for each of addition/removal can be supplied.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "users_not_in_team", 
            "too_many_users", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of ExcludedUsersUpdateError"
        }
      }
    }, 
    "SsoErrorType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "FileMoveDetails": {
      "type": "object", 
      "description": "Moved files and/or folders.\nrelocate_action_details: Relocate action details.\n", 
      "properties": {
        "relocate_action_details": {
          "items": {
            "$ref": "#/definitions/RelocateAssetReferencesLogInfo"
          }, 
          "type": "array", 
          "description": "Relocate action details."
        }
      }
    }, 
    "MemberChangeStatusDetails": {
      "type": "object", 
      "description": "Changed member status (invited, joined, suspended, etc.).\nnew_value: New member status.\nprevious_value: Previous member status. Might be missing due to historical data gap.\naction: Additional information indicating the action taken that caused status change.\n", 
      "properties": {
        "action": {
          "$ref": "#/definitions/ActionDetails"
        }, 
        "new_value": {
          "$ref": "#/definitions/MemberStatus"
        }, 
        "previous_value": {
          "$ref": "#/definitions/MemberStatus"
        }
      }
    }, 
    "CustomQuotaResult": {
      "type": "object", 
      "description": "User custom quota.\nsuccess: User's custom quota.\ninvalid_user: Invalid user (not in team).\nother: None\n", 
      "properties": {
        "invalid_user": {
          "$ref": "#/definitions/UserSelectorArg"
        }, 
        ".tag": {
          "enum": [
            "success", 
            "invalid_user", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of CustomQuotaResult"
        }, 
        "success": {
          "$ref": "#/definitions/UserCustomQuotaResult"
        }
      }
    }, 
    "TeamFolderArchiveArg": {
      "type": "object", 
      "description": "team_folder_id: The ID of the team folder.\nforce_async_off: Whether to force the archive to happen synchronously.\n", 
      "properties": {
        "team_folder_id": {
          "type": "string", 
          "description": "The ID of the team folder."
        }, 
        "force_async_off": {
          "type": "boolean", 
          "description": "Whether to force the archive to happen synchronously."
        }
      }
    }, 
    "TfaAddSecurityKeyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "DomainVerificationAddDomainFailType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "PaperEnabledUsersGroupAdditionDetails": {
      "type": "object", 
      "description": "Added users to Paper-enabled users list.\n", 
      "properties": {}
    }, 
    "TeamFolderUpdateSyncSettingsArg": {
      "type": "object", 
      "description": "team_folder_id: The ID of the team folder.\nsync_setting: Sync setting to apply to the team folder itself. Only meaningful if the team folder is not a shared team root.\ncontent_sync_settings: Sync settings to apply to contents of this team folder.\n", 
      "properties": {
        "team_folder_id": {
          "type": "string", 
          "description": "The ID of the team folder."
        }, 
        "content_sync_settings": {
          "items": {
            "$ref": "#/definitions/ContentSyncSettingArg"
          }, 
          "type": "array", 
          "description": "Sync settings to apply to contents of this team folder."
        }, 
        "sync_setting": {
          "$ref": "#/definitions/SyncSettingArg"
        }
      }
    }, 
    "GroupsMembersListArg": {
      "type": "object", 
      "description": "group: The group whose members are to be listed.\nlimit: Number of results to return per call.\n", 
      "properties": {
        "limit": {
          "type": "number", 
          "description": "Number of results to return per call."
        }, 
        "group": {
          "$ref": "#/definitions/GroupSelector"
        }
      }
    }, 
    "SpaceCapsType": {
      "type": "object", 
      "description": "Space limit alert policy\nhard: None\noff: None\nsoft: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "hard", 
            "off", 
            "soft", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of SpaceCapsType"
        }
      }
    }, 
    "MemberSpaceLimitsRemoveCustomQuotaType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "GroupRemoveMemberDetails": {
      "type": "object", 
      "description": "Removed team members from group.\n", 
      "properties": {}
    }, 
    "ShowcaseChangeExternalSharingPolicyDetails": {
      "type": "object", 
      "description": "Enabled/disabled sharing Dropbox Showcase externally for team.\nnew_value: New Dropbox Showcase external sharing policy.\nprevious_value: Previous Dropbox Showcase external sharing policy.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/ShowcaseExternalSharingPolicy"
        }, 
        "previous_value": {
          "$ref": "#/definitions/ShowcaseExternalSharingPolicy"
        }
      }
    }, 
    "MemberTransferAccountContentsType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SharedLinkShareDetails": {
      "type": "object", 
      "description": "Added members as audience of shared link.\nshared_link_owner: Shared link owner details. Might be missing due to historical data gap.\nexternal_users: Users without a Dropbox account that were added as shared link audience.\n", 
      "properties": {
        "shared_link_owner": {
          "$ref": "#/definitions/UserLogInfo"
        }, 
        "external_users": {
          "items": {
            "$ref": "#/definitions/ExternalUserLogInfo"
          }, 
          "type": "array", 
          "description": "Users without a Dropbox account that were added as shared link audience."
        }
      }
    }, 
    "SharedContentChangeInviteeRoleDetails": {
      "type": "object", 
      "description": "Changed access type of invitee to shared file/folder before invite was accepted.\nnew_access_level: New access level.\ninvitee: The invitee whose role was changed.\nprevious_access_level: Previous access level. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_access_level": {
          "$ref": "#/definitions/AccessLevel"
        }, 
        "previous_access_level": {
          "$ref": "#/definitions/AccessLevel"
        }, 
        "invitee": {
          "type": "string", 
          "description": "The invitee whose role was changed."
        }
      }
    }, 
    "DeviceManagementEnabledType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "PaperFolderLogInfo": {
      "type": "object", 
      "description": "Paper folder's logged information.\nfolder_id: Papers folder Id.\nfolder_name: Paper folder name.\n", 
      "properties": {
        "folder_id": {
          "type": "string", 
          "description": "Papers folder Id."
        }, 
        "folder_name": {
          "type": "string", 
          "description": "Paper folder name."
        }
      }
    }, 
    "NoteAclLinkType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "AdminRole": {
      "type": "object", 
      "description": "team_admin: None\nuser_management_admin: None\nsupport_admin: None\nlimited_admin: None\nmember_only: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "team_admin", 
            "user_management_admin", 
            "support_admin", 
            "limited_admin", 
            "member_only", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of AdminRole"
        }
      }
    }, 
    "TfaChangeBackupPhoneDetails": {
      "type": "object", 
      "description": "Changed backup phone for two-step verification.\n", 
      "properties": {}
    }, 
    "EmmCreateUsageReportType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "PaperAccessType": {
      "type": "object", 
      "description": "viewer: None\ncommenter: None\neditor: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "viewer", 
            "commenter", 
            "editor", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of PaperAccessType"
        }
      }
    }, 
    "PaperDocumentLogInfo": {
      "type": "object", 
      "description": "Paper document's logged information.\ndoc_id: Papers document Id.\ndoc_title: Paper document title.\n", 
      "properties": {
        "doc_title": {
          "type": "string", 
          "description": "Paper document title."
        }, 
        "doc_id": {
          "type": "string", 
          "description": "Papers document Id."
        }
      }
    }, 
    "MemberRequestsChangePolicyDetails": {
      "type": "object", 
      "description": "Changed whether users can find team when not invited.\nnew_value: New member change requests policy.\nprevious_value: Previous member change requests policy. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/MemberRequestsPolicy"
        }, 
        "previous_value": {
          "$ref": "#/definitions/MemberRequestsPolicy"
        }
      }
    }, 
    "AppLogInfo": {
      "type": "object", 
      "description": "App's logged information.\napp_id: App unique ID. Might be missing due to historical data gap.\ndisplay_name: App display name. Might be missing due to historical data gap.\n", 
      "properties": {
        "display_name": {
          "type": "string", 
          "description": "App display name. Might be missing due to historical data gap."
        }, 
        "app_id": {
          "type": "string", 
          "description": "App unique ID. Might be missing due to historical data gap."
        }
      }
    }, 
    "AccountCaptureNotificationEmailsSentDetails": {
      "type": "object", 
      "description": "Sent proactive account capture email to all unmanaged members.\ndomain_name: Domain name.\n", 
      "properties": {
        "domain_name": {
          "type": "string", 
          "description": "Domain name."
        }
      }
    }, 
    "TokenGetAuthenticatedAdminResult": {
      "type": "object", 
      "description": "Results for :route:`token/get_authenticated_admin`.\nadmin_profile: The admin who authorized the token.\n", 
      "properties": {
        "admin_profile": {
          "$ref": "#/definitions/TeamMemberProfile"
        }
      }
    }, 
    "MembersDeactivateArg": {
      "type": "object", 
      "description": "Exactly one of team_member_id, email, or external_id must be provided to identify the user account.\nuser: Identity of user to remove/suspend.\nwipe_data: If provided, controls if the user's data will be deleted on their linked devices.\n", 
      "properties": {
        "user": {
          "$ref": "#/definitions/UserSelectorArg"
        }, 
        "wipe_data": {
          "type": "boolean", 
          "description": "If provided, controls if the user's data will be deleted on their linked devices."
        }
      }
    }, 
    "MembersSetPermissionsResult": {
      "type": "object", 
      "description": "team_member_id: The member ID of the user to which the change was applied.\nrole: The role after the change.\n", 
      "properties": {
        "team_member_id": {
          "type": "string", 
          "description": "The member ID of the user to which the change was applied."
        }, 
        "role": {
          "$ref": "#/definitions/AdminTier"
        }
      }
    }, 
    "GroupSelector": {
      "type": "object", 
      "description": "Argument for selecting a single group, either by group_id or by external group ID.\ngroup_id: Group ID.\ngroup_external_id: External ID of the group.\n", 
      "properties": {
        "group_external_id": {
          "type": "string", 
          "description": "External ID of the group."
        }, 
        "group_id": {
          "type": "string", 
          "description": "Group ID."
        }, 
        ".tag": {
          "enum": [
            "group_id", 
            "group_external_id"
          ], 
          "type": "string", 
          "title": "Choice of GroupSelector"
        }
      }
    }, 
    "RemoveCustomQuotaResult": {
      "type": "object", 
      "description": "User result for setting member custom quota.\nsuccess: Successfully removed user.\ninvalid_user: Invalid user (not in team).\nother: None\n", 
      "properties": {
        "invalid_user": {
          "$ref": "#/definitions/UserSelectorArg"
        }, 
        ".tag": {
          "enum": [
            "success", 
            "invalid_user", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of RemoveCustomQuotaResult"
        }, 
        "success": {
          "$ref": "#/definitions/UserSelectorArg"
        }
      }
    }, 
    "SharingLinkPolicy": {
      "type": "object", 
      "description": "Policy for controlling if team members can share links externally\ndefault_private: None\ndefault_public: None\nonly_private: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "default_private", 
            "default_public", 
            "only_private", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of SharingLinkPolicy"
        }
      }
    }, 
    "WebDeviceSessionLogInfo": {
      "type": "object", 
      "description": "Information on active web sessions\nuser_agent: Information on the hosting device.\nos: Information on the hosting operating system.\nbrowser: Information on the browser used for this web session.\nip_address: The IP address of the last activity from this session. Might be missing due to historical data gap.\ncreated: The time this session was created. Might be missing due to historical data gap.\nupdated: The time of the last activity from this session. Might be missing due to historical data gap.\nsession_info: Web session unique id. Might be missing due to historical data gap.\n", 
      "properties": {
        "updated": {
          "type": "string", 
          "description": "The time of the last activity from this session. Might be missing due to historical data gap."
        }, 
        "session_info": {
          "$ref": "#/definitions/WebSessionLogInfo"
        }, 
        "ip_address": {
          "type": "string", 
          "description": "The IP address of the last activity from this session. Might be missing due to historical data gap."
        }, 
        "created": {
          "type": "string", 
          "description": "The time this session was created. Might be missing due to historical data gap."
        }, 
        "user_agent": {
          "type": "string", 
          "description": "Information on the hosting device."
        }, 
        "os": {
          "type": "string", 
          "description": "Information on the hosting operating system."
        }, 
        "browser": {
          "type": "string", 
          "description": "Information on the browser used for this web session."
        }
      }
    }, 
    "AllowDownloadDisabledType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "GroupsSelector": {
      "type": "object", 
      "description": "Argument for selecting a list of groups, either by group_ids, or external group IDs.\ngroup_ids: List of group IDs.\ngroup_external_ids: List of external IDs of groups.\n", 
      "properties": {
        "group_external_ids": {
          "items": {
            "type": "string"
          }, 
          "type": "array", 
          "description": "List of external IDs of groups."
        }, 
        ".tag": {
          "enum": [
            "group_ids", 
            "group_external_ids"
          ], 
          "type": "string", 
          "title": "Choice of GroupsSelector"
        }, 
        "group_ids": {
          "items": {
            "type": "string"
          }, 
          "type": "array", 
          "description": "List of group IDs."
        }
      }
    }, 
    "ShowcaseViewType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "TfaResetType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "MemberSpaceLimitsAddCustomQuotaDetails": {
      "type": "object", 
      "description": "Set custom member space limit.\nnew_value: New custom quota value in bytes.\n", 
      "properties": {
        "new_value": {
          "type": "number", 
          "description": "New custom quota value in bytes."
        }
      }
    }, 
    "PaperDocMentionType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "FileCommentsPolicy": {
      "type": "object", 
      "description": "File comments policy\ndisabled: None\nenabled: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "disabled", 
            "enabled", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of FileCommentsPolicy"
        }
      }
    }, 
    "ListTeamAppsArg": {
      "type": "object", 
      "description": "Arguments for :route:`linked_apps/list_team_linked_apps`.\ncursor: At the first call to the :route:`linked_apps/list_team_linked_apps` the cursor shouldn't be passed. Then, if the result of the call includes a cursor, the following requests should include the received cursors in order to receive the next sub list of the team applications.\n", 
      "properties": {
        "cursor": {
          "type": "string", 
          "description": "At the first call to the :route:`linked_apps/list_team_linked_apps` the cursor shouldn't be passed. Then, if the result of the call includes a cursor, the following requests should include the received cursors in order to receive the next sub list of the team applications."
        }
      }
    }, 
    "TfaAddBackupPhoneDetails": {
      "type": "object", 
      "description": "Added backup phone for two-step verification.\n", 
      "properties": {}
    }, 
    "ExtendedVersionHistoryPolicy": {
      "type": "object", 
      "description": "explicitly_limited: None\nexplicitly_unlimited: None\nimplicitly_limited: None\nimplicitly_unlimited: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "explicitly_limited", 
            "explicitly_unlimited", 
            "implicitly_limited", 
            "implicitly_unlimited", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of ExtendedVersionHistoryPolicy"
        }
      }
    }, 
    "TeamFolderIdArg": {
      "type": "object", 
      "description": "team_folder_id: The ID of the team folder.\n", 
      "properties": {
        "team_folder_id": {
          "type": "string", 
          "description": "The ID of the team folder."
        }
      }
    }, 
    "TeamFolderCreateDetails": {
      "type": "object", 
      "description": "Created team folder in active status.\n", 
      "properties": {}
    }, 
    "MemberSpaceLimitsChangeCustomQuotaDetails": {
      "type": "object", 
      "description": "Changed custom member space limit.\nprevious_value: Previous custom quota value in bytes.\nnew_value: New custom quota value in bytes.\n", 
      "properties": {
        "new_value": {
          "type": "number", 
          "description": "New custom quota value in bytes."
        }, 
        "previous_value": {
          "type": "number", 
          "description": "Previous custom quota value in bytes."
        }
      }
    }, 
    "SfTeamGrantAccessType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SignInAsSessionStartDetails": {
      "type": "object", 
      "description": "Started admin sign-in-as session.\n", 
      "properties": {}
    }, 
    "JoinTeamDetails": {
      "type": "object", 
      "description": "Additional information relevant when a new member joins the team.\nlinked_apps: Linked applications.\nlinked_devices: Linked devices.\nlinked_shared_folders: Linked shared folders.\n", 
      "properties": {
        "linked_apps": {
          "items": {
            "$ref": "#/definitions/UserLinkedAppLogInfo"
          }, 
          "type": "array", 
          "description": "Linked applications."
        }, 
        "linked_shared_folders": {
          "items": {
            "$ref": "#/definitions/FolderLogInfo"
          }, 
          "type": "array", 
          "description": "Linked shared folders."
        }, 
        "linked_devices": {
          "items": {
            "$ref": "#/definitions/LinkedDeviceLogInfo"
          }, 
          "type": "array", 
          "description": "Linked devices."
        }
      }
    }, 
    "PaperDocChangeMemberRoleType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "DirectoryRestrictionsAddMembersDetails": {
      "type": "object", 
      "description": "Added members to directory restrictions list.\n", 
      "properties": {}
    }, 
    "MemberPolicy": {
      "type": "object", 
      "description": "Policy governing who can be a member of a shared folder. Only applicable to folders owned by a user on a team.\nteam: Only a teammate can become a member.\nanyone: Anyone can become a member.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "team", 
            "anyone", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of MemberPolicy"
        }
      }
    }, 
    "ShowcaseChangeDownloadPolicyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SharedLinkChangeExpiryType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "DomainVerificationAddDomainSuccessDetails": {
      "type": "object", 
      "description": "Verified team domain.\ndomain_names: Domain names.\nverification_method: Domain name verification method. Might be missing due to historical data gap.\n", 
      "properties": {
        "verification_method": {
          "type": "string", 
          "description": "Domain name verification method. Might be missing due to historical data gap."
        }, 
        "domain_names": {
          "items": {
            "type": "string"
          }, 
          "type": "array", 
          "description": "Domain names."
        }
      }
    }, 
    "GroupDeleteDetails": {
      "type": "object", 
      "description": "Deleted group.\nis_company_managed: Is company managed group. Might be missing due to historical data gap.\n", 
      "properties": {
        "is_company_managed": {
          "type": "boolean", 
          "description": "Is company managed group. Might be missing due to historical data gap."
        }
      }
    }, 
    "FileMoveType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "ExcludedUsersListArg": {
      "type": "object", 
      "description": "Excluded users list argument.\nlimit: Number of results to return per call.\n", 
      "properties": {
        "limit": {
          "type": "number", 
          "description": "Number of results to return per call."
        }
      }
    }, 
    "SharedContentRemoveInviteesDetails": {
      "type": "object", 
      "description": "Removed invitee from shared file/folder before invite was accepted.\ninvitees: A list of invitees.\n", 
      "properties": {
        "invitees": {
          "items": {
            "type": "string"
          }, 
          "type": "array", 
          "description": "A list of invitees."
        }
      }
    }, 
    "EventType": {
      "type": "object", 
      "description": "The type of the event.\napp_link_team: (apps) Linked app for team\napp_link_user: (apps) Linked app for member\napp_unlink_team: (apps) Unlinked app for team\napp_unlink_user: (apps) Unlinked app for member\nfile_add_comment: (comments) Added file comment\nfile_change_comment_subscription: (comments) Subscribed to or unsubscribed from comment notifications for file\nfile_delete_comment: (comments) Deleted file comment\nfile_like_comment: (comments) Liked file comment (deprecated, no longer logged)\nfile_resolve_comment: (comments) Resolved file comment\nfile_unlike_comment: (comments) Unliked file comment (deprecated, no longer logged)\nfile_unresolve_comment: (comments) Unresolved file comment\ndevice_change_ip_desktop: (devices) Changed IP address associated with active desktop session\ndevice_change_ip_mobile: (devices) Changed IP address associated with active mobile session\ndevice_change_ip_web: (devices) Changed IP address associated with active web session\ndevice_delete_on_unlink_fail: (devices) Failed to delete all files from unlinked device\ndevice_delete_on_unlink_success: (devices) Deleted all files from unlinked device\ndevice_link_fail: (devices) Failed to link device\ndevice_link_success: (devices) Linked device\ndevice_management_disabled: (devices) Disabled device management (deprecated, no longer logged)\ndevice_management_enabled: (devices) Enabled device management (deprecated, no longer logged)\ndevice_unlink: (devices) Disconnected device\nemm_refresh_auth_token: (devices) Refreshed auth token used for setting up enterprise mobility management\naccount_capture_change_availability: (domains) Granted/revoked option to enable account capture on team domains\naccount_capture_migrate_account: (domains) Account-captured user migrated account to team\naccount_capture_notification_emails_sent: (domains) Sent proactive account capture email to all unmanaged members\naccount_capture_relinquish_account: (domains) Account-captured user changed account email to personal email\ndisabled_domain_invites: (domains) Disabled domain invites (deprecated, no longer logged)\ndomain_invites_approve_request_to_join_team: (domains) Approved user's request to join team\ndomain_invites_decline_request_to_join_team: (domains) Declined user's request to join team\ndomain_invites_email_existing_users: (domains) Sent domain invites to existing domain accounts (deprecated, no longer logged)\ndomain_invites_request_to_join_team: (domains) Requested to join team\ndomain_invites_set_invite_new_user_pref_to_no: (domains) Disabled \"Automatically invite new users\" (deprecated, no longer logged)\ndomain_invites_set_invite_new_user_pref_to_yes: (domains) Enabled \"Automatically invite new users\" (deprecated, no longer logged)\ndomain_verification_add_domain_fail: (domains) Failed to verify team domain\ndomain_verification_add_domain_success: (domains) Verified team domain\ndomain_verification_remove_domain: (domains) Removed domain from list of verified team domains\nenabled_domain_invites: (domains) Enabled domain invites (deprecated, no longer logged)\ncreate_folder: (file_operations) Created folders (deprecated, no longer logged)\nfile_add: (file_operations) Added files and/or folders\nfile_copy: (file_operations) Copied files and/or folders\nfile_delete: (file_operations) Deleted files and/or folders\nfile_download: (file_operations) Downloaded files and/or folders\nfile_edit: (file_operations) Edited files\nfile_get_copy_reference: (file_operations) Created copy reference to file/folder\nfile_move: (file_operations) Moved files and/or folders\nfile_permanently_delete: (file_operations) Permanently deleted files and/or folders\nfile_preview: (file_operations) Previewed files and/or folders\nfile_rename: (file_operations) Renamed files and/or folders\nfile_restore: (file_operations) Restored deleted files and/or folders\nfile_revert: (file_operations) Reverted files to previous version\nfile_rollback_changes: (file_operations) Rolled back file actions\nfile_save_copy_reference: (file_operations) Saved file/folder using copy reference\nfile_request_change: (file_requests) Changed file request\nfile_request_close: (file_requests) Closed file request\nfile_request_create: (file_requests) Created file request\nfile_request_receive_file: (file_requests) Received files for file request\ngroup_add_external_id: (groups) Added external ID for group\ngroup_add_member: (groups) Added team members to group\ngroup_change_external_id: (groups) Changed external ID for group\ngroup_change_management_type: (groups) Changed group management type\ngroup_change_member_role: (groups) Changed manager permissions of group member\ngroup_create: (groups) Created group\ngroup_delete: (groups) Deleted group\ngroup_description_updated: (groups) Updated group (deprecated, no longer logged)\ngroup_join_policy_updated: (groups) Updated group join policy (deprecated, no longer logged)\ngroup_moved: (groups) Moved group (deprecated, no longer logged)\ngroup_remove_external_id: (groups) Removed external ID for group\ngroup_remove_member: (groups) Removed team members from group\ngroup_rename: (groups) Renamed group\nemm_error: (logins) Failed to sign in via EMM (deprecated, replaced by 'Failed to sign in')\nlogin_fail: (logins) Failed to sign in\nlogin_success: (logins) Signed in\nlogout: (logins) Signed out\nreseller_support_session_end: (logins) Ended reseller support session\nreseller_support_session_start: (logins) Started reseller support session\nsign_in_as_session_end: (logins) Ended admin sign-in-as session\nsign_in_as_session_start: (logins) Started admin sign-in-as session\nsso_error: (logins) Failed to sign in via SSO (deprecated, replaced by 'Failed to sign in')\nmember_add_name: (members) Added team member name\nmember_change_admin_role: (members) Changed team member admin role\nmember_change_email: (members) Changed team member email\nmember_change_membership_type: (members) Changed membership type (limited/full) of member (deprecated, no longer logged)\nmember_change_name: (members) Changed team member name\nmember_change_status: (members) Changed member status (invited, joined, suspended, etc.)\nmember_permanently_delete_account_contents: (members) Permanently deleted contents of deleted team member account\nmember_space_limits_add_custom_quota: (members) Set custom member space limit\nmember_space_limits_change_custom_quota: (members) Changed custom member space limit\nmember_space_limits_change_status: (members) Changed space limit status\nmember_space_limits_remove_custom_quota: (members) Removed custom member space limit\nmember_suggest: (members) Suggested person to add to team\nmember_transfer_account_contents: (members) Transferred contents of deleted member account to another member\nsecondary_mails_policy_changed: (members) Secondary mails policy changed\npaper_content_add_member: (paper) Added team member to Paper doc/folder\npaper_content_add_to_folder: (paper) Added Paper doc/folder to folder\npaper_content_archive: (paper) Archived Paper doc/folder\npaper_content_create: (paper) Created Paper doc/folder\npaper_content_permanently_delete: (paper) Permanently deleted Paper doc/folder\npaper_content_remove_from_folder: (paper) Removed Paper doc/folder from folder\npaper_content_remove_member: (paper) Removed team member from Paper doc/folder\npaper_content_rename: (paper) Renamed Paper doc/folder\npaper_content_restore: (paper) Restored archived Paper doc/folder\npaper_doc_add_comment: (paper) Added Paper doc comment\npaper_doc_change_member_role: (paper) Changed team member permissions for Paper doc\npaper_doc_change_sharing_policy: (paper) Changed sharing setting for Paper doc\npaper_doc_change_subscription: (paper) Followed/unfollowed Paper doc\npaper_doc_deleted: (paper) Archived Paper doc (deprecated, no longer logged)\npaper_doc_delete_comment: (paper) Deleted Paper doc comment\npaper_doc_download: (paper) Downloaded Paper doc in specific format\npaper_doc_edit: (paper) Edited Paper doc\npaper_doc_edit_comment: (paper) Edited Paper doc comment\npaper_doc_followed: (paper) Followed Paper doc (deprecated, replaced by 'Followed/unfollowed Paper doc')\npaper_doc_mention: (paper) Mentioned team member in Paper doc\npaper_doc_request_access: (paper) Requested access to Paper doc\npaper_doc_resolve_comment: (paper) Resolved Paper doc comment\npaper_doc_revert: (paper) Restored Paper doc to previous version\npaper_doc_slack_share: (paper) Shared Paper doc via Slack\npaper_doc_team_invite: (paper) Shared Paper doc with team member (deprecated, no longer logged)\npaper_doc_trashed: (paper) Deleted Paper doc\npaper_doc_unresolve_comment: (paper) Unresolved Paper doc comment\npaper_doc_untrashed: (paper) Restored Paper doc\npaper_doc_view: (paper) Viewed Paper doc\npaper_external_view_allow: (paper) Changed Paper external sharing setting to anyone (deprecated, no longer logged)\npaper_external_view_default_team: (paper) Changed Paper external sharing setting to default team (deprecated, no longer logged)\npaper_external_view_forbid: (paper) Changed Paper external sharing setting to team-only (deprecated, no longer logged)\npaper_folder_change_subscription: (paper) Followed/unfollowed Paper folder\npaper_folder_deleted: (paper) Archived Paper folder (deprecated, no longer logged)\npaper_folder_followed: (paper) Followed Paper folder (deprecated, replaced by 'Followed/unfollowed Paper folder')\npaper_folder_team_invite: (paper) Shared Paper folder with member (deprecated, no longer logged)\npassword_change: (passwords) Changed password\npassword_reset: (passwords) Reset password\npassword_reset_all: (passwords) Reset all team member passwords\nemm_create_exceptions_report: (reports) Created EMM-excluded users report\nemm_create_usage_report: (reports) Created EMM mobile app usage report\nexport_members_report: (reports) Created member data report\npaper_admin_export_start: (reports) Exported all team Paper docs\nsmart_sync_create_admin_privilege_report: (reports) Created Smart Sync non-admin devices report\nteam_activity_create_report: (reports) Created team activity report\ncollection_share: (sharing) Shared album\nnote_acl_invite_only: (sharing) Changed Paper doc to invite-only (deprecated, no longer logged)\nnote_acl_link: (sharing) Changed Paper doc to link-accessible (deprecated, no longer logged)\nnote_acl_team_link: (sharing) Changed Paper doc to link-accessible for team (deprecated, no longer logged)\nnote_shared: (sharing) Shared Paper doc (deprecated, no longer logged)\nnote_share_receive: (sharing) Shared received Paper doc (deprecated, no longer logged)\nopen_note_shared: (sharing) Opened shared Paper doc (deprecated, no longer logged)\nsf_add_group: (sharing) Added team to shared folder (deprecated, no longer logged)\nsf_allow_non_members_to_view_shared_links: (sharing) Allowed non-collaborators to view links to files in shared folder (deprecated, no longer logged)\nsf_external_invite_warn: (sharing) Set team members to see warning before sharing folders outside team (deprecated, no longer logged)\nsf_fb_invite: (sharing) Invited Facebook users to shared folder (deprecated, no longer logged)\nsf_fb_invite_change_role: (sharing) Changed Facebook user's role in shared folder (deprecated, no longer logged)\nsf_fb_uninvite: (sharing) Uninvited Facebook user from shared folder (deprecated, no longer logged)\nsf_invite_group: (sharing) Invited group to shared folder (deprecated, no longer logged)\nsf_team_grant_access: (sharing) Granted access to shared folder (deprecated, no longer logged)\nsf_team_invite: (sharing) Invited team members to shared folder (deprecated, replaced by 'Invited user to Dropbox and added them to shared file/folder')\nsf_team_invite_change_role: (sharing) Changed team member's role in shared folder (deprecated, no longer logged)\nsf_team_join: (sharing) Joined team member's shared folder (deprecated, no longer logged)\nsf_team_join_from_oob_link: (sharing) Joined team member's shared folder from link (deprecated, no longer logged)\nsf_team_uninvite: (sharing) Unshared folder with team member (deprecated, replaced by 'Removed invitee from shared file/folder before invite was accepted')\nshared_content_add_invitees: (sharing) Invited user to Dropbox and added them to shared file/folder\nshared_content_add_link_expiry: (sharing) Added expiration date to link for shared file/folder\nshared_content_add_link_password: (sharing) Added password to link for shared file/folder\nshared_content_add_member: (sharing) Added users and/or groups to shared file/folder\nshared_content_change_downloads_policy: (sharing) Changed whether members can download shared file/folder\nshared_content_change_invitee_role: (sharing) Changed access type of invitee to shared file/folder before invite was accepted\nshared_content_change_link_audience: (sharing) Changed link audience of shared file/folder\nshared_content_change_link_expiry: (sharing) Changed link expiration of shared file/folder\nshared_content_change_link_password: (sharing) Changed link password of shared file/folder\nshared_content_change_member_role: (sharing) Changed access type of shared file/folder member\nshared_content_change_viewer_info_policy: (sharing) Changed whether members can see who viewed shared file/folder\nshared_content_claim_invitation: (sharing) Acquired membership of shared file/folder by accepting invite\nshared_content_copy: (sharing) Copied shared file/folder to own Dropbox\nshared_content_download: (sharing) Downloaded shared file/folder\nshared_content_relinquish_membership: (sharing) Left shared file/folder\nshared_content_remove_invitees: (sharing) Removed invitee from shared file/folder before invite was accepted\nshared_content_remove_link_expiry: (sharing) Removed link expiration date of shared file/folder\nshared_content_remove_link_password: (sharing) Removed link password of shared file/folder\nshared_content_remove_member: (sharing) Removed user/group from shared file/folder\nshared_content_request_access: (sharing) Requested access to shared file/folder\nshared_content_unshare: (sharing) Unshared file/folder by clearing membership and turning off link\nshared_content_view: (sharing) Previewed shared file/folder\nshared_folder_change_link_policy: (sharing) Changed who can access shared folder via link\nshared_folder_change_members_inheritance_policy: (sharing) Changed whether shared folder inherits members from parent folder\nshared_folder_change_members_management_policy: (sharing) Changed who can add/remove members of shared folder\nshared_folder_change_members_policy: (sharing) Changed who can become member of shared folder\nshared_folder_create: (sharing) Created shared folder\nshared_folder_decline_invitation: (sharing) Declined team member's invite to shared folder\nshared_folder_mount: (sharing) Added shared folder to own Dropbox\nshared_folder_nest: (sharing) Changed parent of shared folder\nshared_folder_transfer_ownership: (sharing) Transferred ownership of shared folder to another member\nshared_folder_unmount: (sharing) Deleted shared folder from Dropbox\nshared_link_add_expiry: (sharing) Added shared link expiration date\nshared_link_change_expiry: (sharing) Changed shared link expiration date\nshared_link_change_visibility: (sharing) Changed visibility of shared link\nshared_link_copy: (sharing) Added file/folder to Dropbox from shared link\nshared_link_create: (sharing) Created shared link\nshared_link_disable: (sharing) Removed shared link\nshared_link_download: (sharing) Downloaded file/folder from shared link\nshared_link_remove_expiry: (sharing) Removed shared link expiration date\nshared_link_share: (sharing) Added members as audience of shared link\nshared_link_view: (sharing) Opened shared link\nshared_note_opened: (sharing) Opened shared Paper doc (deprecated, no longer logged)\nshmodel_group_share: (sharing) Shared link with group (deprecated, no longer logged)\nshowcase_access_granted: (showcase) Granted access to showcase\nshowcase_add_member: (showcase) Added member to showcase\nshowcase_archived: (showcase) Archived showcase\nshowcase_created: (showcase) Created showcase\nshowcase_delete_comment: (showcase) Deleted showcase comment\nshowcase_edited: (showcase) Edited showcase\nshowcase_edit_comment: (showcase) Edited showcase comment\nshowcase_file_added: (showcase) Added file to showcase\nshowcase_file_download: (showcase) Downloaded file from showcase\nshowcase_file_removed: (showcase) Removed file from showcase\nshowcase_file_view: (showcase) Viewed file in showcase\nshowcase_permanently_deleted: (showcase) Permanently deleted showcase\nshowcase_post_comment: (showcase) Added showcase comment\nshowcase_remove_member: (showcase) Removed member from showcase\nshowcase_renamed: (showcase) Renamed showcase\nshowcase_request_access: (showcase) Requested access to showcase\nshowcase_resolve_comment: (showcase) Resolved showcase comment\nshowcase_restored: (showcase) Unarchived showcase\nshowcase_trashed: (showcase) Deleted showcase\nshowcase_trashed_deprecated: (showcase) Deleted showcase (old version) (deprecated, replaced by 'Deleted showcase')\nshowcase_unresolve_comment: (showcase) Unresolved showcase comment\nshowcase_untrashed: (showcase) Restored showcase\nshowcase_untrashed_deprecated: (showcase) Restored showcase (old version) (deprecated, replaced by 'Restored showcase')\nshowcase_view: (showcase) Viewed showcase\nsso_add_cert: (sso) Added X.509 certificate for SSO\nsso_add_login_url: (sso) Added sign-in URL for SSO\nsso_add_logout_url: (sso) Added sign-out URL for SSO\nsso_change_cert: (sso) Changed X.509 certificate for SSO\nsso_change_login_url: (sso) Changed sign-in URL for SSO\nsso_change_logout_url: (sso) Changed sign-out URL for SSO\nsso_change_saml_identity_mode: (sso) Changed SAML identity mode for SSO\nsso_remove_cert: (sso) Removed X.509 certificate for SSO\nsso_remove_login_url: (sso) Removed sign-in URL for SSO\nsso_remove_logout_url: (sso) Removed sign-out URL for SSO\nteam_folder_change_status: (team_folders) Changed archival status of team folder\nteam_folder_create: (team_folders) Created team folder in active status\nteam_folder_downgrade: (team_folders) Downgraded team folder to regular shared folder\nteam_folder_permanently_delete: (team_folders) Permanently deleted archived team folder\nteam_folder_rename: (team_folders) Renamed active/archived team folder\nteam_selective_sync_settings_changed: (team_folders) Changed sync default\naccount_capture_change_policy: (team_policies) Changed account capture setting on team domain\nallow_download_disabled: (team_policies) Disabled downloads (deprecated, no longer logged)\nallow_download_enabled: (team_policies) Enabled downloads (deprecated, no longer logged)\ndata_placement_restriction_change_policy: (team_policies) Set restrictions on data center locations where team data resides\ndata_placement_restriction_satisfy_policy: (team_policies) Completed restrictions on data center locations where team data resides\ndevice_approvals_change_desktop_policy: (team_policies) Set/removed limit on number of computers member can link to team Dropbox account\ndevice_approvals_change_mobile_policy: (team_policies) Set/removed limit on number of mobile devices member can link to team Dropbox account\ndevice_approvals_change_overage_action: (team_policies) Changed device approvals setting when member is over limit\ndevice_approvals_change_unlink_action: (team_policies) Changed device approvals setting when member unlinks approved device\ndirectory_restrictions_add_members: (team_policies) Added members to directory restrictions list\ndirectory_restrictions_remove_members: (team_policies) Removed members from directory restrictions list\nemm_add_exception: (team_policies) Added members to EMM exception list\nemm_change_policy: (team_policies) Enabled/disabled enterprise mobility management for members\nemm_remove_exception: (team_policies) Removed members from EMM exception list\nextended_version_history_change_policy: (team_policies) Accepted/opted out of extended version history\nfile_comments_change_policy: (team_policies) Enabled/disabled commenting on team files\nfile_requests_change_policy: (team_policies) Enabled/disabled file requests\nfile_requests_emails_enabled: (team_policies) Enabled file request emails for everyone (deprecated, no longer logged)\nfile_requests_emails_restricted_to_team_only: (team_policies) Enabled file request emails for team (deprecated, no longer logged)\ngoogle_sso_change_policy: (team_policies) Enabled/disabled Google single sign-on for team\ngroup_user_management_change_policy: (team_policies) Changed who can create groups\nmember_requests_change_policy: (team_policies) Changed whether users can find team when not invited\nmember_space_limits_add_exception: (team_policies) Added members to member space limit exception list\nmember_space_limits_change_caps_type_policy: (team_policies) Changed member space limit type for team\nmember_space_limits_change_policy: (team_policies) Changed team default member space limit\nmember_space_limits_remove_exception: (team_policies) Removed members from member space limit exception list\nmember_suggestions_change_policy: (team_policies) Enabled/disabled option for team members to suggest people to add to team\nmicrosoft_office_addin_change_policy: (team_policies) Enabled/disabled Microsoft Office add-in\nnetwork_control_change_policy: (team_policies) Enabled/disabled network control\npaper_change_deployment_policy: (team_policies) Changed whether Dropbox Paper, when enabled, is deployed to all members or to specific members\npaper_change_member_link_policy: (team_policies) Changed whether non-members can view Paper docs with link (deprecated, no longer logged)\npaper_change_member_policy: (team_policies) Changed whether members can share Paper docs outside team, and if docs are accessible only by team members or anyone by default\npaper_change_policy: (team_policies) Enabled/disabled Dropbox Paper for team\npaper_enabled_users_group_addition: (team_policies) Added users to Paper-enabled users list\npaper_enabled_users_group_removal: (team_policies) Removed users from Paper-enabled users list\npermanent_delete_change_policy: (team_policies) Enabled/disabled ability of team members to permanently delete content\nsharing_change_folder_join_policy: (team_policies) Changed whether team members can join shared folders owned outside team\nsharing_change_link_policy: (team_policies) Changed whether members can share links outside team, and if links are accessible only by team members or anyone by default\nsharing_change_member_policy: (team_policies) Changed whether members can share files/folders outside team\nshowcase_change_download_policy: (team_policies) Enabled/disabled downloading files from Dropbox Showcase for team\nshowcase_change_enabled_policy: (team_policies) Enabled/disabled Dropbox Showcase for team\nshowcase_change_external_sharing_policy: (team_policies) Enabled/disabled sharing Dropbox Showcase externally for team\nsmart_sync_change_policy: (team_policies) Changed default Smart Sync setting for team members\nsmart_sync_not_opt_out: (team_policies) Opted team into Smart Sync\nsmart_sync_opt_out: (team_policies) Opted team out of Smart Sync\nsso_change_policy: (team_policies) Changed single sign-on setting for team\ntfa_change_policy: (team_policies) Changed two-step verification setting for team\ntwo_account_change_policy: (team_policies) Enabled/disabled option for members to link personal Dropbox account and team account to same computer\nweb_sessions_change_fixed_length_policy: (team_policies) Changed how long members can stay signed in to Dropbox.com\nweb_sessions_change_idle_length_policy: (team_policies) Changed how long team members can be idle while signed in to Dropbox.com\nteam_merge_from: (team_profile) Merged another team into this team\nteam_merge_to: (team_profile) Merged this team into another team\nteam_profile_add_logo: (team_profile) Added team logo to display on shared link headers\nteam_profile_change_default_language: (team_profile) Changed default language for team\nteam_profile_change_logo: (team_profile) Changed team logo displayed on shared link headers\nteam_profile_change_name: (team_profile) Changed team name\nteam_profile_remove_logo: (team_profile) Removed team logo displayed on shared link headers\ntfa_add_backup_phone: (tfa) Added backup phone for two-step verification\ntfa_add_security_key: (tfa) Added security key for two-step verification\ntfa_change_backup_phone: (tfa) Changed backup phone for two-step verification\ntfa_change_status: (tfa) Enabled/disabled/changed two-step verification setting\ntfa_remove_backup_phone: (tfa) Removed backup phone for two-step verification\ntfa_remove_security_key: (tfa) Removed security key for two-step verification\ntfa_reset: (tfa) Reset two-step verification for team member\nother: None\n", 
      "properties": {
        "emm_add_exception": {
          "$ref": "#/definitions/EmmAddExceptionType"
        }, 
        "paper_change_member_link_policy": {
          "$ref": "#/definitions/PaperChangeMemberLinkPolicyType"
        }, 
        "allow_download_enabled": {
          "$ref": "#/definitions/AllowDownloadEnabledType"
        }, 
        "shared_content_remove_member": {
          "$ref": "#/definitions/SharedContentRemoveMemberType"
        }, 
        "showcase_edited": {
          "$ref": "#/definitions/ShowcaseEditedType"
        }, 
        "member_transfer_account_contents": {
          "$ref": "#/definitions/MemberTransferAccountContentsType"
        }, 
        "sf_allow_non_members_to_view_shared_links": {
          "$ref": "#/definitions/SfAllowNonMembersToViewSharedLinksType"
        }, 
        "group_join_policy_updated": {
          "$ref": "#/definitions/GroupJoinPolicyUpdatedType"
        }, 
        "file_add": {
          "$ref": "#/definitions/FileAddType"
        }, 
        "file_get_copy_reference": {
          "$ref": "#/definitions/FileGetCopyReferenceType"
        }, 
        "paper_change_member_policy": {
          "$ref": "#/definitions/PaperChangeMemberPolicyType"
        }, 
        "file_revert": {
          "$ref": "#/definitions/FileRevertType"
        }, 
        "collection_share": {
          "$ref": "#/definitions/CollectionShareType"
        }, 
        "paper_folder_followed": {
          "$ref": "#/definitions/PaperFolderFollowedType"
        }, 
        "sf_fb_invite": {
          "$ref": "#/definitions/SfFbInviteType"
        }, 
        "account_capture_migrate_account": {
          "$ref": "#/definitions/AccountCaptureMigrateAccountType"
        }, 
        "shared_folder_decline_invitation": {
          "$ref": "#/definitions/SharedFolderDeclineInvitationType"
        }, 
        "group_change_external_id": {
          "$ref": "#/definitions/GroupChangeExternalIdType"
        }, 
        "paper_doc_edit_comment": {
          "$ref": "#/definitions/PaperDocEditCommentType"
        }, 
        "shared_content_relinquish_membership": {
          "$ref": "#/definitions/SharedContentRelinquishMembershipType"
        }, 
        "shared_link_add_expiry": {
          "$ref": "#/definitions/SharedLinkAddExpiryType"
        }, 
        "shared_content_add_invitees": {
          "$ref": "#/definitions/SharedContentAddInviteesType"
        }, 
        "shared_note_opened": {
          "$ref": "#/definitions/SharedNoteOpenedType"
        }, 
        "paper_doc_delete_comment": {
          "$ref": "#/definitions/PaperDocDeleteCommentType"
        }, 
        "shared_content_request_access": {
          "$ref": "#/definitions/SharedContentRequestAccessType"
        }, 
        "domain_invites_set_invite_new_user_pref_to_yes": {
          "$ref": "#/definitions/DomainInvitesSetInviteNewUserPrefToYesType"
        }, 
        "showcase_renamed": {
          "$ref": "#/definitions/ShowcaseRenamedType"
        }, 
        "paper_doc_edit": {
          "$ref": "#/definitions/PaperDocEditType"
        }, 
        "account_capture_change_policy": {
          "$ref": "#/definitions/AccountCaptureChangePolicyType"
        }, 
        "login_fail": {
          "$ref": "#/definitions/LoginFailType"
        }, 
        "directory_restrictions_remove_members": {
          "$ref": "#/definitions/DirectoryRestrictionsRemoveMembersType"
        }, 
        "allow_download_disabled": {
          "$ref": "#/definitions/AllowDownloadDisabledType"
        }, 
        "group_description_updated": {
          "$ref": "#/definitions/GroupDescriptionUpdatedType"
        }, 
        "paper_doc_team_invite": {
          "$ref": "#/definitions/PaperDocTeamInviteType"
        }, 
        "member_change_membership_type": {
          "$ref": "#/definitions/MemberChangeMembershipTypeType"
        }, 
        "file_request_create": {
          "$ref": "#/definitions/FileRequestCreateType"
        }, 
        "showcase_delete_comment": {
          "$ref": "#/definitions/ShowcaseDeleteCommentType"
        }, 
        "paper_external_view_allow": {
          "$ref": "#/definitions/PaperExternalViewAllowType"
        }, 
        "sso_add_login_url": {
          "$ref": "#/definitions/SsoAddLoginUrlType"
        }, 
        "showcase_file_view": {
          "$ref": "#/definitions/ShowcaseFileViewType"
        }, 
        "sso_change_cert": {
          "$ref": "#/definitions/SsoChangeCertType"
        }, 
        "shared_link_share": {
          "$ref": "#/definitions/SharedLinkShareType"
        }, 
        "sso_change_policy": {
          "$ref": "#/definitions/SsoChangePolicyType"
        }, 
        "domain_verification_add_domain_fail": {
          "$ref": "#/definitions/DomainVerificationAddDomainFailType"
        }, 
        "sign_in_as_session_end": {
          "$ref": "#/definitions/SignInAsSessionEndType"
        }, 
        "member_change_admin_role": {
          "$ref": "#/definitions/MemberChangeAdminRoleType"
        }, 
        "paper_doc_request_access": {
          "$ref": "#/definitions/PaperDocRequestAccessType"
        }, 
        "paper_content_add_to_folder": {
          "$ref": "#/definitions/PaperContentAddToFolderType"
        }, 
        "sso_remove_cert": {
          "$ref": "#/definitions/SsoRemoveCertType"
        }, 
        "paper_doc_change_member_role": {
          "$ref": "#/definitions/PaperDocChangeMemberRoleType"
        }, 
        "sharing_change_member_policy": {
          "$ref": "#/definitions/SharingChangeMemberPolicyType"
        }, 
        "team_merge_from": {
          "$ref": "#/definitions/TeamMergeFromType"
        }, 
        "team_folder_create": {
          "$ref": "#/definitions/TeamFolderCreateType"
        }, 
        "file_preview": {
          "$ref": "#/definitions/FilePreviewType"
        }, 
        "shared_content_copy": {
          "$ref": "#/definitions/SharedContentCopyType"
        }, 
        "team_folder_rename": {
          "$ref": "#/definitions/TeamFolderRenameType"
        }, 
        "shared_folder_unmount": {
          "$ref": "#/definitions/SharedFolderUnmountType"
        }, 
        "shared_content_change_downloads_policy": {
          "$ref": "#/definitions/SharedContentChangeDownloadsPolicyType"
        }, 
        "reseller_support_session_end": {
          "$ref": "#/definitions/ResellerSupportSessionEndType"
        }, 
        "sf_team_join_from_oob_link": {
          "$ref": "#/definitions/SfTeamJoinFromOobLinkType"
        }, 
        "tfa_remove_security_key": {
          "$ref": "#/definitions/TfaRemoveSecurityKeyType"
        }, 
        "member_space_limits_remove_exception": {
          "$ref": "#/definitions/MemberSpaceLimitsRemoveExceptionType"
        }, 
        "member_change_status": {
          "$ref": "#/definitions/MemberChangeStatusType"
        }, 
        "file_restore": {
          "$ref": "#/definitions/FileRestoreType"
        }, 
        "paper_content_remove_member": {
          "$ref": "#/definitions/PaperContentRemoveMemberType"
        }, 
        "team_profile_remove_logo": {
          "$ref": "#/definitions/TeamProfileRemoveLogoType"
        }, 
        "create_folder": {
          "$ref": "#/definitions/CreateFolderType"
        }, 
        "device_management_enabled": {
          "$ref": "#/definitions/DeviceManagementEnabledType"
        }, 
        "emm_refresh_auth_token": {
          "$ref": "#/definitions/EmmRefreshAuthTokenType"
        }, 
        "sso_change_saml_identity_mode": {
          "$ref": "#/definitions/SsoChangeSamlIdentityModeType"
        }, 
        "member_requests_change_policy": {
          "$ref": "#/definitions/MemberRequestsChangePolicyType"
        }, 
        "sso_error": {
          "$ref": "#/definitions/SsoErrorType"
        }, 
        "password_change": {
          "$ref": "#/definitions/PasswordChangeType"
        }, 
        "file_copy": {
          "$ref": "#/definitions/FileCopyType"
        }, 
        "note_acl_invite_only": {
          "$ref": "#/definitions/NoteAclInviteOnlyType"
        }, 
        "app_link_user": {
          "$ref": "#/definitions/AppLinkUserType"
        }, 
        "shared_content_change_link_expiry": {
          "$ref": "#/definitions/SharedContentChangeLinkExpiryType"
        }, 
        "file_delete": {
          "$ref": "#/definitions/FileDeleteType"
        }, 
        "sf_invite_group": {
          "$ref": "#/definitions/SfInviteGroupType"
        }, 
        "sharing_change_link_policy": {
          "$ref": "#/definitions/SharingChangeLinkPolicyType"
        }, 
        "team_folder_permanently_delete": {
          "$ref": "#/definitions/TeamFolderPermanentlyDeleteType"
        }, 
        "member_change_email": {
          "$ref": "#/definitions/MemberChangeEmailType"
        }, 
        "showcase_file_added": {
          "$ref": "#/definitions/ShowcaseFileAddedType"
        }, 
        "group_remove_external_id": {
          "$ref": "#/definitions/GroupRemoveExternalIdType"
        }, 
        "device_approvals_change_desktop_policy": {
          "$ref": "#/definitions/DeviceApprovalsChangeDesktopPolicyType"
        }, 
        "member_space_limits_change_policy": {
          "$ref": "#/definitions/MemberSpaceLimitsChangePolicyType"
        }, 
        "emm_create_exceptions_report": {
          "$ref": "#/definitions/EmmCreateExceptionsReportType"
        }, 
        "tfa_remove_backup_phone": {
          "$ref": "#/definitions/TfaRemoveBackupPhoneType"
        }, 
        "showcase_untrashed_deprecated": {
          "$ref": "#/definitions/ShowcaseUntrashedDeprecatedType"
        }, 
        "smart_sync_change_policy": {
          "$ref": "#/definitions/SmartSyncChangePolicyType"
        }, 
        "paper_doc_slack_share": {
          "$ref": "#/definitions/PaperDocSlackShareType"
        }, 
        "file_unresolve_comment": {
          "$ref": "#/definitions/FileUnresolveCommentType"
        }, 
        "showcase_created": {
          "$ref": "#/definitions/ShowcaseCreatedType"
        }, 
        "sso_change_login_url": {
          "$ref": "#/definitions/SsoChangeLoginUrlType"
        }, 
        "showcase_remove_member": {
          "$ref": "#/definitions/ShowcaseRemoveMemberType"
        }, 
        "sf_external_invite_warn": {
          "$ref": "#/definitions/SfExternalInviteWarnType"
        }, 
        "app_link_team": {
          "$ref": "#/definitions/AppLinkTeamType"
        }, 
        "paper_doc_download": {
          "$ref": "#/definitions/PaperDocDownloadType"
        }, 
        "sf_add_group": {
          "$ref": "#/definitions/SfAddGroupType"
        }, 
        "tfa_add_security_key": {
          "$ref": "#/definitions/TfaAddSecurityKeyType"
        }, 
        "shared_content_change_invitee_role": {
          "$ref": "#/definitions/SharedContentChangeInviteeRoleType"
        }, 
        "showcase_resolve_comment": {
          "$ref": "#/definitions/ShowcaseResolveCommentType"
        }, 
        "shared_link_view": {
          "$ref": "#/definitions/SharedLinkViewType"
        }, 
        "file_rollback_changes": {
          "$ref": "#/definitions/FileRollbackChangesType"
        }, 
        "sf_team_invite_change_role": {
          "$ref": "#/definitions/SfTeamInviteChangeRoleType"
        }, 
        "paper_content_permanently_delete": {
          "$ref": "#/definitions/PaperContentPermanentlyDeleteType"
        }, 
        "shared_link_change_visibility": {
          "$ref": "#/definitions/SharedLinkChangeVisibilityType"
        }, 
        "team_merge_to": {
          "$ref": "#/definitions/TeamMergeToType"
        }, 
        "note_acl_team_link": {
          "$ref": "#/definitions/NoteAclTeamLinkType"
        }, 
        "file_request_close": {
          "$ref": "#/definitions/FileRequestCloseType"
        }, 
        "group_change_member_role": {
          "$ref": "#/definitions/GroupChangeMemberRoleType"
        }, 
        "file_requests_emails_enabled": {
          "$ref": "#/definitions/FileRequestsEmailsEnabledType"
        }, 
        "paper_doc_mention": {
          "$ref": "#/definitions/PaperDocMentionType"
        }, 
        "showcase_post_comment": {
          "$ref": "#/definitions/ShowcasePostCommentType"
        }, 
        "reseller_support_session_start": {
          "$ref": "#/definitions/ResellerSupportSessionStartType"
        }, 
        "shared_folder_nest": {
          "$ref": "#/definitions/SharedFolderNestType"
        }, 
        "shared_folder_transfer_ownership": {
          "$ref": "#/definitions/SharedFolderTransferOwnershipType"
        }, 
        "note_shared": {
          "$ref": "#/definitions/NoteSharedType"
        }, 
        "showcase_request_access": {
          "$ref": "#/definitions/ShowcaseRequestAccessType"
        }, 
        "app_unlink_team": {
          "$ref": "#/definitions/AppUnlinkTeamType"
        }, 
        "file_requests_emails_restricted_to_team_only": {
          "$ref": "#/definitions/FileRequestsEmailsRestrictedToTeamOnlyType"
        }, 
        "paper_doc_followed": {
          "$ref": "#/definitions/PaperDocFollowedType"
        }, 
        "team_folder_change_status": {
          "$ref": "#/definitions/TeamFolderChangeStatusType"
        }, 
        "extended_version_history_change_policy": {
          "$ref": "#/definitions/ExtendedVersionHistoryChangePolicyType"
        }, 
        "logout": {
          "$ref": "#/definitions/LogoutType"
        }, 
        "sso_remove_logout_url": {
          "$ref": "#/definitions/SsoRemoveLogoutUrlType"
        }, 
        "sso_change_logout_url": {
          "$ref": "#/definitions/SsoChangeLogoutUrlType"
        }, 
        "note_share_receive": {
          "$ref": "#/definitions/NoteShareReceiveType"
        }, 
        "domain_invites_approve_request_to_join_team": {
          "$ref": "#/definitions/DomainInvitesApproveRequestToJoinTeamType"
        }, 
        "shared_content_add_link_password": {
          "$ref": "#/definitions/SharedContentAddLinkPasswordType"
        }, 
        "file_permanently_delete": {
          "$ref": "#/definitions/FilePermanentlyDeleteType"
        }, 
        "file_resolve_comment": {
          "$ref": "#/definitions/FileResolveCommentType"
        }, 
        "emm_change_policy": {
          "$ref": "#/definitions/EmmChangePolicyType"
        }, 
        "emm_remove_exception": {
          "$ref": "#/definitions/EmmRemoveExceptionType"
        }, 
        "showcase_unresolve_comment": {
          "$ref": "#/definitions/ShowcaseUnresolveCommentType"
        }, 
        "domain_invites_set_invite_new_user_pref_to_no": {
          "$ref": "#/definitions/DomainInvitesSetInviteNewUserPrefToNoType"
        }, 
        "paper_enabled_users_group_removal": {
          "$ref": "#/definitions/PaperEnabledUsersGroupRemovalType"
        }, 
        "showcase_untrashed": {
          "$ref": "#/definitions/ShowcaseUntrashedType"
        }, 
        "paper_doc_change_sharing_policy": {
          "$ref": "#/definitions/PaperDocChangeSharingPolicyType"
        }, 
        "tfa_reset": {
          "$ref": "#/definitions/TfaResetType"
        }, 
        "emm_error": {
          "$ref": "#/definitions/EmmErrorType"
        }, 
        "paper_doc_change_subscription": {
          "$ref": "#/definitions/PaperDocChangeSubscriptionType"
        }, 
        "network_control_change_policy": {
          "$ref": "#/definitions/NetworkControlChangePolicyType"
        }, 
        "shared_content_remove_link_expiry": {
          "$ref": "#/definitions/SharedContentRemoveLinkExpiryType"
        }, 
        "member_add_name": {
          "$ref": "#/definitions/MemberAddNameType"
        }, 
        "group_remove_member": {
          "$ref": "#/definitions/GroupRemoveMemberType"
        }, 
        "open_note_shared": {
          "$ref": "#/definitions/OpenNoteSharedType"
        }, 
        "file_unlike_comment": {
          "$ref": "#/definitions/FileUnlikeCommentType"
        }, 
        "microsoft_office_addin_change_policy": {
          "$ref": "#/definitions/MicrosoftOfficeAddinChangePolicyType"
        }, 
        "team_profile_add_logo": {
          "$ref": "#/definitions/TeamProfileAddLogoType"
        }, 
        "shared_folder_change_link_policy": {
          "$ref": "#/definitions/SharedFolderChangeLinkPolicyType"
        }, 
        "permanent_delete_change_policy": {
          "$ref": "#/definitions/PermanentDeleteChangePolicyType"
        }, 
        "paper_external_view_forbid": {
          "$ref": "#/definitions/PaperExternalViewForbidType"
        }, 
        "shared_folder_change_members_management_policy": {
          "$ref": "#/definitions/SharedFolderChangeMembersManagementPolicyType"
        }, 
        "shared_link_create": {
          "$ref": "#/definitions/SharedLinkCreateType"
        }, 
        "web_sessions_change_idle_length_policy": {
          "$ref": "#/definitions/WebSessionsChangeIdleLengthPolicyType"
        }, 
        "shared_folder_change_members_inheritance_policy": {
          "$ref": "#/definitions/SharedFolderChangeMembersInheritancePolicyType"
        }, 
        "file_download": {
          "$ref": "#/definitions/FileDownloadType"
        }, 
        "domain_invites_email_existing_users": {
          "$ref": "#/definitions/DomainInvitesEmailExistingUsersType"
        }, 
        "domain_invites_decline_request_to_join_team": {
          "$ref": "#/definitions/DomainInvitesDeclineRequestToJoinTeamType"
        }, 
        "shared_content_add_member": {
          "$ref": "#/definitions/SharedContentAddMemberType"
        }, 
        "member_space_limits_remove_custom_quota": {
          "$ref": "#/definitions/MemberSpaceLimitsRemoveCustomQuotaType"
        }, 
        "smart_sync_opt_out": {
          "$ref": "#/definitions/SmartSyncOptOutType"
        }, 
        "team_profile_change_name": {
          "$ref": "#/definitions/TeamProfileChangeNameType"
        }, 
        "device_change_ip_mobile": {
          "$ref": "#/definitions/DeviceChangeIpMobileType"
        }, 
        "shared_folder_create": {
          "$ref": "#/definitions/SharedFolderCreateType"
        }, 
        "device_management_disabled": {
          "$ref": "#/definitions/DeviceManagementDisabledType"
        }, 
        "paper_content_create": {
          "$ref": "#/definitions/PaperContentCreateType"
        }, 
        "paper_content_restore": {
          "$ref": "#/definitions/PaperContentRestoreType"
        }, 
        "file_change_comment_subscription": {
          "$ref": "#/definitions/FileChangeCommentSubscriptionType"
        }, 
        "member_space_limits_change_custom_quota": {
          "$ref": "#/definitions/MemberSpaceLimitsChangeCustomQuotaType"
        }, 
        "data_placement_restriction_satisfy_policy": {
          "$ref": "#/definitions/DataPlacementRestrictionSatisfyPolicyType"
        }, 
        "smart_sync_not_opt_out": {
          "$ref": "#/definitions/SmartSyncNotOptOutType"
        }, 
        "paper_content_rename": {
          "$ref": "#/definitions/PaperContentRenameType"
        }, 
        "paper_admin_export_start": {
          "$ref": "#/definitions/PaperAdminExportStartType"
        }, 
        "paper_folder_team_invite": {
          "$ref": "#/definitions/PaperFolderTeamInviteType"
        }, 
        "device_approvals_change_unlink_action": {
          "$ref": "#/definitions/DeviceApprovalsChangeUnlinkActionType"
        }, 
        "account_capture_notification_emails_sent": {
          "$ref": "#/definitions/AccountCaptureNotificationEmailsSentType"
        }, 
        "paper_doc_add_comment": {
          "$ref": "#/definitions/PaperDocAddCommentType"
        }, 
        "directory_restrictions_add_members": {
          "$ref": "#/definitions/DirectoryRestrictionsAddMembersType"
        }, 
        "showcase_file_download": {
          "$ref": "#/definitions/ShowcaseFileDownloadType"
        }, 
        "shared_link_change_expiry": {
          "$ref": "#/definitions/SharedLinkChangeExpiryType"
        }, 
        "shared_folder_change_members_policy": {
          "$ref": "#/definitions/SharedFolderChangeMembersPolicyType"
        }, 
        "group_user_management_change_policy": {
          "$ref": "#/definitions/GroupUserManagementChangePolicyType"
        }, 
        "member_space_limits_add_custom_quota": {
          "$ref": "#/definitions/MemberSpaceLimitsAddCustomQuotaType"
        }, 
        "sf_team_invite": {
          "$ref": "#/definitions/SfTeamInviteType"
        }, 
        "team_activity_create_report": {
          "$ref": "#/definitions/TeamActivityCreateReportType"
        }, 
        "file_edit": {
          "$ref": "#/definitions/FileEditType"
        }, 
        "member_space_limits_change_status": {
          "$ref": "#/definitions/MemberSpaceLimitsChangeStatusType"
        }, 
        "paper_doc_view": {
          "$ref": "#/definitions/PaperDocViewType"
        }, 
        "tfa_change_status": {
          "$ref": "#/definitions/TfaChangeStatusType"
        }, 
        "group_delete": {
          "$ref": "#/definitions/GroupDeleteType"
        }, 
        "member_space_limits_change_caps_type_policy": {
          "$ref": "#/definitions/MemberSpaceLimitsChangeCapsTypePolicyType"
        }, 
        "account_capture_change_availability": {
          "$ref": "#/definitions/AccountCaptureChangeAvailabilityType"
        }, 
        "shmodel_group_share": {
          "$ref": "#/definitions/ShmodelGroupShareType"
        }, 
        "sf_fb_invite_change_role": {
          "$ref": "#/definitions/SfFbInviteChangeRoleType"
        }, 
        "device_change_ip_web": {
          "$ref": "#/definitions/DeviceChangeIpWebType"
        }, 
        "paper_doc_untrashed": {
          "$ref": "#/definitions/PaperDocUntrashedType"
        }, 
        "login_success": {
          "$ref": "#/definitions/LoginSuccessType"
        }, 
        "domain_verification_remove_domain": {
          "$ref": "#/definitions/DomainVerificationRemoveDomainType"
        }, 
        "paper_change_policy": {
          "$ref": "#/definitions/PaperChangePolicyType"
        }, 
        "paper_change_deployment_policy": {
          "$ref": "#/definitions/PaperChangeDeploymentPolicyType"
        }, 
        "shared_content_remove_invitees": {
          "$ref": "#/definitions/SharedContentRemoveInviteesType"
        }, 
        "shared_content_unshare": {
          "$ref": "#/definitions/SharedContentUnshareType"
        }, 
        "member_permanently_delete_account_contents": {
          "$ref": "#/definitions/MemberPermanentlyDeleteAccountContentsType"
        }, 
        "app_unlink_user": {
          "$ref": "#/definitions/AppUnlinkUserType"
        }, 
        "two_account_change_policy": {
          "$ref": "#/definitions/TwoAccountChangePolicyType"
        }, 
        "showcase_change_download_policy": {
          "$ref": "#/definitions/ShowcaseChangeDownloadPolicyType"
        }, 
        "team_profile_change_logo": {
          "$ref": "#/definitions/TeamProfileChangeLogoType"
        }, 
        "team_folder_downgrade": {
          "$ref": "#/definitions/TeamFolderDowngradeType"
        }, 
        "shared_link_download": {
          "$ref": "#/definitions/SharedLinkDownloadType"
        }, 
        "domain_verification_add_domain_success": {
          "$ref": "#/definitions/DomainVerificationAddDomainSuccessType"
        }, 
        "password_reset_all": {
          "$ref": "#/definitions/PasswordResetAllType"
        }, 
        "emm_create_usage_report": {
          "$ref": "#/definitions/EmmCreateUsageReportType"
        }, 
        "group_create": {
          "$ref": "#/definitions/GroupCreateType"
        }, 
        "device_change_ip_desktop": {
          "$ref": "#/definitions/DeviceChangeIpDesktopType"
        }, 
        "device_approvals_change_overage_action": {
          "$ref": "#/definitions/DeviceApprovalsChangeOverageActionType"
        }, 
        "file_save_copy_reference": {
          "$ref": "#/definitions/FileSaveCopyReferenceType"
        }, 
        "paper_content_add_member": {
          "$ref": "#/definitions/PaperContentAddMemberType"
        }, 
        "sign_in_as_session_start": {
          "$ref": "#/definitions/SignInAsSessionStartType"
        }, 
        "device_link_fail": {
          "$ref": "#/definitions/DeviceLinkFailType"
        }, 
        "export_members_report": {
          "$ref": "#/definitions/ExportMembersReportType"
        }, 
        "showcase_add_member": {
          "$ref": "#/definitions/ShowcaseAddMemberType"
        }, 
        "file_move": {
          "$ref": "#/definitions/FileMoveType"
        }, 
        "shared_link_copy": {
          "$ref": "#/definitions/SharedLinkCopyType"
        }, 
        "showcase_change_enabled_policy": {
          "$ref": "#/definitions/ShowcaseChangeEnabledPolicyType"
        }, 
        "file_rename": {
          "$ref": "#/definitions/FileRenameType"
        }, 
        "shared_content_change_viewer_info_policy": {
          "$ref": "#/definitions/SharedContentChangeViewerInfoPolicyType"
        }, 
        "paper_doc_trashed": {
          "$ref": "#/definitions/PaperDocTrashedType"
        }, 
        "file_request_receive_file": {
          "$ref": "#/definitions/FileRequestReceiveFileType"
        }, 
        "file_request_change": {
          "$ref": "#/definitions/FileRequestChangeType"
        }, 
        "device_approvals_change_mobile_policy": {
          "$ref": "#/definitions/DeviceApprovalsChangeMobilePolicyType"
        }, 
        "sso_add_cert": {
          "$ref": "#/definitions/SsoAddCertType"
        }, 
        "file_like_comment": {
          "$ref": "#/definitions/FileLikeCommentType"
        }, 
        "showcase_change_external_sharing_policy": {
          "$ref": "#/definitions/ShowcaseChangeExternalSharingPolicyType"
        }, 
        "paper_folder_deleted": {
          "$ref": "#/definitions/PaperFolderDeletedType"
        }, 
        "paper_folder_change_subscription": {
          "$ref": "#/definitions/PaperFolderChangeSubscriptionType"
        }, 
        "showcase_archived": {
          "$ref": "#/definitions/ShowcaseArchivedType"
        }, 
        "paper_external_view_default_team": {
          "$ref": "#/definitions/PaperExternalViewDefaultTeamType"
        }, 
        "shared_link_disable": {
          "$ref": "#/definitions/SharedLinkDisableType"
        }, 
        "group_add_member": {
          "$ref": "#/definitions/GroupAddMemberType"
        }, 
        "smart_sync_create_admin_privilege_report": {
          "$ref": "#/definitions/SmartSyncCreateAdminPrivilegeReportType"
        }, 
        "paper_doc_deleted": {
          "$ref": "#/definitions/PaperDocDeletedType"
        }, 
        "paper_doc_resolve_comment": {
          "$ref": "#/definitions/PaperDocResolveCommentType"
        }, 
        "tfa_change_backup_phone": {
          "$ref": "#/definitions/TfaChangeBackupPhoneType"
        }, 
        "shared_content_add_link_expiry": {
          "$ref": "#/definitions/SharedContentAddLinkExpiryType"
        }, 
        "domain_invites_request_to_join_team": {
          "$ref": "#/definitions/DomainInvitesRequestToJoinTeamType"
        }, 
        "group_add_external_id": {
          "$ref": "#/definitions/GroupAddExternalIdType"
        }, 
        "team_profile_change_default_language": {
          "$ref": "#/definitions/TeamProfileChangeDefaultLanguageType"
        }, 
        "showcase_file_removed": {
          "$ref": "#/definitions/ShowcaseFileRemovedType"
        }, 
        "sso_add_logout_url": {
          "$ref": "#/definitions/SsoAddLogoutUrlType"
        }, 
        "paper_enabled_users_group_addition": {
          "$ref": "#/definitions/PaperEnabledUsersGroupAdditionType"
        }, 
        "tfa_add_backup_phone": {
          "$ref": "#/definitions/TfaAddBackupPhoneType"
        }, 
        "file_delete_comment": {
          "$ref": "#/definitions/FileDeleteCommentType"
        }, 
        "member_suggestions_change_policy": {
          "$ref": "#/definitions/MemberSuggestionsChangePolicyType"
        }, 
        "tfa_change_policy": {
          "$ref": "#/definitions/TfaChangePolicyType"
        }, 
        "group_rename": {
          "$ref": "#/definitions/GroupRenameType"
        }, 
        "showcase_trashed": {
          "$ref": "#/definitions/ShowcaseTrashedType"
        }, 
        "data_placement_restriction_change_policy": {
          "$ref": "#/definitions/DataPlacementRestrictionChangePolicyType"
        }, 
        "paper_content_remove_from_folder": {
          "$ref": "#/definitions/PaperContentRemoveFromFolderType"
        }, 
        "shared_link_remove_expiry": {
          "$ref": "#/definitions/SharedLinkRemoveExpiryType"
        }, 
        "shared_folder_mount": {
          "$ref": "#/definitions/SharedFolderMountType"
        }, 
        "shared_content_change_member_role": {
          "$ref": "#/definitions/SharedContentChangeMemberRoleType"
        }, 
        "group_change_management_type": {
          "$ref": "#/definitions/GroupChangeManagementTypeType"
        }, 
        "device_delete_on_unlink_success": {
          "$ref": "#/definitions/DeviceDeleteOnUnlinkSuccessType"
        }, 
        "file_requests_change_policy": {
          "$ref": "#/definitions/FileRequestsChangePolicyType"
        }, 
        "google_sso_change_policy": {
          "$ref": "#/definitions/GoogleSsoChangePolicyType"
        }, 
        "member_suggest": {
          "$ref": "#/definitions/MemberSuggestType"
        }, 
        "web_sessions_change_fixed_length_policy": {
          "$ref": "#/definitions/WebSessionsChangeFixedLengthPolicyType"
        }, 
        "device_link_success": {
          "$ref": "#/definitions/DeviceLinkSuccessType"
        }, 
        "showcase_permanently_deleted": {
          "$ref": "#/definitions/ShowcasePermanentlyDeletedType"
        }, 
        "device_delete_on_unlink_fail": {
          "$ref": "#/definitions/DeviceDeleteOnUnlinkFailType"
        }, 
        "sf_team_uninvite": {
          "$ref": "#/definitions/SfTeamUninviteType"
        }, 
        "showcase_edit_comment": {
          "$ref": "#/definitions/ShowcaseEditCommentType"
        }, 
        "shared_content_remove_link_password": {
          "$ref": "#/definitions/SharedContentRemoveLinkPasswordType"
        }, 
        "disabled_domain_invites": {
          "$ref": "#/definitions/DisabledDomainInvitesType"
        }, 
        "shared_content_view": {
          "$ref": "#/definitions/SharedContentViewType"
        }, 
        "showcase_access_granted": {
          "$ref": "#/definitions/ShowcaseAccessGrantedType"
        }, 
        "note_acl_link": {
          "$ref": "#/definitions/NoteAclLinkType"
        }, 
        "file_add_comment": {
          "$ref": "#/definitions/FileAddCommentType"
        }, 
        "sso_remove_login_url": {
          "$ref": "#/definitions/SsoRemoveLoginUrlType"
        }, 
        "sf_fb_uninvite": {
          "$ref": "#/definitions/SfFbUninviteType"
        }, 
        "secondary_mails_policy_changed": {
          "$ref": "#/definitions/SecondaryMailsPolicyChangedType"
        }, 
        "sf_team_join": {
          "$ref": "#/definitions/SfTeamJoinType"
        }, 
        "device_unlink": {
          "$ref": "#/definitions/DeviceUnlinkType"
        }, 
        "sharing_change_folder_join_policy": {
          "$ref": "#/definitions/SharingChangeFolderJoinPolicyType"
        }, 
        "showcase_view": {
          "$ref": "#/definitions/ShowcaseViewType"
        }, 
        "shared_content_claim_invitation": {
          "$ref": "#/definitions/SharedContentClaimInvitationType"
        }, 
        "shared_content_download": {
          "$ref": "#/definitions/SharedContentDownloadType"
        }, 
        "team_selective_sync_settings_changed": {
          "$ref": "#/definitions/TeamSelectiveSyncSettingsChangedType"
        }, 
        "member_change_name": {
          "$ref": "#/definitions/MemberChangeNameType"
        }, 
        "paper_doc_unresolve_comment": {
          "$ref": "#/definitions/PaperDocUnresolveCommentType"
        }, 
        "member_space_limits_add_exception": {
          "$ref": "#/definitions/MemberSpaceLimitsAddExceptionType"
        }, 
        "file_comments_change_policy": {
          "$ref": "#/definitions/FileCommentsChangePolicyType"
        }, 
        "password_reset": {
          "$ref": "#/definitions/PasswordResetType"
        }, 
        "paper_content_archive": {
          "$ref": "#/definitions/PaperContentArchiveType"
        }, 
        "group_moved": {
          "$ref": "#/definitions/GroupMovedType"
        }, 
        "shared_content_change_link_audience": {
          "$ref": "#/definitions/SharedContentChangeLinkAudienceType"
        }, 
        ".tag": {
          "enum": [
            "app_link_team", 
            "app_link_user", 
            "app_unlink_team", 
            "app_unlink_user", 
            "file_add_comment", 
            "file_change_comment_subscription", 
            "file_delete_comment", 
            "file_like_comment", 
            "file_resolve_comment", 
            "file_unlike_comment", 
            "file_unresolve_comment", 
            "device_change_ip_desktop", 
            "device_change_ip_mobile", 
            "device_change_ip_web", 
            "device_delete_on_unlink_fail", 
            "device_delete_on_unlink_success", 
            "device_link_fail", 
            "device_link_success", 
            "device_management_disabled", 
            "device_management_enabled", 
            "device_unlink", 
            "emm_refresh_auth_token", 
            "account_capture_change_availability", 
            "account_capture_migrate_account", 
            "account_capture_notification_emails_sent", 
            "account_capture_relinquish_account", 
            "disabled_domain_invites", 
            "domain_invites_approve_request_to_join_team", 
            "domain_invites_decline_request_to_join_team", 
            "domain_invites_email_existing_users", 
            "domain_invites_request_to_join_team", 
            "domain_invites_set_invite_new_user_pref_to_no", 
            "domain_invites_set_invite_new_user_pref_to_yes", 
            "domain_verification_add_domain_fail", 
            "domain_verification_add_domain_success", 
            "domain_verification_remove_domain", 
            "enabled_domain_invites", 
            "create_folder", 
            "file_add", 
            "file_copy", 
            "file_delete", 
            "file_download", 
            "file_edit", 
            "file_get_copy_reference", 
            "file_move", 
            "file_permanently_delete", 
            "file_preview", 
            "file_rename", 
            "file_restore", 
            "file_revert", 
            "file_rollback_changes", 
            "file_save_copy_reference", 
            "file_request_change", 
            "file_request_close", 
            "file_request_create", 
            "file_request_receive_file", 
            "group_add_external_id", 
            "group_add_member", 
            "group_change_external_id", 
            "group_change_management_type", 
            "group_change_member_role", 
            "group_create", 
            "group_delete", 
            "group_description_updated", 
            "group_join_policy_updated", 
            "group_moved", 
            "group_remove_external_id", 
            "group_remove_member", 
            "group_rename", 
            "emm_error", 
            "login_fail", 
            "login_success", 
            "logout", 
            "reseller_support_session_end", 
            "reseller_support_session_start", 
            "sign_in_as_session_end", 
            "sign_in_as_session_start", 
            "sso_error", 
            "member_add_name", 
            "member_change_admin_role", 
            "member_change_email", 
            "member_change_membership_type", 
            "member_change_name", 
            "member_change_status", 
            "member_permanently_delete_account_contents", 
            "member_space_limits_add_custom_quota", 
            "member_space_limits_change_custom_quota", 
            "member_space_limits_change_status", 
            "member_space_limits_remove_custom_quota", 
            "member_suggest", 
            "member_transfer_account_contents", 
            "secondary_mails_policy_changed", 
            "paper_content_add_member", 
            "paper_content_add_to_folder", 
            "paper_content_archive", 
            "paper_content_create", 
            "paper_content_permanently_delete", 
            "paper_content_remove_from_folder", 
            "paper_content_remove_member", 
            "paper_content_rename", 
            "paper_content_restore", 
            "paper_doc_add_comment", 
            "paper_doc_change_member_role", 
            "paper_doc_change_sharing_policy", 
            "paper_doc_change_subscription", 
            "paper_doc_deleted", 
            "paper_doc_delete_comment", 
            "paper_doc_download", 
            "paper_doc_edit", 
            "paper_doc_edit_comment", 
            "paper_doc_followed", 
            "paper_doc_mention", 
            "paper_doc_request_access", 
            "paper_doc_resolve_comment", 
            "paper_doc_revert", 
            "paper_doc_slack_share", 
            "paper_doc_team_invite", 
            "paper_doc_trashed", 
            "paper_doc_unresolve_comment", 
            "paper_doc_untrashed", 
            "paper_doc_view", 
            "paper_external_view_allow", 
            "paper_external_view_default_team", 
            "paper_external_view_forbid", 
            "paper_folder_change_subscription", 
            "paper_folder_deleted", 
            "paper_folder_followed", 
            "paper_folder_team_invite", 
            "password_change", 
            "password_reset", 
            "password_reset_all", 
            "emm_create_exceptions_report", 
            "emm_create_usage_report", 
            "export_members_report", 
            "paper_admin_export_start", 
            "smart_sync_create_admin_privilege_report", 
            "team_activity_create_report", 
            "collection_share", 
            "note_acl_invite_only", 
            "note_acl_link", 
            "note_acl_team_link", 
            "note_shared", 
            "note_share_receive", 
            "open_note_shared", 
            "sf_add_group", 
            "sf_allow_non_members_to_view_shared_links", 
            "sf_external_invite_warn", 
            "sf_fb_invite", 
            "sf_fb_invite_change_role", 
            "sf_fb_uninvite", 
            "sf_invite_group", 
            "sf_team_grant_access", 
            "sf_team_invite", 
            "sf_team_invite_change_role", 
            "sf_team_join", 
            "sf_team_join_from_oob_link", 
            "sf_team_uninvite", 
            "shared_content_add_invitees", 
            "shared_content_add_link_expiry", 
            "shared_content_add_link_password", 
            "shared_content_add_member", 
            "shared_content_change_downloads_policy", 
            "shared_content_change_invitee_role", 
            "shared_content_change_link_audience", 
            "shared_content_change_link_expiry", 
            "shared_content_change_link_password", 
            "shared_content_change_member_role", 
            "shared_content_change_viewer_info_policy", 
            "shared_content_claim_invitation", 
            "shared_content_copy", 
            "shared_content_download", 
            "shared_content_relinquish_membership", 
            "shared_content_remove_invitees", 
            "shared_content_remove_link_expiry", 
            "shared_content_remove_link_password", 
            "shared_content_remove_member", 
            "shared_content_request_access", 
            "shared_content_unshare", 
            "shared_content_view", 
            "shared_folder_change_link_policy", 
            "shared_folder_change_members_inheritance_policy", 
            "shared_folder_change_members_management_policy", 
            "shared_folder_change_members_policy", 
            "shared_folder_create", 
            "shared_folder_decline_invitation", 
            "shared_folder_mount", 
            "shared_folder_nest", 
            "shared_folder_transfer_ownership", 
            "shared_folder_unmount", 
            "shared_link_add_expiry", 
            "shared_link_change_expiry", 
            "shared_link_change_visibility", 
            "shared_link_copy", 
            "shared_link_create", 
            "shared_link_disable", 
            "shared_link_download", 
            "shared_link_remove_expiry", 
            "shared_link_share", 
            "shared_link_view", 
            "shared_note_opened", 
            "shmodel_group_share", 
            "showcase_access_granted", 
            "showcase_add_member", 
            "showcase_archived", 
            "showcase_created", 
            "showcase_delete_comment", 
            "showcase_edited", 
            "showcase_edit_comment", 
            "showcase_file_added", 
            "showcase_file_download", 
            "showcase_file_removed", 
            "showcase_file_view", 
            "showcase_permanently_deleted", 
            "showcase_post_comment", 
            "showcase_remove_member", 
            "showcase_renamed", 
            "showcase_request_access", 
            "showcase_resolve_comment", 
            "showcase_restored", 
            "showcase_trashed", 
            "showcase_trashed_deprecated", 
            "showcase_unresolve_comment", 
            "showcase_untrashed", 
            "showcase_untrashed_deprecated", 
            "showcase_view", 
            "sso_add_cert", 
            "sso_add_login_url", 
            "sso_add_logout_url", 
            "sso_change_cert", 
            "sso_change_login_url", 
            "sso_change_logout_url", 
            "sso_change_saml_identity_mode", 
            "sso_remove_cert", 
            "sso_remove_login_url", 
            "sso_remove_logout_url", 
            "team_folder_change_status", 
            "team_folder_create", 
            "team_folder_downgrade", 
            "team_folder_permanently_delete", 
            "team_folder_rename", 
            "team_selective_sync_settings_changed", 
            "account_capture_change_policy", 
            "allow_download_disabled", 
            "allow_download_enabled", 
            "data_placement_restriction_change_policy", 
            "data_placement_restriction_satisfy_policy", 
            "device_approvals_change_desktop_policy", 
            "device_approvals_change_mobile_policy", 
            "device_approvals_change_overage_action", 
            "device_approvals_change_unlink_action", 
            "directory_restrictions_add_members", 
            "directory_restrictions_remove_members", 
            "emm_add_exception", 
            "emm_change_policy", 
            "emm_remove_exception", 
            "extended_version_history_change_policy", 
            "file_comments_change_policy", 
            "file_requests_change_policy", 
            "file_requests_emails_enabled", 
            "file_requests_emails_restricted_to_team_only", 
            "google_sso_change_policy", 
            "group_user_management_change_policy", 
            "member_requests_change_policy", 
            "member_space_limits_add_exception", 
            "member_space_limits_change_caps_type_policy", 
            "member_space_limits_change_policy", 
            "member_space_limits_remove_exception", 
            "member_suggestions_change_policy", 
            "microsoft_office_addin_change_policy", 
            "network_control_change_policy", 
            "paper_change_deployment_policy", 
            "paper_change_member_link_policy", 
            "paper_change_member_policy", 
            "paper_change_policy", 
            "paper_enabled_users_group_addition", 
            "paper_enabled_users_group_removal", 
            "permanent_delete_change_policy", 
            "sharing_change_folder_join_policy", 
            "sharing_change_link_policy", 
            "sharing_change_member_policy", 
            "showcase_change_download_policy", 
            "showcase_change_enabled_policy", 
            "showcase_change_external_sharing_policy", 
            "smart_sync_change_policy", 
            "smart_sync_not_opt_out", 
            "smart_sync_opt_out", 
            "sso_change_policy", 
            "tfa_change_policy", 
            "two_account_change_policy", 
            "web_sessions_change_fixed_length_policy", 
            "web_sessions_change_idle_length_policy", 
            "team_merge_from", 
            "team_merge_to", 
            "team_profile_add_logo", 
            "team_profile_change_default_language", 
            "team_profile_change_logo", 
            "team_profile_change_name", 
            "team_profile_remove_logo", 
            "tfa_add_backup_phone", 
            "tfa_add_security_key", 
            "tfa_change_backup_phone", 
            "tfa_change_status", 
            "tfa_remove_backup_phone", 
            "tfa_remove_security_key", 
            "tfa_reset", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of EventType"
        }, 
        "shared_content_change_link_password": {
          "$ref": "#/definitions/SharedContentChangeLinkPasswordType"
        }, 
        "paper_doc_revert": {
          "$ref": "#/definitions/PaperDocRevertType"
        }, 
        "enabled_domain_invites": {
          "$ref": "#/definitions/EnabledDomainInvitesType"
        }, 
        "showcase_restored": {
          "$ref": "#/definitions/ShowcaseRestoredType"
        }, 
        "account_capture_relinquish_account": {
          "$ref": "#/definitions/AccountCaptureRelinquishAccountType"
        }, 
        "showcase_trashed_deprecated": {
          "$ref": "#/definitions/ShowcaseTrashedDeprecatedType"
        }, 
        "sf_team_grant_access": {
          "$ref": "#/definitions/SfTeamGrantAccessType"
        }
      }
    }, 
    "GroupChangeMemberRoleDetails": {
      "type": "object", 
      "description": "Changed manager permissions of group member.\nis_group_owner: Is group owner.\n", 
      "properties": {
        "is_group_owner": {
          "type": "boolean", 
          "description": "Is group owner."
        }
      }
    }, 
    "PaperEnabledUsersGroupAdditionType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "PaperContentCreateDetails": {
      "type": "object", 
      "description": "Created Paper doc/folder.\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "GroupsListContinueError": {
      "type": "object", 
      "description": "invalid_cursor: The cursor is invalid.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "invalid_cursor", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of GroupsListContinueError"
        }
      }
    }, 
    "GetTeamEventsContinueArg": {
      "type": "object", 
      "description": "cursor: Indicates from what point to get the next set of events.\n", 
      "properties": {
        "cursor": {
          "type": "string", 
          "description": "Indicates from what point to get the next set of events."
        }
      }
    }, 
    "GetTeamEventsArg": {
      "type": "object", 
      "description": "limit: Number of results to return per call.\naccount_id: Filter the events by account ID. Return ony events with this account_id as either Actor, Context, or Participants.\ntime: Filter by time range.\ncategory: Filter the returned events to a single category.\n", 
      "properties": {
        "category": {
          "$ref": "#/definitions/EventCategory"
        }, 
        "limit": {
          "type": "number", 
          "description": "Number of results to return per call."
        }, 
        "account_id": {
          "type": "string", 
          "description": "Filter the events by account ID. Return ony events with this account_id as either Actor, Context, or Participants."
        }, 
        "time": {
          "$ref": "#/definitions/TimeRange"
        }
      }
    }, 
    "MemberAddNameDetails": {
      "type": "object", 
      "description": "Added team member name.\nnew_value: New user's name.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/UserNameLogInfo"
        }
      }
    }, 
    "ShowcaseFileViewDetails": {
      "type": "object", 
      "description": "Viewed file in showcase.\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "GroupAddMemberType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "ApiApp": {
      "type": "object", 
      "description": "Information on linked third party applications.\napp_id: The application unique id.\napp_name: The application name.\nis_app_folder: Whether the linked application uses a dedicated folder.\npublisher: The application publisher name.\npublisher_url: The publisher's URL.\nlinked: The time this application was linked.\n", 
      "properties": {
        "publisher": {
          "type": "string", 
          "description": "The application publisher name."
        }, 
        "app_name": {
          "type": "string", 
          "description": "The application name."
        }, 
        "app_id": {
          "type": "string", 
          "description": "The application unique id."
        }, 
        "publisher_url": {
          "type": "string", 
          "description": "The publisher's URL."
        }, 
        "linked": {
          "type": "string", 
          "description": "The time this application was linked."
        }, 
        "is_app_folder": {
          "type": "boolean", 
          "description": "Whether the linked application uses a dedicated folder."
        }
      }
    }, 
    "FileRequestsEmailsEnabledDetails": {
      "type": "object", 
      "description": "Enabled file request emails for everyone.\n", 
      "properties": {}
    }, 
    "SharedFolderChangeMembersPolicyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SharedFolderTransferOwnershipDetails": {
      "type": "object", 
      "description": "Transferred ownership of shared folder to another member.\nnew_owner_email: The email address of the new shared folder owner.\nprevious_owner_email: The email address of the previous shared folder owner.\n", 
      "properties": {
        "new_owner_email": {
          "type": "string", 
          "description": "The email address of the new shared folder owner."
        }, 
        "previous_owner_email": {
          "type": "string", 
          "description": "The email address of the previous shared folder owner."
        }
      }
    }, 
    "SmartSyncOptOutType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "PaperChangeDeploymentPolicyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "ListMembersDevicesResult": {
      "type": "object", 
      "description": "devices: The devices of each member of the team.\nhas_more: If true, then there are more devices available. Pass the cursor to :route:`devices/list_members_devices` to retrieve the rest.\ncursor: Pass the cursor into :route:`devices/list_members_devices` to receive the next sub list of team's devices.\n", 
      "properties": {
        "has_more": {
          "type": "boolean", 
          "description": "If true, then there are more devices available. Pass the cursor to :route:`devices/list_members_devices` to retrieve the rest."
        }, 
        "cursor": {
          "type": "string", 
          "description": "Pass the cursor into :route:`devices/list_members_devices` to receive the next sub list of team's devices."
        }, 
        "devices": {
          "items": {
            "$ref": "#/definitions/MemberDevices"
          }, 
          "type": "array", 
          "description": "The devices of each member of the team."
        }
      }
    }, 
    "MemberAccess": {
      "type": "object", 
      "description": "Specify access type a member should have when joined to a group.\nuser: Identity of a user.\naccess_type: Access type.\n", 
      "properties": {
        "user": {
          "$ref": "#/definitions/UserSelectorArg"
        }, 
        "access_type": {
          "$ref": "#/definitions/GroupAccessType"
        }
      }
    }, 
    "FileRequestReceiveFileDetails": {
      "type": "object", 
      "description": "Received files for file request.\nsubmitted_file_names: Submitted file names.\nfile_request_id: File request id. Might be missing due to historical data gap.\nfile_request_details: File request details. Might be missing due to historical data gap.\nsubmitter_name: The name as provided by the submitter. Might be missing due to historical data gap.\nsubmitter_email: The email as provided by the submitter. Might be missing due to historical data gap.\n", 
      "properties": {
        "file_request_id": {
          "type": "string", 
          "description": "File request id. Might be missing due to historical data gap."
        }, 
        "submitted_file_names": {
          "items": {
            "type": "string"
          }, 
          "type": "array", 
          "description": "Submitted file names."
        }, 
        "submitter_email": {
          "type": "string", 
          "description": "The email as provided by the submitter. Might be missing due to historical data gap."
        }, 
        "submitter_name": {
          "type": "string", 
          "description": "The name as provided by the submitter. Might be missing due to historical data gap."
        }, 
        "file_request_details": {
          "$ref": "#/definitions/FileRequestDetails"
        }
      }
    }, 
    "SharedFolderChangeMembersManagementPolicyDetails": {
      "type": "object", 
      "description": "Changed who can add/remove members of shared folder.\nnew_value: New members management policy.\nprevious_value: Previous members management policy. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/AclUpdatePolicy"
        }, 
        "previous_value": {
          "$ref": "#/definitions/AclUpdatePolicy"
        }
      }
    }, 
    "PaperContentRemoveFromFolderDetails": {
      "type": "object", 
      "description": "Removed Paper doc/folder from folder.\nevent_uuid: Event unique identifier.\ntarget_asset_index: Target asset position in the Assets list.\nparent_asset_index: Parent asset position in the Assets list.\n", 
      "properties": {
        "target_asset_index": {
          "type": "number", 
          "description": "Target asset position in the Assets list."
        }, 
        "parent_asset_index": {
          "type": "number", 
          "description": "Parent asset position in the Assets list."
        }, 
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "TeamMergeToDetails": {
      "type": "object", 
      "description": "Merged this team into another team.\nteam_name: The name of the team that this team was merged into.\n", 
      "properties": {
        "team_name": {
          "type": "string", 
          "description": "The name of the team that this team was merged into."
        }
      }
    }, 
    "FeaturesGetValuesBatchArg": {
      "type": "object", 
      "description": "features: A list of features in :type:`Feature`. If the list is empty, this route will return :type:`FeaturesGetValuesBatchError`.\n", 
      "properties": {
        "features": {
          "items": {
            "$ref": "#/definitions/Feature"
          }, 
          "type": "array", 
          "description": "A list of features in :type:`Feature`. If the list is empty, this route will return :type:`FeaturesGetValuesBatchError`."
        }
      }
    }, 
    "FileRequestCreateType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "NonTeamMemberLogInfo": {
      "type": "object", 
      "description": "Non team member's logged information.\naccount_id: User unique ID. Might be missing due to historical data gap.\ndisplay_name: User display name. Might be missing due to historical data gap.\nemail: User email address. Might be missing due to historical data gap.\n", 
      "properties": {
        "display_name": {
          "type": "string", 
          "description": "User display name. Might be missing due to historical data gap."
        }, 
        "account_id": {
          "type": "string", 
          "description": "User unique ID. Might be missing due to historical data gap."
        }, 
        "email": {
          "type": "string", 
          "description": "User email address. Might be missing due to historical data gap."
        }
      }
    }, 
    "SharedFolderJoinPolicy": {
      "type": "object", 
      "description": "Policy governing which shared folders a team member can join.\nfrom_team_only: Team members can only join folders shared by teammates.\nfrom_anyone: Team members can join any shared folder, including those shared by users outside the team.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "from_team_only", 
            "from_anyone", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of SharedFolderJoinPolicy"
        }
      }
    }, 
    "GroupMemberInfo": {
      "type": "object", 
      "description": "Profile of group member, and role in group.\nprofile: Profile of group member.\naccess_type: The role that the user has in the group.\n", 
      "properties": {
        "profile": {
          "$ref": "#/definitions/MemberProfile"
        }, 
        "access_type": {
          "$ref": "#/definitions/GroupAccessType"
        }
      }
    }, 
    "RevokeDeviceSessionError": {
      "type": "object", 
      "description": "device_session_not_found: Device session not found.\nmember_not_found: Member not found.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "device_session_not_found", 
            "member_not_found", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of RevokeDeviceSessionError"
        }
      }
    }, 
    "SharedContentChangeMemberRoleType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SharedLinkAccessLevel": {
      "type": "object", 
      "description": "Shared link access level.\nnone: None\nreader: None\nwriter: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "none", 
            "reader", 
            "writer", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of SharedLinkAccessLevel"
        }
      }
    }, 
    "DeviceLinkFailDetails": {
      "type": "object", 
      "description": "Failed to link device.\ndevice_type: A description of the device used while user approval blocked.\nip_address: IP address. Might be missing due to historical data gap.\n", 
      "properties": {
        "ip_address": {
          "type": "string", 
          "description": "IP address. Might be missing due to historical data gap."
        }, 
        "device_type": {
          "$ref": "#/definitions/DeviceType"
        }
      }
    }, 
    "SfTeamJoinDetails": {
      "type": "object", 
      "description": "Joined team member's shared folder.\ntarget_asset_index: Target asset position in the Assets list.\noriginal_folder_name: Original shared folder name.\n", 
      "properties": {
        "target_asset_index": {
          "type": "number", 
          "description": "Target asset position in the Assets list."
        }, 
        "original_folder_name": {
          "type": "string", 
          "description": "Original shared folder name."
        }
      }
    }, 
    "GroupDescriptionUpdatedDetails": {
      "type": "object", 
      "description": "Updated group.\n", 
      "properties": {}
    }, 
    "SsoChangeLoginUrlType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "ShowcaseFileAddedDetails": {
      "type": "object", 
      "description": "Added file to showcase.\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "ExternalUserLogInfo": {
      "type": "object", 
      "description": "A user without a Dropbox account.\nuser_identifier: An external user identifier.\nidentifier_type: Identifier type.\n", 
      "properties": {
        "user_identifier": {
          "type": "string", 
          "description": "An external user identifier."
        }, 
        "identifier_type": {
          "$ref": "#/definitions/IdentifierType"
        }
      }
    }, 
    "ShmodelGroupShareType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "MembersSuspendError": {
      "type": "object", 
      "description": "user_not_found: No matching user found. The provided team_member_id, email, or external_id does not exist on this team.\nuser_not_in_team: The user is not a member of the team.\nother: None\nsuspend_inactive_user: The user is not active, so it cannot be suspended.\nsuspend_last_admin: The user is the last admin of the team, so it cannot be suspended.\nteam_license_limit: Team is full. The organization has no available licenses.\n", 
      "properties": {
        ".tag": {
          "enum": [
            "user_not_found", 
            "user_not_in_team", 
            "other", 
            "suspend_inactive_user", 
            "suspend_last_admin", 
            "team_license_limit"
          ], 
          "type": "string", 
          "title": "Choice of MembersSuspendError"
        }
      }
    }, 
    "AppLinkTeamType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "LoginFailDetails": {
      "type": "object", 
      "description": "Failed to sign in.\nlogin_method: Login method.\nerror_details: Error details.\nis_emm_managed: Tells if the login device is EMM managed. Might be missing due to historical data gap.\n", 
      "properties": {
        "error_details": {
          "$ref": "#/definitions/FailureDetailsLogInfo"
        }, 
        "login_method": {
          "$ref": "#/definitions/LoginMethod"
        }, 
        "is_emm_managed": {
          "type": "boolean", 
          "description": "Tells if the login device is EMM managed. Might be missing due to historical data gap."
        }
      }
    }, 
    "MicrosoftOfficeAddinPolicy": {
      "type": "object", 
      "description": "Microsoft Office addin policy\ndisabled: None\nenabled: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "disabled", 
            "enabled", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of MicrosoftOfficeAddinPolicy"
        }
      }
    }, 
    "FeatureValue": {
      "type": "object", 
      "description": "The values correspond to entries in :type:`Feature`. You may get different value according to your Dropbox Business plan.\nupload_api_rate_limit: None\nhas_team_shared_dropbox: None\nhas_team_file_events: None\nhas_team_selective_sync: None\nother: None\n", 
      "properties": {
        "has_team_shared_dropbox": {
          "$ref": "#/definitions/HasTeamSharedDropboxValue"
        }, 
        "has_team_selective_sync": {
          "$ref": "#/definitions/HasTeamSelectiveSyncValue"
        }, 
        ".tag": {
          "enum": [
            "upload_api_rate_limit", 
            "has_team_shared_dropbox", 
            "has_team_file_events", 
            "has_team_selective_sync", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of FeatureValue"
        }, 
        "upload_api_rate_limit": {
          "$ref": "#/definitions/UploadApiRateLimitValue"
        }, 
        "has_team_file_events": {
          "$ref": "#/definitions/HasTeamFileEventsValue"
        }
      }
    }, 
    "DateRange": {
      "type": "object", 
      "description": "Input arguments that can be provided for most reports.\nstart_date: Optional starting date (inclusive).\nend_date: Optional ending date (exclusive).\n", 
      "properties": {
        "start_date": {
          "type": "string", 
          "description": "Optional starting date (inclusive)."
        }, 
        "end_date": {
          "type": "string", 
          "description": "Optional ending date (exclusive)."
        }
      }
    }, 
    "ShowcaseChangeEnabledPolicyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "AppLinkUserDetails": {
      "type": "object", 
      "description": "Linked app for member.\napp_info: Relevant application details.\n", 
      "properties": {
        "app_info": {
          "$ref": "#/definitions/AppLogInfo"
        }
      }
    }, 
    "Feature": {
      "type": "object", 
      "description": "A set of features that a Dropbox Business account may support.\nupload_api_rate_limit: The number of upload API calls allowed per month.\nhas_team_shared_dropbox: Does this team have a shared team root.\nhas_team_file_events: Does this team have file events.\nhas_team_selective_sync: Does this team have team selective sync enabled.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "upload_api_rate_limit", 
            "has_team_shared_dropbox", 
            "has_team_file_events", 
            "has_team_selective_sync", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of Feature"
        }
      }
    }, 
    "PaperDocDeleteCommentDetails": {
      "type": "object", 
      "description": "Deleted Paper doc comment.\nevent_uuid: Event unique identifier.\ncomment_text: Comment text. Might be missing due to historical data gap.\n", 
      "properties": {
        "comment_text": {
          "type": "string", 
          "description": "Comment text. Might be missing due to historical data gap."
        }, 
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "ShowcaseTrashedDeprecatedDetails": {
      "type": "object", 
      "description": "Deleted showcase (old version).\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "ShowcaseRemoveMemberType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "ActionDetails": {
      "type": "object", 
      "description": "Additional information indicating the action taken that caused status change.\nteam_join_details: Additional information relevant when a new member joins the team.\nremove_action: Define how the user was removed from the team.\nother: None\n", 
      "properties": {
        "team_join_details": {
          "$ref": "#/definitions/JoinTeamDetails"
        }, 
        "remove_action": {
          "$ref": "#/definitions/MemberRemoveActionType"
        }, 
        ".tag": {
          "enum": [
            "team_join_details", 
            "remove_action", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of ActionDetails"
        }
      }
    }, 
    "GroupJoinPolicy": {
      "type": "object", 
      "description": "open: None\nrequest_to_join: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "open", 
            "request_to_join", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of GroupJoinPolicy"
        }
      }
    }, 
    "TfaRemoveBackupPhoneDetails": {
      "type": "object", 
      "description": "Removed backup phone for two-step verification.\n", 
      "properties": {}
    }, 
    "SharedFolderChangeLinkPolicyDetails": {
      "type": "object", 
      "description": "Changed who can access shared folder via link.\nnew_value: New shared folder link policy.\nprevious_value: Previous shared folder link policy. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/SharedLinkPolicy"
        }, 
        "previous_value": {
          "$ref": "#/definitions/SharedLinkPolicy"
        }
      }
    }, 
    "FileRestoreType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SharedContentChangeDownloadsPolicyDetails": {
      "type": "object", 
      "description": "Changed whether members can download shared file/folder.\nnew_value: New downloads policy.\nprevious_value: Previous downloads policy. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/DownloadPolicyType"
        }, 
        "previous_value": {
          "$ref": "#/definitions/DownloadPolicyType"
        }
      }
    }, 
    "TeamMemberInfo": {
      "type": "object", 
      "description": "Information about a team member.\nprofile: Profile of a user as a member of a team.\nrole: The user's role in the team.\n", 
      "properties": {
        "profile": {
          "$ref": "#/definitions/TeamMemberProfile"
        }, 
        "role": {
          "$ref": "#/definitions/AdminTier"
        }
      }
    }, 
    "SsoAddLogoutUrlType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "FileLikeCommentDetails": {
      "type": "object", 
      "description": "Liked file comment.\ncomment_text: Comment text. Might be missing due to historical data gap.\n", 
      "properties": {
        "comment_text": {
          "type": "string", 
          "description": "Comment text. Might be missing due to historical data gap."
        }
      }
    }, 
    "PaperContentRestoreType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SharedLinkPolicy": {
      "type": "object", 
      "description": "Who can view shared links in this folder.\nanyone: Links can be shared with anyone.\nteam: Links can be shared with anyone on the same team as the owner.\nmembers: Links can only be shared among members of the shared folder.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "anyone", 
            "team", 
            "members", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of SharedLinkPolicy"
        }
      }
    }, 
    "TeamMergeFromType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "PollArg": {
      "type": "object", 
      "description": "Arguments for methods that poll the status of an asynchronous job.\nasync_job_id: Id of the asynchronous job. This is the value of a response returned from the method that launched the job.\n", 
      "properties": {
        "async_job_id": {
          "type": "string", 
          "description": "Id of the asynchronous job. This is the value of a response returned from the method that launched the job."
        }
      }
    }, 
    "LoginMethod": {
      "type": "object", 
      "description": "password: None\ntwo_factor_authentication: None\nsaml: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "password", 
            "two_factor_authentication", 
            "saml", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of LoginMethod"
        }
      }
    }, 
    "ShowcaseDeleteCommentType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "DeviceChangeIpWebType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "TfaResetDetails": {
      "type": "object", 
      "description": "Reset two-step verification for team member.\n", 
      "properties": {}
    }, 
    "ListTeamAppsResult": {
      "type": "object", 
      "description": "Information returned by :route:`linked_apps/list_team_linked_apps`.\napps: The linked applications of each member of the team.\nhas_more: If true, then there are more apps available. Pass the cursor to :route:`linked_apps/list_team_linked_apps` to retrieve the rest.\ncursor: Pass the cursor into :route:`linked_apps/list_team_linked_apps` to receive the next sub list of team's applications.\n", 
      "properties": {
        "has_more": {
          "type": "boolean", 
          "description": "If true, then there are more apps available. Pass the cursor to :route:`linked_apps/list_team_linked_apps` to retrieve the rest."
        }, 
        "cursor": {
          "type": "string", 
          "description": "Pass the cursor into :route:`linked_apps/list_team_linked_apps` to receive the next sub list of team's applications."
        }, 
        "apps": {
          "items": {
            "$ref": "#/definitions/MemberLinkedApps"
          }, 
          "type": "array", 
          "description": "The linked applications of each member of the team."
        }
      }
    }, 
    "ExcludedUsersUpdateArg": {
      "type": "object", 
      "description": "Argument of excluded users update operation. Should include a list of users to add/remove (according to endpoint), Maximum size of the list is 1000 users.\nusers: List of users to be added/removed.\n", 
      "properties": {
        "users": {
          "items": {
            "$ref": "#/definitions/UserSelectorArg"
          }, 
          "type": "array", 
          "description": "List of users to be added/removed."
        }
      }
    }, 
    "FileLikeCommentType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "ApiSessionLogInfo": {
      "type": "object", 
      "description": "Api session.\nrequest_id: Api request ID.\n", 
      "properties": {
        "request_id": {
          "type": "string", 
          "description": "Api request ID."
        }
      }
    }, 
    "GroupCreateType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "MembersRemoveError": {
      "type": "object", 
      "description": "user_not_found: No matching user found. The provided team_member_id, email, or external_id does not exist on this team.\nuser_not_in_team: The user is not a member of the team.\nother: None\nremove_last_admin: The user is the last admin of the team, so it cannot be removed from it.\nremoved_and_transfer_dest_should_differ: Expected removed user and transfer_dest user to be different.\nremoved_and_transfer_admin_should_differ: Expected removed user and transfer_admin user to be different.\ntransfer_dest_user_not_found: No matching user found for the argument transfer_dest_id.\ntransfer_dest_user_not_in_team: The provided transfer_dest_id does not exist on this team.\ntransfer_admin_user_not_found: No matching user found for the argument transfer_admin_id.\ntransfer_admin_user_not_in_team: The provided transfer_admin_id does not exist on this team.\nunspecified_transfer_admin_id: The transfer_admin_id argument must be provided when file transfer is requested.\ntransfer_admin_is_not_admin: Specified transfer_admin user is not a team admin.\ncannot_keep_account_and_transfer: Cannot keep account and transfer the data to another user at the same time.\ncannot_keep_account_and_delete_data: Cannot keep account and delete the data at the same time. To keep the account the argument wipe_data should be set to False.\nemail_address_too_long_to_be_disabled: The email address of the user is too long to be disabled.\ncannot_keep_invited_user_account: Cannot keep account of an invited user.\n", 
      "properties": {
        ".tag": {
          "enum": [
            "user_not_found", 
            "user_not_in_team", 
            "other", 
            "remove_last_admin", 
            "removed_and_transfer_dest_should_differ", 
            "removed_and_transfer_admin_should_differ", 
            "transfer_dest_user_not_found", 
            "transfer_dest_user_not_in_team", 
            "transfer_admin_user_not_found", 
            "transfer_admin_user_not_in_team", 
            "unspecified_transfer_admin_id", 
            "transfer_admin_is_not_admin", 
            "cannot_keep_account_and_transfer", 
            "cannot_keep_account_and_delete_data", 
            "email_address_too_long_to_be_disabled", 
            "cannot_keep_invited_user_account"
          ], 
          "type": "string", 
          "title": "Choice of MembersRemoveError"
        }
      }
    }, 
    "NoteShareReceiveType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "TeamFolderPermanentlyDeleteError": {
      "type": "object", 
      "description": "access_error: None\nstatus_error: None\nteam_shared_dropbox_error: None\nother: None\n", 
      "properties": {
        "access_error": {
          "$ref": "#/definitions/TeamFolderAccessError"
        }, 
        ".tag": {
          "enum": [
            "access_error", 
            "status_error", 
            "team_shared_dropbox_error", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of TeamFolderPermanentlyDeleteError"
        }, 
        "team_shared_dropbox_error": {
          "$ref": "#/definitions/TeamFolderTeamSharedDropboxError"
        }, 
        "status_error": {
          "$ref": "#/definitions/TeamFolderInvalidStatusError"
        }
      }
    }, 
    "DeviceManagementDisabledDetails": {
      "type": "object", 
      "description": "Disabled device management.\n", 
      "properties": {}
    }, 
    "MembersRecoverArg": {
      "type": "object", 
      "description": "Exactly one of team_member_id, email, or external_id must be provided to identify the user account.\nuser: Identity of user to recover.\n", 
      "properties": {
        "user": {
          "$ref": "#/definitions/UserSelectorArg"
        }
      }
    }, 
    "TeamProfileAddLogoType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SfTeamGrantAccessDetails": {
      "type": "object", 
      "description": "Granted access to shared folder.\ntarget_asset_index: Target asset position in the Assets list.\noriginal_folder_name: Original shared folder name.\n", 
      "properties": {
        "target_asset_index": {
          "type": "number", 
          "description": "Target asset position in the Assets list."
        }, 
        "original_folder_name": {
          "type": "string", 
          "description": "Original shared folder name."
        }
      }
    }, 
    "ParticipantLogInfo": {
      "type": "object", 
      "description": "A user or group\nuser: A user with a Dropbox account.\ngroup: Group details.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "user", 
            "group", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of ParticipantLogInfo"
        }, 
        "group": {
          "$ref": "#/definitions/GroupLogInfo"
        }, 
        "user": {
          "$ref": "#/definitions/UserLogInfo"
        }
      }
    }, 
    "SmartSyncCreateAdminPrivilegeReportType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "AccessLevel": {
      "type": "object", 
      "description": "Defines the access levels for collaborators.\nowner: The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using :route:`update_folder_policy`.\neditor: The collaborator can both view and edit the shared folder.\nviewer: The collaborator can only view the shared folder.\nviewer_no_comment: The collaborator can only view the shared folder and does not have any access to comments.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "owner", 
            "editor", 
            "viewer", 
            "viewer_no_comment", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of AccessLevel"
        }
      }
    }, 
    "ListMemberAppsArg": {
      "type": "object", 
      "description": "team_member_id: The team member id.\n", 
      "properties": {
        "team_member_id": {
          "type": "string", 
          "description": "The team member id."
        }
      }
    }, 
    "DownloadPolicyType": {
      "type": "object", 
      "description": "Shared content downloads policy\nallow: None\ndisallow: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "allow", 
            "disallow", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of DownloadPolicyType"
        }
      }
    }, 
    "GroupAddExternalIdType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "HasTeamFileEventsValue": {
      "type": "object", 
      "description": "The value for :field:`Feature.has_team_file_events`.\nenabled: Does this team have file events.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "enabled", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of HasTeamFileEventsValue"
        }, 
        "enabled": {
          "type": "boolean", 
          "description": "Does this team have file events."
        }
      }
    }, 
    "MembersSetProfileArg": {
      "type": "object", 
      "description": "Exactly one of team_member_id, email, or external_id must be provided to identify the user account.\nAt least one of new_email, new_external_id, new_given_name, and/or new_surname must be provided.\nuser: Identity of user whose profile will be set.\nnew_email: New email for member.\nnew_external_id: New external ID for member.\nnew_given_name: New given name for member.\nnew_surname: New surname for member.\nnew_persistent_id: New persistent ID. This field only available to teams using persistent ID SAML configuration.\nnew_is_directory_restricted: New value for whether the user is a directory restricted user.\n", 
      "properties": {
        "new_email": {
          "type": "string", 
          "description": "New email for member."
        }, 
        "new_surname": {
          "type": "string", 
          "description": "New surname for member."
        }, 
        "new_persistent_id": {
          "type": "string", 
          "description": "New persistent ID. This field only available to teams using persistent ID SAML configuration."
        }, 
        "new_is_directory_restricted": {
          "type": "boolean", 
          "description": "New value for whether the user is a directory restricted user."
        }, 
        "user": {
          "$ref": "#/definitions/UserSelectorArg"
        }, 
        "new_external_id": {
          "type": "string", 
          "description": "New external ID for member."
        }, 
        "new_given_name": {
          "type": "string", 
          "description": "New given name for member."
        }
      }
    }, 
    "GroupSummary": {
      "type": "object", 
      "description": "Information about a group.\ngroup_name: None\ngroup_id: None\ngroup_management_type: Who is allowed to manage the group.\ngroup_external_id: External ID of group. This is an arbitrary ID that an admin can attach to a group.\nmember_count: The number of members in the group.\n", 
      "properties": {
        "group_external_id": {
          "type": "string", 
          "description": "External ID of group. This is an arbitrary ID that an admin can attach to a group."
        }, 
        "group_id": {
          "type": "string"
        }, 
        "group_management_type": {
          "$ref": "#/definitions/GroupManagementType"
        }, 
        "member_count": {
          "type": "number", 
          "description": "The number of members in the group."
        }, 
        "group_name": {
          "type": "string"
        }
      }
    }, 
    "ShowcaseAccessGrantedDetails": {
      "type": "object", 
      "description": "Granted access to showcase.\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "GroupCreateArg": {
      "type": "object", 
      "description": "group_name: Group name.\ngroup_external_id: The creator of a team can associate an arbitrary external ID to the group.\ngroup_management_type: Whether the team can be managed by selected users, or only by team admins.\n", 
      "properties": {
        "group_external_id": {
          "type": "string", 
          "description": "The creator of a team can associate an arbitrary external ID to the group."
        }, 
        "group_management_type": {
          "$ref": "#/definitions/GroupManagementType"
        }, 
        "group_name": {
          "type": "string", 
          "description": "Group name."
        }
      }
    }, 
    "AllowDownloadEnabledDetails": {
      "type": "object", 
      "description": "Enabled downloads.\n", 
      "properties": {}
    }, 
    "PaperExternalViewForbidType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SharedLinkChangeVisibilityDetails": {
      "type": "object", 
      "description": "Changed visibility of shared link.\nnew_value: New shared link visibility.\nprevious_value: Previous shared link visibility. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/SharedLinkVisibility"
        }, 
        "previous_value": {
          "$ref": "#/definitions/SharedLinkVisibility"
        }
      }
    }, 
    "SignInAsSessionEndType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SfAllowNonMembersToViewSharedLinksType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "EventCategory": {
      "type": "object", 
      "description": "Category of events in event audit log.\napps: Events that apply to management of linked apps.\ncomments: Events that have to do with comments on files and Paper documents.\ndevices: Events that apply to linked devices on mobile, desktop and Web platforms.\ndomains: Events that involve domain management feature: domain verification, invite enforcement and account capture.\nfile_operations: Events that have to do with filesystem operations on files and folders: copy, move, delete, etc.\nfile_requests: Events that apply to the file requests feature.\ngroups: Events that involve group management.\nlogins: Events that involve users signing in to or out of Dropbox.\nmembers: Events that involve team member management.\npaper: Events that apply to Dropbox Paper.\npasswords: Events that involve using, changing or resetting passwords.\nreports: Events that concern generation of admin reports, including team activity and device usage.\nsharing: Events that apply to all types of sharing and collaboration.\nshowcase: Events that apply to Dropbox Showcase.\nsso: Events that involve using or configuring single sign-on as well as administrative policies concerning single sign-on.\nteam_folders: Events that involve team folder management.\nteam_policies: Events that involve a change in team-wide policies.\nteam_profile: Events that involve a change in the team profile.\ntfa: Events that involve using or configuring two factor authentication as well as administrative policies concerning two factor authentication.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "apps", 
            "comments", 
            "devices", 
            "domains", 
            "file_operations", 
            "file_requests", 
            "groups", 
            "logins", 
            "members", 
            "paper", 
            "passwords", 
            "reports", 
            "sharing", 
            "showcase", 
            "sso", 
            "team_folders", 
            "team_policies", 
            "team_profile", 
            "tfa", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of EventCategory"
        }
      }
    }, 
    "FileRollbackChangesType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "WebSessionsChangeIdleLengthPolicyDetails": {
      "type": "object", 
      "description": "Changed how long team members can be idle while signed in to Dropbox.com.\nnew_value: New idle length policy. Might be missing due to historical data gap.\nprevious_value: Previous idle length policy. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/WebSessionsIdleLengthPolicy"
        }, 
        "previous_value": {
          "$ref": "#/definitions/WebSessionsIdleLengthPolicy"
        }
      }
    }, 
    "GroupMembersChangeResult": {
      "type": "object", 
      "description": "Result returned by :route:`groups/members/add` and :route:`groups/members/remove`.\ngroup_info: The group info after member change operation has been performed.\nasync_job_id: An ID that can be used to obtain the status of granting/revoking group-owned resources.\n", 
      "properties": {
        "group_info": {
          "$ref": "#/definitions/GroupFullInfo"
        }, 
        "async_job_id": {
          "type": "string", 
          "description": "An ID that can be used to obtain the status of granting/revoking group-owned resources."
        }
      }
    }, 
    "LoginFailType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "DomainInvitesEmailExistingUsersType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "PaperChangeDeploymentPolicyDetails": {
      "type": "object", 
      "description": "Changed whether Dropbox Paper, when enabled, is deployed to all members or to specific members.\nnew_value: New Dropbox Paper deployment policy.\nprevious_value: Previous Dropbox Paper deployment policy. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/PaperDeploymentPolicy"
        }, 
        "previous_value": {
          "$ref": "#/definitions/PaperDeploymentPolicy"
        }
      }
    }, 
    "GroupsPollError": {
      "type": "object", 
      "description": "invalid_async_job_id: The job ID is invalid.\ninternal_error: Something went wrong with the job on Dropbox's end. You'll need to verify that the action you were taking succeeded, and if not, try again. This should happen very rarely.\nother: None\naccess_denied: You are not allowed to poll this job.\n", 
      "properties": {
        ".tag": {
          "enum": [
            "invalid_async_job_id", 
            "internal_error", 
            "other", 
            "access_denied"
          ], 
          "type": "string", 
          "title": "Choice of GroupsPollError"
        }
      }
    }, 
    "ShowcaseTrashedDeprecatedType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "MemberChangeMembershipTypeType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "ShowcaseTrashedDetails": {
      "type": "object", 
      "description": "Deleted showcase.\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "PaperDocResolveCommentDetails": {
      "type": "object", 
      "description": "Resolved Paper doc comment.\nevent_uuid: Event unique identifier.\ncomment_text: Comment text. Might be missing due to historical data gap.\n", 
      "properties": {
        "comment_text": {
          "type": "string", 
          "description": "Comment text. Might be missing due to historical data gap."
        }, 
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "TeamGetInfoResult": {
      "type": "object", 
      "description": "name: The name of the team.\nteam_id: The ID of the team.\nnum_licensed_users: The number of licenses available to the team.\nnum_provisioned_users: The number of accounts that have been invited or are already active members of the team.\npolicies: None\n", 
      "properties": {
        "team_id": {
          "type": "string", 
          "description": "The ID of the team."
        }, 
        "num_provisioned_users": {
          "type": "number", 
          "description": "The number of accounts that have been invited or are already active members of the team."
        }, 
        "name": {
          "type": "string", 
          "description": "The name of the team."
        }, 
        "policies": {
          "$ref": "#/definitions/TeamMemberPolicies"
        }, 
        "num_licensed_users": {
          "type": "number", 
          "description": "The number of licenses available to the team."
        }
      }
    }, 
    "ShowcasePermanentlyDeletedDetails": {
      "type": "object", 
      "description": "Permanently deleted showcase.\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "WebSessionLogInfo": {
      "type": "object", 
      "description": "Web session.\nsession_id: Session ID. Might be missing due to historical data gap.\n", 
      "properties": {
        "session_id": {
          "type": "string", 
          "description": "Session ID. Might be missing due to historical data gap."
        }
      }
    }, 
    "GeoLocationLogInfo": {
      "type": "object", 
      "description": "Geographic location details.\nip_address: IP address.\ncity: City name.\nregion: Region name.\ncountry: Country code.\n", 
      "properties": {
        "city": {
          "type": "string", 
          "description": "City name."
        }, 
        "region": {
          "type": "string", 
          "description": "Region name."
        }, 
        "ip_address": {
          "type": "string", 
          "description": "IP address."
        }, 
        "country": {
          "type": "string", 
          "description": "Country code."
        }
      }
    }, 
    "GroupUpdateError": {
      "type": "object", 
      "description": "group_not_found: No matching group found. No groups match the specified group ID.\nother: None\nsystem_managed_group_disallowed: This operation is not supported on system-managed groups.\ngroup_name_already_used: The requested group name is already being used by another group.\ngroup_name_invalid: Group name is empty or has invalid characters.\nexternal_id_already_in_use: The requested external ID is already being used by another group.\n", 
      "properties": {
        ".tag": {
          "enum": [
            "group_not_found", 
            "other", 
            "system_managed_group_disallowed", 
            "group_name_already_used", 
            "group_name_invalid", 
            "external_id_already_in_use"
          ], 
          "type": "string", 
          "title": "Choice of GroupUpdateError"
        }
      }
    }, 
    "ShowcaseDeleteCommentDetails": {
      "type": "object", 
      "description": "Deleted showcase comment.\nevent_uuid: Event unique identifier.\ncomment_text: Comment text.\n", 
      "properties": {
        "comment_text": {
          "type": "string", 
          "description": "Comment text."
        }, 
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "GroupMembersRemoveArg": {
      "type": "object", 
      "description": "group: Group from which users will be removed.\nusers: List of users to be removed from the group.\nreturn_members: Whether to return the list of members in the group.  Note that the default value will cause all the group members  to be returned in the response. This may take a long time for large groups.\n", 
      "properties": {
        "return_members": {
          "type": "boolean", 
          "description": "Whether to return the list of members in the group.  Note that the default value will cause all the group members  to be returned in the response. This may take a long time for large groups."
        }, 
        "group": {
          "$ref": "#/definitions/GroupSelector"
        }, 
        "users": {
          "items": {
            "$ref": "#/definitions/UserSelectorArg"
          }, 
          "type": "array", 
          "description": "List of users to be removed from the group."
        }
      }
    }, 
    "DeviceChangeIpWebDetails": {
      "type": "object", 
      "description": "Changed IP address associated with active web session.\nuser_agent: Web browser name.\n", 
      "properties": {
        "user_agent": {
          "type": "string", 
          "description": "Web browser name."
        }
      }
    }, 
    "SharedContentChangeLinkAudienceType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SsoRemoveLogoutUrlDetails": {
      "type": "object", 
      "description": "Removed sign-out URL for SSO.\nprevious_value: Previous single sign-on logout URL.\n", 
      "properties": {
        "previous_value": {
          "type": "string", 
          "description": "Previous single sign-on logout URL."
        }
      }
    }, 
    "PaperDocResolveCommentType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "ListMembersAppsResult": {
      "type": "object", 
      "description": "Information returned by :route:`linked_apps/list_members_linked_apps`.\napps: The linked applications of each member of the team.\nhas_more: If true, then there are more apps available. Pass the cursor to :route:`linked_apps/list_members_linked_apps` to retrieve the rest.\ncursor: Pass the cursor into :route:`linked_apps/list_members_linked_apps` to receive the next sub list of team's applications.\n", 
      "properties": {
        "has_more": {
          "type": "boolean", 
          "description": "If true, then there are more apps available. Pass the cursor to :route:`linked_apps/list_members_linked_apps` to retrieve the rest."
        }, 
        "cursor": {
          "type": "string", 
          "description": "Pass the cursor into :route:`linked_apps/list_members_linked_apps` to receive the next sub list of team's applications."
        }, 
        "apps": {
          "items": {
            "$ref": "#/definitions/MemberLinkedApps"
          }, 
          "type": "array", 
          "description": "The linked applications of each member of the team."
        }
      }
    }, 
    "ShowcaseChangeEnabledPolicyDetails": {
      "type": "object", 
      "description": "Enabled/disabled Dropbox Showcase for team.\nnew_value: New Dropbox Showcase policy.\nprevious_value: Previous Dropbox Showcase policy.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/ShowcaseEnabledPolicy"
        }, 
        "previous_value": {
          "$ref": "#/definitions/ShowcaseEnabledPolicy"
        }
      }
    }, 
    "FileUnlikeCommentDetails": {
      "type": "object", 
      "description": "Unliked file comment.\ncomment_text: Comment text. Might be missing due to historical data gap.\n", 
      "properties": {
        "comment_text": {
          "type": "string", 
          "description": "Comment text. Might be missing due to historical data gap."
        }
      }
    }, 
    "SharedFolderMountType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "DeviceChangeIpDesktopType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "PaperDocDownloadDetails": {
      "type": "object", 
      "description": "Downloaded Paper doc in specific format.\nevent_uuid: Event unique identifier.\nexport_file_format: Export file format.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }, 
        "export_file_format": {
          "$ref": "#/definitions/PaperDownloadFormat"
        }
      }
    }, 
    "PaperFolderTeamInviteDetails": {
      "type": "object", 
      "description": "Shared Paper folder with member.\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "RevokeLinkedAppBatchError": {
      "type": "object", 
      "description": "Error returned by :route:`linked_apps/revoke_linked_app_batch`.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "other"
          ], 
          "type": "string", 
          "title": "Choice of RevokeLinkedAppBatchError"
        }
      }
    }, 
    "ShowcaseEditedType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SharedContentChangeLinkExpiryDetails": {
      "type": "object", 
      "description": "Changed link expiration of shared file/folder.\nnew_value: New shared content link expiration date. Might be missing due to historical data gap.\nprevious_value: Previous shared content link expiration date. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "type": "string", 
          "description": "New shared content link expiration date. Might be missing due to historical data gap."
        }, 
        "previous_value": {
          "type": "string", 
          "description": "Previous shared content link expiration date. Might be missing due to historical data gap."
        }
      }
    }, 
    "PaperFolderFollowedDetails": {
      "type": "object", 
      "description": "Followed Paper folder.\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "SignInAsSessionStartType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "ShowcasePermanentlyDeletedType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SharedContentRemoveLinkPasswordDetails": {
      "type": "object", 
      "description": "Removed link password of shared file/folder.\n", 
      "properties": {}
    }, 
    "SharedContentChangeViewerInfoPolicyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SignInAsSessionEndDetails": {
      "type": "object", 
      "description": "Ended admin sign-in-as session.\n", 
      "properties": {}
    }, 
    "ResellerSupportSessionEndDetails": {
      "type": "object", 
      "description": "Ended reseller support session.\n", 
      "properties": {}
    }, 
    "PermanentDeleteChangePolicyDetails": {
      "type": "object", 
      "description": "Enabled/disabled ability of team members to permanently delete content.\nnew_value: New permanent delete content policy.\nprevious_value: Previous permanent delete content policy. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/ContentPermanentDeletePolicy"
        }, 
        "previous_value": {
          "$ref": "#/definitions/ContentPermanentDeletePolicy"
        }
      }
    }, 
    "LoginSuccessType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SfTeamJoinFromOobLinkType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SharedFolderChangeMembersPolicyDetails": {
      "type": "object", 
      "description": "Changed who can become member of shared folder.\nnew_value: New external invite policy.\nprevious_value: Previous external invite policy. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/MemberPolicy"
        }, 
        "previous_value": {
          "$ref": "#/definitions/MemberPolicy"
        }
      }
    }, 
    "NoteSharedDetails": {
      "type": "object", 
      "description": "Shared Paper doc.\n", 
      "properties": {}
    }, 
    "AppUnlinkTeamDetails": {
      "type": "object", 
      "description": "Unlinked app for team.\napp_info: Relevant application details.\n", 
      "properties": {
        "app_info": {
          "$ref": "#/definitions/AppLogInfo"
        }
      }
    }, 
    "SharedLinkChangeExpiryDetails": {
      "type": "object", 
      "description": "Changed shared link expiration date.\nnew_value: New shared link expiration date. Might be missing due to historical data gap.\nprevious_value: Previous shared link expiration date. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "type": "string", 
          "description": "New shared link expiration date. Might be missing due to historical data gap."
        }, 
        "previous_value": {
          "type": "string", 
          "description": "Previous shared link expiration date. Might be missing due to historical data gap."
        }
      }
    }, 
    "ExcludedUsersUpdateStatus": {
      "type": "object", 
      "description": "Excluded users update operation status.\nsuccess: Update successful.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "success", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of ExcludedUsersUpdateStatus"
        }
      }
    }, 
    "MembersSetPermissionsArg": {
      "type": "object", 
      "description": "Exactly one of team_member_id, email, or external_id must be provided to identify the user account.\nuser: Identity of user whose role will be set.\nnew_role: The new role of the member.\n", 
      "properties": {
        "user": {
          "$ref": "#/definitions/UserSelectorArg"
        }, 
        "new_role": {
          "$ref": "#/definitions/AdminTier"
        }
      }
    }, 
    "TeamMemberLogInfo": {
      "type": "object", 
      "description": "Team member's logged information.\naccount_id: User unique ID. Might be missing due to historical data gap.\ndisplay_name: User display name. Might be missing due to historical data gap.\nemail: User email address. Might be missing due to historical data gap.\nteam_member_id: Team member ID. Might be missing due to historical data gap.\nmember_external_id: Team member external ID.\n", 
      "properties": {
        "team_member_id": {
          "type": "string", 
          "description": "Team member ID. Might be missing due to historical data gap."
        }, 
        "display_name": {
          "type": "string", 
          "description": "User display name. Might be missing due to historical data gap."
        }, 
        "account_id": {
          "type": "string", 
          "description": "User unique ID. Might be missing due to historical data gap."
        }, 
        "member_external_id": {
          "type": "string", 
          "description": "Team member external ID."
        }, 
        "email": {
          "type": "string", 
          "description": "User email address. Might be missing due to historical data gap."
        }
      }
    }, 
    "SecondaryMailsPolicyChangedType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "TeamFolderArchiveJobStatus": {
      "type": "object", 
      "description": "in_progress: The asynchronous job is still in progress.\ncomplete: The archive job has finished. The value is the metadata for the resulting team folder.\nfailed: Error occurred while performing an asynchronous job from :route:`team_folder/archive`.\n", 
      "properties": {
        "failed": {
          "$ref": "#/definitions/TeamFolderArchiveError"
        }, 
        ".tag": {
          "enum": [
            "in_progress", 
            "complete", 
            "failed"
          ], 
          "type": "string", 
          "title": "Choice of TeamFolderArchiveJobStatus"
        }, 
        "complete": {
          "$ref": "#/definitions/TeamFolderMetadata"
        }
      }
    }, 
    "RevokeDeviceSessionArg": {
      "type": "object", 
      "description": "web_session: End an active session.\ndesktop_client: Unlink a linked desktop device.\nmobile_client: Unlink a linked mobile device.\n", 
      "properties": {
        "desktop_client": {
          "$ref": "#/definitions/RevokeDesktopClientArg"
        }, 
        ".tag": {
          "enum": [
            "web_session", 
            "desktop_client", 
            "mobile_client"
          ], 
          "type": "string", 
          "title": "Choice of RevokeDeviceSessionArg"
        }, 
        "web_session": {
          "$ref": "#/definitions/DeviceSessionArg"
        }, 
        "mobile_client": {
          "$ref": "#/definitions/DeviceSessionArg"
        }
      }
    }, 
    "MembersListResult": {
      "type": "object", 
      "description": "members: List of team members.\ncursor: Pass the cursor into :route:`members/list/continue` to obtain the additional members.\nhas_more: Is true if there are additional team members that have not been returned yet. An additional call to :route:`members/list/continue` can retrieve them.\n", 
      "properties": {
        "cursor": {
          "type": "string", 
          "description": "Pass the cursor into :route:`members/list/continue` to obtain the additional members."
        }, 
        "has_more": {
          "type": "boolean", 
          "description": "Is true if there are additional team members that have not been returned yet. An additional call to :route:`members/list/continue` can retrieve them."
        }, 
        "members": {
          "items": {
            "$ref": "#/definitions/TeamMemberInfo"
          }, 
          "type": "array", 
          "description": "List of team members."
        }
      }
    }, 
    "EmmErrorDetails": {
      "type": "object", 
      "description": "Failed to sign in via EMM.\nerror_details: Error details.\n", 
      "properties": {
        "error_details": {
          "$ref": "#/definitions/FailureDetailsLogInfo"
        }
      }
    }, 
    "MembersSendWelcomeError": {
      "type": "object", 
      "description": "user_not_found: No matching user found. The provided team_member_id, email, or external_id does not exist on this team.\nuser_not_in_team: The user is not a member of the team.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "user_not_found", 
            "user_not_in_team", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of MembersSendWelcomeError"
        }
      }
    }, 
    "SmartSyncCreateAdminPrivilegeReportDetails": {
      "type": "object", 
      "description": "Created Smart Sync non-admin devices report.\n", 
      "properties": {}
    }, 
    "PaperContentRenameType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SsoAddCertType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SfAllowNonMembersToViewSharedLinksDetails": {
      "type": "object", 
      "description": "Allowed non-collaborators to view links to files in shared folder.\ntarget_asset_index: Target asset position in the Assets list.\noriginal_folder_name: Original shared folder name.\nshared_folder_type: Shared folder type. Might be missing due to historical data gap.\n", 
      "properties": {
        "target_asset_index": {
          "type": "number", 
          "description": "Target asset position in the Assets list."
        }, 
        "original_folder_name": {
          "type": "string", 
          "description": "Original shared folder name."
        }, 
        "shared_folder_type": {
          "type": "string", 
          "description": "Shared folder type. Might be missing due to historical data gap."
        }
      }
    }, 
    "DeviceApprovalsChangeOverageActionDetails": {
      "type": "object", 
      "description": "Changed device approvals setting when member is over limit.\nnew_value: New over the limits policy. Might be missing due to historical data gap.\nprevious_value: Previous over the limit policy. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/RolloutMethod"
        }, 
        "previous_value": {
          "$ref": "#/definitions/RolloutMethod"
        }
      }
    }, 
    "TfaChangeBackupPhoneType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "TeamSharingPolicies": {
      "type": "object", 
      "description": "Policies governing sharing within and outside of the team.\nshared_folder_member_policy: Who can join folders shared by team members.\nshared_folder_join_policy: Which shared folders team members can join.\nshared_link_create_policy: Who can view shared links owned by team members.\n", 
      "properties": {
        "shared_folder_join_policy": {
          "$ref": "#/definitions/SharedFolderJoinPolicy"
        }, 
        "shared_folder_member_policy": {
          "$ref": "#/definitions/SharedFolderMemberPolicy"
        }, 
        "shared_link_create_policy": {
          "$ref": "#/definitions/SharedLinkCreatePolicy"
        }
      }
    }, 
    "GroupSelectorError": {
      "type": "object", 
      "description": "Error that can be raised when :type:`GroupSelector` is used.\ngroup_not_found: No matching group found. No groups match the specified group ID.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "group_not_found", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of GroupSelectorError"
        }
      }
    }, 
    "PaperDocDeleteCommentType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "TeamMembershipType": {
      "type": "object", 
      "description": "full: User uses a license and has full access to team resources like the shared quota.\nlimited: User does not have access to the shared quota and team admins have restricted administrative control.\n", 
      "properties": {
        ".tag": {
          "enum": [
            "full", 
            "limited"
          ], 
          "type": "string", 
          "title": "Choice of TeamMembershipType"
        }
      }
    }, 
    "SharedFolderCreateDetails": {
      "type": "object", 
      "description": "Created shared folder.\ntarget_ns_id: Target namespace ID. Might be missing due to historical data gap.\n", 
      "properties": {
        "target_ns_id": {
          "type": "string", 
          "description": "Target namespace ID. Might be missing due to historical data gap."
        }
      }
    }, 
    "PaperDownloadFormat": {
      "type": "object", 
      "description": "docx: None\nhtml: None\nmarkdown: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "docx", 
            "html", 
            "markdown", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of PaperDownloadFormat"
        }
      }
    }, 
    "TemplateError": {
      "type": "object", 
      "description": "template_not_found: Template does not exist for the given identifier.\nrestricted_content: You do not have permission to modify this template.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "template_not_found", 
            "restricted_content", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of TemplateError"
        }, 
        "template_not_found": {
          "type": "string", 
          "description": "Template does not exist for the given identifier."
        }
      }
    }, 
    "ListTeamDevicesResult": {
      "type": "object", 
      "description": "devices: The devices of each member of the team.\nhas_more: If true, then there are more devices available. Pass the cursor to :route:`devices/list_team_devices` to retrieve the rest.\ncursor: Pass the cursor into :route:`devices/list_team_devices` to receive the next sub list of team's devices.\n", 
      "properties": {
        "has_more": {
          "type": "boolean", 
          "description": "If true, then there are more devices available. Pass the cursor to :route:`devices/list_team_devices` to retrieve the rest."
        }, 
        "cursor": {
          "type": "string", 
          "description": "Pass the cursor into :route:`devices/list_team_devices` to receive the next sub list of team's devices."
        }, 
        "devices": {
          "items": {
            "$ref": "#/definitions/MemberDevices"
          }, 
          "type": "array", 
          "description": "The devices of each member of the team."
        }
      }
    }, 
    "TimeRange": {
      "type": "object", 
      "description": "Time range.\nstart_time: Optional starting time (inclusive).\nend_time: Optional ending time (exclusive).\n", 
      "properties": {
        "start_time": {
          "type": "string", 
          "description": "Optional starting time (inclusive)."
        }, 
        "end_time": {
          "type": "string", 
          "description": "Optional ending time (exclusive)."
        }
      }
    }, 
    "ViewerInfoPolicy": {
      "type": "object", 
      "description": "enabled: Viewer information is available on this file.\ndisabled: Viewer information is disabled on this file.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "enabled", 
            "disabled", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of ViewerInfoPolicy"
        }
      }
    }, 
    "SharedContentChangeLinkPasswordDetails": {
      "type": "object", 
      "description": "Changed link password of shared file/folder.\n", 
      "properties": {}
    }, 
    "SharedContentAddInviteesDetails": {
      "type": "object", 
      "description": "Invited user to Dropbox and added them to shared file/folder.\nshared_content_access_level: Shared content access level.\ninvitees: A list of invitees.\n", 
      "properties": {
        "shared_content_access_level": {
          "$ref": "#/definitions/AccessLevel"
        }, 
        "invitees": {
          "items": {
            "type": "string"
          }, 
          "type": "array", 
          "description": "A list of invitees."
        }
      }
    }, 
    "PaperDocChangeSubscriptionDetails": {
      "type": "object", 
      "description": "Followed/unfollowed Paper doc.\nevent_uuid: Event unique identifier.\nnew_subscription_level: New doc subscription level.\nprevious_subscription_level: Previous doc subscription level. Might be missing due to historical data gap.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }, 
        "previous_subscription_level": {
          "type": "string", 
          "description": "Previous doc subscription level. Might be missing due to historical data gap."
        }, 
        "new_subscription_level": {
          "type": "string", 
          "description": "New doc subscription level."
        }
      }
    }, 
    "FileResolveCommentType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "FileRequestsEmailsEnabledType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "WebSessionsChangeIdleLengthPolicyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "LookupError": {
      "type": "object", 
      "description": "malformed_path: None\nnot_found: There is nothing at the given path.\nnot_file: We were expecting a file, but the given path refers to something that isn't a file.\nnot_folder: We were expecting a folder, but the given path refers to something that isn't a folder.\nrestricted_content: The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.\nother: None\n", 
      "properties": {
        "malformed_path": {
          "type": "string"
        }, 
        ".tag": {
          "enum": [
            "malformed_path", 
            "not_found", 
            "not_file", 
            "not_folder", 
            "restricted_content", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of LookupError"
        }
      }
    }, 
    "FilePermanentlyDeleteDetails": {
      "type": "object", 
      "description": "Permanently deleted files and/or folders.\n", 
      "properties": {}
    }, 
    "ContentSyncSettingArg": {
      "type": "object", 
      "description": "id: Id of the item this setting is applied to.\nsync_setting: Setting for this item.\n", 
      "properties": {
        "sync_setting": {
          "$ref": "#/definitions/SyncSettingArg"
        }, 
        "id": {
          "type": "string", 
          "description": "Id of the item this setting is applied to."
        }
      }
    }, 
    "PollEmptyResult": {
      "type": "object", 
      "description": "Result returned by methods that poll for the status of an asynchronous job. Upon completion of the job, no additional information is returned.\nin_progress: The asynchronous job is still in progress.\ncomplete: The asynchronous job has completed successfully.\n", 
      "properties": {
        ".tag": {
          "enum": [
            "in_progress", 
            "complete"
          ], 
          "type": "string", 
          "title": "Choice of PollEmptyResult"
        }
      }
    }, 
    "PaperContentCreateType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "ListTeamAppsError": {
      "type": "object", 
      "description": "Error returned by :route:`linked_apps/list_team_linked_apps`.\nreset: Indicates that the cursor has been invalidated. Call :route:`linked_apps/list_team_linked_apps` again with an empty cursor to obtain a new cursor.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "reset", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of ListTeamAppsError"
        }
      }
    }, 
    "ShowcaseViewDetails": {
      "type": "object", 
      "description": "Viewed showcase.\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "FileCommentsChangePolicyDetails": {
      "type": "object", 
      "description": "Enabled/disabled commenting on team files.\nnew_value: New commenting on team files policy.\nprevious_value: Previous commenting on team files policy. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/FileCommentsPolicy"
        }, 
        "previous_value": {
          "$ref": "#/definitions/FileCommentsPolicy"
        }
      }
    }, 
    "DeviceLinkFailType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SpaceLimitsStatus": {
      "type": "object", 
      "description": "within_quota: None\nnear_quota: None\nover_quota: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "within_quota", 
            "near_quota", 
            "over_quota", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of SpaceLimitsStatus"
        }
      }
    }, 
    "DomainInvitesEmailExistingUsersDetails": {
      "type": "object", 
      "description": "Sent domain invites to existing domain accounts.\ndomain_name: Domain names.\nnum_recipients: Number of recipients.\n", 
      "properties": {
        "domain_name": {
          "type": "string", 
          "description": "Domain names."
        }, 
        "num_recipients": {
          "type": "number", 
          "description": "Number of recipients."
        }
      }
    }, 
    "EmmAddExceptionType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "PaperContentAddMemberDetails": {
      "type": "object", 
      "description": "Added team member to Paper doc/folder.\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "SharedFolderTransferOwnershipType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "PaperEnabledPolicy": {
      "type": "object", 
      "description": "disabled: Paper is disabled.\nenabled: Paper is enabled.\nunspecified: Unspecified policy.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "disabled", 
            "enabled", 
            "unspecified", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of PaperEnabledPolicy"
        }
      }
    }, 
    "TeamNamespacesListArg": {
      "type": "object", 
      "description": "limit: Specifying a value here has no effect.\n", 
      "properties": {
        "limit": {
          "type": "number", 
          "description": "Specifying a value here has no effect."
        }
      }
    }, 
    "EmmState": {
      "type": "object", 
      "description": "disabled: Emm token is disabled.\noptional: Emm token is optional.\nrequired: Emm token is required.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "disabled", 
            "optional", 
            "required", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of EmmState"
        }
      }
    }, 
    "AddTemplateArg": {
      "type": "object", 
      "description": "name: Display name for the template. Template names can be up to 256 bytes.\ndescription: Description for the template. Template descriptions can be up to 1024 bytes.\nfields: Definitions of the property fields associated with this template. There can be up to 32 properties in a single template.\n", 
      "properties": {
        "fields": {
          "items": {
            "$ref": "#/definitions/PropertyFieldTemplate"
          }, 
          "type": "array", 
          "description": "Definitions of the property fields associated with this template. There can be up to 32 properties in a single template."
        }, 
        "name": {
          "type": "string", 
          "description": "Display name for the template. Template names can be up to 256 bytes."
        }, 
        "description": {
          "type": "string", 
          "description": "Description for the template. Template descriptions can be up to 1024 bytes."
        }
      }
    }, 
    "SyncSetting": {
      "type": "object", 
      "description": "default: On first sync to members' computers, the specified folder will follow its parent folder's setting or otherwise follow default sync behavior.\nnot_synced: On first sync to members' computers, the specified folder will be set to not sync with selective sync.\nnot_synced_inactive: The specified folder's not_synced setting is inactive due to its location or other configuration changes. It will follow its parent folder's setting.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "default", 
            "not_synced", 
            "not_synced_inactive", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of SyncSetting"
        }
      }
    }, 
    "AddTemplateResult": {
      "type": "object", 
      "description": "template_id: An identifier for template added by  See :route:`templates/add_for_user` or :route:`templates/add_for_team`.\n", 
      "properties": {
        "template_id": {
          "type": "string", 
          "description": "An identifier for template added by  See :route:`templates/add_for_user` or :route:`templates/add_for_team`."
        }
      }
    }, 
    "SharingChangeMemberPolicyDetails": {
      "type": "object", 
      "description": "Changed whether members can share files/folders outside team.\nnew_value: New external invite policy.\nprevious_value: Previous external invite policy. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/SharingMemberPolicy"
        }, 
        "previous_value": {
          "$ref": "#/definitions/SharingMemberPolicy"
        }
      }
    }, 
    "SsoChangePolicyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "AccessMethodLogInfo": {
      "type": "object", 
      "description": "Indicates the method in which the action was performed.\nend_user: End user session details.\nsign_in_as: Sign in as session details.\ncontent_manager: Content manager session details.\nadmin_console: Admin console session details.\napi: Api session details.\nother: None\n", 
      "properties": {
        "end_user": {
          "$ref": "#/definitions/SessionLogInfo"
        }, 
        "admin_console": {
          "$ref": "#/definitions/WebSessionLogInfo"
        }, 
        "content_manager": {
          "$ref": "#/definitions/WebSessionLogInfo"
        }, 
        ".tag": {
          "enum": [
            "end_user", 
            "sign_in_as", 
            "content_manager", 
            "admin_console", 
            "api", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of AccessMethodLogInfo"
        }, 
        "api": {
          "$ref": "#/definitions/ApiSessionLogInfo"
        }, 
        "sign_in_as": {
          "$ref": "#/definitions/WebSessionLogInfo"
        }
      }
    }, 
    "TeamFolderDowngradeDetails": {
      "type": "object", 
      "description": "Downgraded team folder to regular shared folder.\ntarget_asset_index: Target asset position in the Assets list.\n", 
      "properties": {
        "target_asset_index": {
          "type": "number", 
          "description": "Target asset position in the Assets list."
        }
      }
    }, 
    "TeamProfileChangeDefaultLanguageDetails": {
      "type": "object", 
      "description": "Changed default language for team.\nnew_value: New team's default language.\nprevious_value: Previous team's default language.\n", 
      "properties": {
        "new_value": {
          "type": "string", 
          "description": "New team's default language."
        }, 
        "previous_value": {
          "type": "string", 
          "description": "Previous team's default language."
        }
      }
    }, 
    "ExportMembersReportType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "GroupCreateDetails": {
      "type": "object", 
      "description": "Created group.\nis_company_managed: Is company managed group. Might be missing due to historical data gap.\njoin_policy: Group join policy.\n", 
      "properties": {
        "is_company_managed": {
          "type": "boolean", 
          "description": "Is company managed group. Might be missing due to historical data gap."
        }, 
        "join_policy": {
          "$ref": "#/definitions/GroupJoinPolicy"
        }
      }
    }, 
    "TeamFolderRenameArg": {
      "type": "object", 
      "description": "team_folder_id: The ID of the team folder.\nname: New team folder name.\n", 
      "properties": {
        "team_folder_id": {
          "type": "string", 
          "description": "The ID of the team folder."
        }, 
        "name": {
          "type": "string", 
          "description": "New team folder name."
        }
      }
    }, 
    "MemberChangeEmailDetails": {
      "type": "object", 
      "description": "Changed team member email.\nnew_value: New email.\nprevious_value: Previous email. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "type": "string", 
          "description": "New email."
        }, 
        "previous_value": {
          "type": "string", 
          "description": "Previous email. Might be missing due to historical data gap."
        }
      }
    }, 
    "ShowcaseEditCommentType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "MembersSetProfileError": {
      "type": "object", 
      "description": "user_not_found: No matching user found. The provided team_member_id, email, or external_id does not exist on this team.\nuser_not_in_team: The user is not a member of the team.\nexternal_id_and_new_external_id_unsafe: It is unsafe to use both external_id and new_external_id.\nno_new_data_specified: None of new_email, new_given_name, new_surname, or new_external_id are specified.\nemail_reserved_for_other_user: Email is already reserved for another user.\nexternal_id_used_by_other_user: The external ID is already in use by another team member.\nset_profile_disallowed: Modifying deleted users is not allowed.\nparam_cannot_be_empty: Parameter new_email cannot be empty.\npersistent_id_disabled: Persistent ID is only available to teams with persistent ID SAML configuration. Please contact Dropbox for more information.\npersistent_id_used_by_other_user: The persistent ID is already in use by another team member.\ndirectory_restricted_off: Directory Restrictions option is not available.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "user_not_found", 
            "user_not_in_team", 
            "external_id_and_new_external_id_unsafe", 
            "no_new_data_specified", 
            "email_reserved_for_other_user", 
            "external_id_used_by_other_user", 
            "set_profile_disallowed", 
            "param_cannot_be_empty", 
            "persistent_id_disabled", 
            "persistent_id_used_by_other_user", 
            "directory_restricted_off", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of MembersSetProfileError"
        }
      }
    }, 
    "SsoChangeLoginUrlDetails": {
      "type": "object", 
      "description": "Changed sign-in URL for SSO.\nprevious_value: Previous single sign-on login URL.\nnew_value: New single sign-on login URL.\n", 
      "properties": {
        "new_value": {
          "type": "string", 
          "description": "New single sign-on login URL."
        }, 
        "previous_value": {
          "type": "string", 
          "description": "Previous single sign-on login URL."
        }
      }
    }, 
    "RevokeLinkedAppBatchResult": {
      "type": "object", 
      "description": "revoke_linked_app_status: None\n", 
      "properties": {
        "revoke_linked_app_status": {
          "items": {
            "$ref": "#/definitions/RevokeLinkedAppStatus"
          }, 
          "type": "array"
        }
      }
    }, 
    "PaperDocDownloadType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "PaperContentPermanentlyDeleteDetails": {
      "type": "object", 
      "description": "Permanently deleted Paper doc/folder.\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "GroupsMembersListContinueError": {
      "type": "object", 
      "description": "invalid_cursor: The cursor is invalid.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "invalid_cursor", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of GroupsMembersListContinueError"
        }
      }
    }, 
    "GroupAccessType": {
      "type": "object", 
      "description": "Role of a user in group.\nmember: User is a member of the group, but has no special permissions.\nowner: User can rename the group, and add/remove members.\n", 
      "properties": {
        ".tag": {
          "enum": [
            "member", 
            "owner"
          ], 
          "type": "string", 
          "title": "Choice of GroupAccessType"
        }
      }
    }, 
    "SharedLinkChangeVisibilityType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "DomainInvitesDeclineRequestToJoinTeamDetails": {
      "type": "object", 
      "description": "Declined user's request to join team.\n", 
      "properties": {}
    }, 
    "FileSaveCopyReferenceType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "GroupsMembersListContinueArg": {
      "type": "object", 
      "description": "cursor: Indicates from what point to get the next set of groups.\n", 
      "properties": {
        "cursor": {
          "type": "string", 
          "description": "Indicates from what point to get the next set of groups."
        }
      }
    }, 
    "TeamProfileChangeDefaultLanguageType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "GroupsListContinueArg": {
      "type": "object", 
      "description": "cursor: Indicates from what point to get the next set of groups.\n", 
      "properties": {
        "cursor": {
          "type": "string", 
          "description": "Indicates from what point to get the next set of groups."
        }
      }
    }, 
    "FileResolveCommentDetails": {
      "type": "object", 
      "description": "Resolved file comment.\ncomment_text: Comment text. Might be missing due to historical data gap.\n", 
      "properties": {
        "comment_text": {
          "type": "string", 
          "description": "Comment text. Might be missing due to historical data gap."
        }
      }
    }, 
    "SharedLinkDisableDetails": {
      "type": "object", 
      "description": "Removed shared link.\nshared_link_owner: Shared link owner details. Might be missing due to historical data gap.\n", 
      "properties": {
        "shared_link_owner": {
          "$ref": "#/definitions/UserLogInfo"
        }
      }
    }, 
    "ShowcasePostCommentType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "DirectoryRestrictionsRemoveMembersDetails": {
      "type": "object", 
      "description": "Removed members from directory restrictions list.\n", 
      "properties": {}
    }, 
    "SharedContentChangeLinkAudienceDetails": {
      "type": "object", 
      "description": "Changed link audience of shared file/folder.\nnew_value: New link audience value.\nprevious_value: Previous link audience value.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/LinkAudience"
        }, 
        "previous_value": {
          "$ref": "#/definitions/LinkAudience"
        }
      }
    }, 
    "FileRequestDeadline": {
      "type": "object", 
      "description": "File request deadline\ndeadline: The deadline for this file request. Might be missing due to historical data gap.\nallow_late_uploads: If set, allow uploads after the deadline has passed. Might be missing due to historical data gap.\n", 
      "properties": {
        "deadline": {
          "type": "string", 
          "description": "The deadline for this file request. Might be missing due to historical data gap."
        }, 
        "allow_late_uploads": {
          "type": "string", 
          "description": "If set, allow uploads after the deadline has passed. Might be missing due to historical data gap."
        }
      }
    }, 
    "RevokeDeviceSessionBatchResult": {
      "type": "object", 
      "description": "revoke_devices_status: None\n", 
      "properties": {
        "revoke_devices_status": {
          "items": {
            "$ref": "#/definitions/RevokeDeviceSessionStatus"
          }, 
          "type": "array"
        }
      }
    }, 
    "TeamFolderTeamSharedDropboxError": {
      "type": "object", 
      "description": "disallowed: This action is not allowed for a shared team root.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "disallowed", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of TeamFolderTeamSharedDropboxError"
        }
      }
    }, 
    "DeviceSessionLogInfo": {
      "type": "object", 
      "description": "Device's session logged information.\nip_address: The IP address of the last activity from this session. Might be missing due to historical data gap.\ncreated: The time this session was created. Might be missing due to historical data gap.\nupdated: The time of the last activity from this session. Might be missing due to historical data gap.\n", 
      "properties": {
        "updated": {
          "type": "string", 
          "description": "The time of the last activity from this session. Might be missing due to historical data gap."
        }, 
        "ip_address": {
          "type": "string", 
          "description": "The IP address of the last activity from this session. Might be missing due to historical data gap."
        }, 
        "created": {
          "type": "string", 
          "description": "The time this session was created. Might be missing due to historical data gap."
        }
      }
    }, 
    "DesktopPlatform": {
      "type": "object", 
      "description": "windows: Official Windows Dropbox desktop client.\nmac: Official Mac Dropbox desktop client.\nlinux: Official Linux Dropbox desktop client.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "windows", 
            "mac", 
            "linux", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of DesktopPlatform"
        }
      }
    }, 
    "DataPlacementRestrictionChangePolicyDetails": {
      "type": "object", 
      "description": "Set restrictions on data center locations where team data resides.\nprevious_value: Previous placement restriction.\nnew_value: New placement restriction.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/PlacementRestriction"
        }, 
        "previous_value": {
          "$ref": "#/definitions/PlacementRestriction"
        }
      }
    }, 
    "PaperDocUnresolveCommentType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "GroupManagementType": {
      "type": "object", 
      "description": "The group type determines how a group is managed.\nuser_managed: A group which is managed by selected users.\ncompany_managed: A group which is managed by team admins only.\nsystem_managed: A group which is managed automatically by Dropbox.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "user_managed", 
            "company_managed", 
            "system_managed", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of GroupManagementType"
        }
      }
    }, 
    "PaperChangeMemberPolicyDetails": {
      "type": "object", 
      "description": "Changed whether members can share Paper docs outside team, and if docs are accessible only by team members or anyone by default.\nnew_value: New paper external accessibility policy.\nprevious_value: Previous paper external accessibility policy. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/PaperMemberPolicy"
        }, 
        "previous_value": {
          "$ref": "#/definitions/PaperMemberPolicy"
        }
      }
    }, 
    "TeamFolderListError": {
      "type": "object", 
      "description": "access_error: None\n", 
      "properties": {
        "access_error": {
          "$ref": "#/definitions/TeamFolderAccessError"
        }
      }
    }, 
    "TeamProfileChangeLogoDetails": {
      "type": "object", 
      "description": "Changed team logo displayed on shared link headers.\n", 
      "properties": {}
    }, 
    "SharedContentChangeInviteeRoleType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "TwoAccountChangePolicyDetails": {
      "type": "object", 
      "description": "Enabled/disabled option for members to link personal Dropbox account and team account to same computer.\nnew_value: New two account policy.\nprevious_value: Previous two account policy. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/TwoAccountPolicy"
        }, 
        "previous_value": {
          "$ref": "#/definitions/TwoAccountPolicy"
        }
      }
    }, 
    "AppLinkUserType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "GetTeamEventsContinueError": {
      "type": "object", 
      "description": "Errors that can be raised when calling :route:`get_events/continue`.\nbad_cursor: Bad cursor.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "bad_cursor", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of GetTeamEventsContinueError"
        }
      }
    }, 
    "TokenGetAuthenticatedAdminError": {
      "type": "object", 
      "description": "Error returned by :route:`token/get_authenticated_admin`.\nmapping_not_found: The current token is not associated with a team admin, because mappings were not recorded when the token was created. Consider re-authorizing a new access token to record its authenticating admin.\nadmin_not_active: Either the team admin that authorized this token is no longer an active member of the team or no longer a team admin.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "mapping_not_found", 
            "admin_not_active", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of TokenGetAuthenticatedAdminError"
        }
      }
    }, 
    "PaperDocChangeSharingPolicyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "ExcludedUsersListContinueArg": {
      "type": "object", 
      "description": "Excluded users list continue argument.\ncursor: Indicates from what point to get the next set of users.\n", 
      "properties": {
        "cursor": {
          "type": "string", 
          "description": "Indicates from what point to get the next set of users."
        }
      }
    }, 
    "FeaturesGetValuesBatchResult": {
      "type": "object", 
      "description": "values: None\n", 
      "properties": {
        "values": {
          "items": {
            "$ref": "#/definitions/FeatureValue"
          }, 
          "type": "array"
        }
      }
    }, 
    "PaperFolderFollowedType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "DataPlacementRestrictionSatisfyPolicyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "PaperFolderTeamInviteType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SharedContentAddInviteesType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "TeamFolderGetInfoItem": {
      "type": "object", 
      "description": "id_not_found: An ID that was provided as a parameter to :route:`team_folder/get_info` did not match any of the team's team folders.\nteam_folder_metadata: Properties of a team folder.\n", 
      "properties": {
        "team_folder_metadata": {
          "$ref": "#/definitions/TeamFolderMetadata"
        }, 
        "id_not_found": {
          "type": "string", 
          "description": "An ID that was provided as a parameter to :route:`team_folder/get_info` did not match any of the team's team folders."
        }, 
        ".tag": {
          "enum": [
            "id_not_found", 
            "team_folder_metadata"
          ], 
          "type": "string", 
          "title": "Choice of TeamFolderGetInfoItem"
        }
      }
    }, 
    "PaperContentArchiveType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SsoAddCertDetails": {
      "type": "object", 
      "description": "Added X.509 certificate for SSO.\ncertificate_details: SSO certificate details.\n", 
      "properties": {
        "certificate_details": {
          "$ref": "#/definitions/Certificate"
        }
      }
    }, 
    "TeamFolderMetadata": {
      "type": "object", 
      "description": "Properties of a team folder.\nteam_folder_id: The ID of the team folder.\nname: The name of the team folder.\nstatus: The status of the team folder.\nis_team_shared_dropbox: True if this team folder is a shared team root.\nsync_setting: The sync setting applied to this team folder.\ncontent_sync_settings: Sync settings applied to contents of this team folder.\n", 
      "properties": {
        "status": {
          "$ref": "#/definitions/TeamFolderStatus"
        }, 
        "name": {
          "type": "string", 
          "description": "The name of the team folder."
        }, 
        "team_folder_id": {
          "type": "string", 
          "description": "The ID of the team folder."
        }, 
        "is_team_shared_dropbox": {
          "type": "boolean", 
          "description": "True if this team folder is a shared team root."
        }, 
        "sync_setting": {
          "$ref": "#/definitions/SyncSetting"
        }, 
        "content_sync_settings": {
          "items": {
            "$ref": "#/definitions/ContentSyncSetting"
          }, 
          "type": "array", 
          "description": "Sync settings applied to contents of this team folder."
        }
      }
    }, 
    "SfFbInviteType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "GroupMembersAddError": {
      "type": "object", 
      "description": "group_not_found: No matching group found. No groups match the specified group ID.\nother: None\nsystem_managed_group_disallowed: This operation is not supported on system-managed groups.\nduplicate_user: You cannot add duplicate users. One or more of the members you are trying to add is already a member of the group.\ngroup_not_in_team: Group is not in this team. You cannot add members to a group that is outside of your team.\nmembers_not_in_team: These members are not part of your team. Currently, you cannot add members to a group if they are not part of your team, though this may change in a subsequent version. To add new members to your Dropbox Business team, use the :route:`members/add` endpoint.\nusers_not_found: These users were not found in Dropbox.\nuser_must_be_active_to_be_owner: A suspended user cannot be added to a group as :field:`GroupAccessType.owner`.\nuser_cannot_be_manager_of_company_managed_group: A company-managed group cannot be managed by a user.\n", 
      "properties": {
        "user_cannot_be_manager_of_company_managed_group": {
          "items": {
            "type": "string"
          }, 
          "type": "array", 
          "description": "A company-managed group cannot be managed by a user."
        }, 
        "members_not_in_team": {
          "items": {
            "type": "string"
          }, 
          "type": "array", 
          "description": "These members are not part of your team. Currently, you cannot add members to a group if they are not part of your team, though this may change in a subsequent version. To add new members to your Dropbox Business team, use the :route:`members/add` endpoint."
        }, 
        "users_not_found": {
          "items": {
            "type": "string"
          }, 
          "type": "array", 
          "description": "These users were not found in Dropbox."
        }, 
        ".tag": {
          "enum": [
            "group_not_found", 
            "other", 
            "system_managed_group_disallowed", 
            "duplicate_user", 
            "group_not_in_team", 
            "members_not_in_team", 
            "users_not_found", 
            "user_must_be_active_to_be_owner", 
            "user_cannot_be_manager_of_company_managed_group"
          ], 
          "type": "string", 
          "title": "Choice of GroupMembersAddError"
        }
      }
    }, 
    "GetTemplateArg": {
      "type": "object", 
      "description": "template_id: An identifier for template added by route  See :route:`templates/add_for_user` or :route:`templates/add_for_team`.\n", 
      "properties": {
        "template_id": {
          "type": "string", 
          "description": "An identifier for template added by route  See :route:`templates/add_for_user` or :route:`templates/add_for_team`."
        }
      }
    }, 
    "TfaRemoveBackupPhoneType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "GroupRemoveExternalIdType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SsoAddLoginUrlDetails": {
      "type": "object", 
      "description": "Added sign-in URL for SSO.\nnew_value: New single sign-on login URL.\n", 
      "properties": {
        "new_value": {
          "type": "string", 
          "description": "New single sign-on login URL."
        }
      }
    }, 
    "DataPlacementRestrictionSatisfyPolicyDetails": {
      "type": "object", 
      "description": "Completed restrictions on data center locations where team data resides.\nplacement_restriction: Placement restriction.\n", 
      "properties": {
        "placement_restriction": {
          "$ref": "#/definitions/PlacementRestriction"
        }
      }
    }, 
    "SharedFolderChangeMembersInheritancePolicyDetails": {
      "type": "object", 
      "description": "Changed whether shared folder inherits members from parent folder.\nnew_value: New member inheritance policy.\nprevious_value: Previous member inheritance policy. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/SharedFolderMembersInheritancePolicy"
        }, 
        "previous_value": {
          "$ref": "#/definitions/SharedFolderMembersInheritancePolicy"
        }
      }
    }, 
    "DeviceDeleteOnUnlinkSuccessDetails": {
      "type": "object", 
      "description": "Deleted all files from unlinked device.\nsession_info: Session unique id. Might be missing due to historical data gap.\ndisplay_name: The device name. Might be missing due to historical data gap.\n", 
      "properties": {
        "display_name": {
          "type": "string", 
          "description": "The device name. Might be missing due to historical data gap."
        }, 
        "session_info": {
          "$ref": "#/definitions/SessionLogInfo"
        }
      }
    }, 
    "SsoChangeLogoutUrlDetails": {
      "type": "object", 
      "description": "Changed sign-out URL for SSO.\nprevious_value: Previous single sign-on logout URL. Might be missing due to historical data gap.\nnew_value: New single sign-on logout URL. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "type": "string", 
          "description": "New single sign-on logout URL. Might be missing due to historical data gap."
        }, 
        "previous_value": {
          "type": "string", 
          "description": "Previous single sign-on logout URL. Might be missing due to historical data gap."
        }
      }
    }, 
    "MembersGetInfoItem": {
      "type": "object", 
      "description": "Describes a result obtained for a single user whose id was specified in the parameter of :route:`members/get_info`.\nid_not_found: An ID that was provided as a parameter to :route:`members/get_info`, and did not match a corresponding user. This might be a team_member_id, an email, or an external ID, depending on how the method was called.\nmember_info: Info about a team member.\n", 
      "properties": {
        "member_info": {
          "$ref": "#/definitions/TeamMemberInfo"
        }, 
        "id_not_found": {
          "type": "string", 
          "description": "An ID that was provided as a parameter to :route:`members/get_info`, and did not match a corresponding user. This might be a team_member_id, an email, or an external ID, depending on how the method was called."
        }, 
        ".tag": {
          "enum": [
            "id_not_found", 
            "member_info"
          ], 
          "type": "string", 
          "title": "Choice of MembersGetInfoItem"
        }
      }
    }, 
    "ExcludedUsersListResult": {
      "type": "object", 
      "description": "Excluded users list result.\nusers: None\nhas_more: Is true if there are additional excluded users that have not been returned yet. An additional call to :route:`member_space_limits/excluded_users/list/continue` can retrieve them.\ncursor: Pass the cursor into :route:`member_space_limits/excluded_users/list/continue` to obtain additional excluded users.\n", 
      "properties": {
        "has_more": {
          "type": "boolean", 
          "description": "Is true if there are additional excluded users that have not been returned yet. An additional call to :route:`member_space_limits/excluded_users/list/continue` can retrieve them."
        }, 
        "cursor": {
          "type": "string", 
          "description": "Pass the cursor into :route:`member_space_limits/excluded_users/list/continue` to obtain additional excluded users."
        }, 
        "users": {
          "items": {
            "$ref": "#/definitions/MemberProfile"
          }, 
          "type": "array"
        }
      }
    }, 
    "GroupMovedDetails": {
      "type": "object", 
      "description": "Moved group.\n", 
      "properties": {}
    }, 
    "PaperDocFollowedDetails": {
      "type": "object", 
      "description": "Followed Paper doc.\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "SharedFolderChangeLinkPolicyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SfTeamInviteChangeRoleDetails": {
      "type": "object", 
      "description": "Changed team member's role in shared folder.\ntarget_asset_index: Target asset position in the Assets list.\noriginal_folder_name: Original shared folder name.\nnew_sharing_permission: New sharing permission. Might be missing due to historical data gap.\nprevious_sharing_permission: Previous sharing permission. Might be missing due to historical data gap.\n", 
      "properties": {
        "target_asset_index": {
          "type": "number", 
          "description": "Target asset position in the Assets list."
        }, 
        "original_folder_name": {
          "type": "string", 
          "description": "Original shared folder name."
        }, 
        "new_sharing_permission": {
          "type": "string", 
          "description": "New sharing permission. Might be missing due to historical data gap."
        }, 
        "previous_sharing_permission": {
          "type": "string", 
          "description": "Previous sharing permission. Might be missing due to historical data gap."
        }
      }
    }, 
    "SsoChangeCertType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "MemberProfile": {
      "type": "object", 
      "description": "Basic member profile.\nteam_member_id: ID of user as a member of a team.\nemail: Email address of user.\nemail_verified: Is true if the user's email is verified to be owned by the user.\nstatus: The user's status as a member of a specific team.\nname: Representations for a person's name.\nmembership_type: The user's membership type: full (normal team member) vs limited (does not use a license; no access to the team's shared quota).\nexternal_id: External ID that a team can attach to the user. An application using the API may find it easier to use their own IDs instead of Dropbox IDs like account_id or team_member_id.\naccount_id: A user's account identifier.\njoined_on: The date and time the user joined as a member of a specific team.\npersistent_id: Persistent ID that a team can attach to the user. The persistent ID is unique ID to be used for SAML authentication.\nis_directory_restricted: Whether the user is a directory restricted user.\n", 
      "properties": {
        "status": {
          "$ref": "#/definitions/TeamMemberStatus"
        }, 
        "membership_type": {
          "$ref": "#/definitions/TeamMembershipType"
        }, 
        "is_directory_restricted": {
          "type": "boolean", 
          "description": "Whether the user is a directory restricted user."
        }, 
        "name": {
          "$ref": "#/definitions/Name"
        }, 
        "email_verified": {
          "type": "boolean", 
          "description": "Is true if the user's email is verified to be owned by the user."
        }, 
        "team_member_id": {
          "type": "string", 
          "description": "ID of user as a member of a team."
        }, 
        "persistent_id": {
          "type": "string", 
          "description": "Persistent ID that a team can attach to the user. The persistent ID is unique ID to be used for SAML authentication."
        }, 
        "joined_on": {
          "type": "string", 
          "description": "The date and time the user joined as a member of a specific team."
        }, 
        "external_id": {
          "type": "string", 
          "description": "External ID that a team can attach to the user. An application using the API may find it easier to use their own IDs instead of Dropbox IDs like account_id or team_member_id."
        }, 
        "email": {
          "type": "string", 
          "description": "Email address of user."
        }, 
        "account_id": {
          "type": "string", 
          "description": "A user's account identifier."
        }
      }
    }, 
    "AppUnlinkUserDetails": {
      "type": "object", 
      "description": "Unlinked app for member.\napp_info: Relevant application details.\n", 
      "properties": {
        "app_info": {
          "$ref": "#/definitions/AppLogInfo"
        }
      }
    }, 
    "IdentifierType": {
      "type": "object", 
      "description": "email: None\nfacebook_profile_name: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "email", 
            "facebook_profile_name", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of IdentifierType"
        }
      }
    }, 
    "TeamFolderListArg": {
      "type": "object", 
      "description": "limit: The maximum number of results to return per request.\n", 
      "properties": {
        "limit": {
          "type": "number", 
          "description": "The maximum number of results to return per request."
        }
      }
    }, 
    "GoogleSsoPolicy": {
      "type": "object", 
      "description": "Google SSO policy\ndisabled: None\nenabled: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "disabled", 
            "enabled", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of GoogleSsoPolicy"
        }
      }
    }, 
    "SharedFolderCreateType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "GroupDeleteError": {
      "type": "object", 
      "description": "group_not_found: No matching group found. No groups match the specified group ID.\nother: None\nsystem_managed_group_disallowed: This operation is not supported on system-managed groups.\ngroup_already_deleted: This group has already been deleted.\n", 
      "properties": {
        ".tag": {
          "enum": [
            "group_not_found", 
            "other", 
            "system_managed_group_disallowed", 
            "group_already_deleted"
          ], 
          "type": "string", 
          "title": "Choice of GroupDeleteError"
        }
      }
    }, 
    "ContextLogInfo": {
      "type": "object", 
      "description": "The primary entity on which the action was done.\nteam_member: Action was done on behalf of a team member.\nnon_team_member: Action was done on behalf of a non team member.\nanonymous: Anonymous context.\nteam: Action was done on behalf of the team.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "team_member", 
            "non_team_member", 
            "anonymous", 
            "team", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of ContextLogInfo"
        }, 
        "non_team_member": {
          "$ref": "#/definitions/NonTeamMemberLogInfo"
        }, 
        "team_member": {
          "$ref": "#/definitions/TeamMemberLogInfo"
        }
      }
    }, 
    "DirectoryRestrictionsAddMembersType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "TeamFolderDowngradeType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "PasswordChangeType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "DevicesActive": {
      "type": "object", 
      "description": "Each of the items is an array of values, one value per day. The value is the number of devices active within a time window, ending with that day.\nIf there is no data for a day, then the value will be None.\nwindows: Array of number of linked windows (desktop) clients with activity.\nmacos: Array of number of linked mac (desktop) clients with activity.\nlinux: Array of number of linked linus (desktop) clients with activity.\nios: Array of number of linked ios devices with activity.\nandroid: Array of number of linked android devices with activity.\nother: Array of number of other linked devices (blackberry, windows phone, etc)  with activity.\ntotal: Array of total number of linked clients with activity.\n", 
      "properties": {
        "macos": {
          "items": {
            "type": "number"
          }, 
          "type": "array", 
          "description": "Array of number of linked mac (desktop) clients with activity."
        }, 
        "windows": {
          "items": {
            "type": "number"
          }, 
          "type": "array", 
          "description": "Array of number of linked windows (desktop) clients with activity."
        }, 
        "ios": {
          "items": {
            "type": "number"
          }, 
          "type": "array", 
          "description": "Array of number of linked ios devices with activity."
        }, 
        "other": {
          "items": {
            "type": "number"
          }, 
          "type": "array", 
          "description": "Array of number of other linked devices (blackberry, windows phone, etc)  with activity."
        }, 
        "linux": {
          "items": {
            "type": "number"
          }, 
          "type": "array", 
          "description": "Array of number of linked linus (desktop) clients with activity."
        }, 
        "android": {
          "items": {
            "type": "number"
          }, 
          "type": "array", 
          "description": "Array of number of linked android devices with activity."
        }, 
        "total": {
          "items": {
            "type": "number"
          }, 
          "type": "array", 
          "description": "Array of total number of linked clients with activity."
        }
      }
    }, 
    "AllowDownloadDisabledDetails": {
      "type": "object", 
      "description": "Disabled downloads.\n", 
      "properties": {}
    }, 
    "MemberSpaceLimitsChangeCapsTypePolicyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "PaperChangePolicyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "MemberChangeAdminRoleType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "FileRequestChangeDetails": {
      "type": "object", 
      "description": "Changed file request.\nnew_details: New file request details.\nfile_request_id: File request id. Might be missing due to historical data gap.\nprevious_details: Previous file request details. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_details": {
          "$ref": "#/definitions/FileRequestDetails"
        }, 
        "file_request_id": {
          "type": "string", 
          "description": "File request id. Might be missing due to historical data gap."
        }, 
        "previous_details": {
          "$ref": "#/definitions/FileRequestDetails"
        }
      }
    }, 
    "LinkAudience": {
      "type": "object", 
      "description": "public: Link is accessible by anyone.\nteam: Link is accessible only by team members.\nmembers: Link is accessible only by members of the content.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "public", 
            "team", 
            "members", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of LinkAudience"
        }
      }
    }, 
    "PaperDocEditDetails": {
      "type": "object", 
      "description": "Edited Paper doc.\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "MemberDevices": {
      "type": "object", 
      "description": "Information on devices of a team's member.\nteam_member_id: The member unique Id.\nweb_sessions: List of web sessions made by this team member.\ndesktop_clients: List of desktop clients by this team member.\nmobile_clients: List of mobile clients by this team member.\n", 
      "properties": {
        "team_member_id": {
          "type": "string", 
          "description": "The member unique Id."
        }, 
        "desktop_clients": {
          "items": {
            "$ref": "#/definitions/DesktopClientSession"
          }, 
          "type": "array", 
          "description": "List of desktop clients by this team member."
        }, 
        "web_sessions": {
          "items": {
            "$ref": "#/definitions/ActiveWebSession"
          }, 
          "type": "array", 
          "description": "List of web sessions made by this team member."
        }, 
        "mobile_clients": {
          "items": {
            "$ref": "#/definitions/MobileClientSession"
          }, 
          "type": "array", 
          "description": "List of mobile clients by this team member."
        }
      }
    }, 
    "TeamFolderChangeStatusType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "MemberSpaceLimitsRemoveCustomQuotaDetails": {
      "type": "object", 
      "description": "Removed custom member space limit.\n", 
      "properties": {}
    }, 
    "ShowcaseUntrashedDeprecatedType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SharedContentChangeDownloadsPolicyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "GroupCreateError": {
      "type": "object", 
      "description": "group_name_already_used: The requested group name is already being used by another group.\ngroup_name_invalid: Group name is empty or has invalid characters.\nexternal_id_already_in_use: The requested external ID is already being used by another group.\nsystem_managed_group_disallowed: System-managed group cannot be manually created.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "group_name_already_used", 
            "group_name_invalid", 
            "external_id_already_in_use", 
            "system_managed_group_disallowed", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of GroupCreateError"
        }
      }
    }, 
    "TeamProfileRemoveLogoType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "TfaAddSecurityKeyDetails": {
      "type": "object", 
      "description": "Added security key for two-step verification.\n", 
      "properties": {}
    }, 
    "SharedContentViewType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "ShowcaseDocumentLogInfo": {
      "type": "object", 
      "description": "Showcase document's logged information.\nshowcase_id: Showcase document Id.\nshowcase_title: Showcase document title.\n", 
      "properties": {
        "showcase_id": {
          "type": "string", 
          "description": "Showcase document Id."
        }, 
        "showcase_title": {
          "type": "string", 
          "description": "Showcase document title."
        }
      }
    }, 
    "GroupMemberSetAccessTypeError": {
      "type": "object", 
      "description": "group_not_found: No matching group found. No groups match the specified group ID.\nother: None\nsystem_managed_group_disallowed: This operation is not supported on system-managed groups.\nmember_not_in_group: The specified user is not a member of this group.\nuser_cannot_be_manager_of_company_managed_group: A company managed group cannot be managed by a user.\n", 
      "properties": {
        ".tag": {
          "enum": [
            "group_not_found", 
            "other", 
            "system_managed_group_disallowed", 
            "member_not_in_group", 
            "user_cannot_be_manager_of_company_managed_group"
          ], 
          "type": "string", 
          "title": "Choice of GroupMemberSetAccessTypeError"
        }
      }
    }, 
    "PaperDocEditCommentType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "MembersListError": {
      "type": "object", 
      "description": "other: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "other"
          ], 
          "type": "string", 
          "title": "Choice of MembersListError"
        }
      }
    }, 
    "GroupsListArg": {
      "type": "object", 
      "description": "limit: Number of results to return per call.\n", 
      "properties": {
        "limit": {
          "type": "number", 
          "description": "Number of results to return per call."
        }
      }
    }, 
    "GroupRemoveExternalIdDetails": {
      "type": "object", 
      "description": "Removed external ID for group.\nprevious_value: Old external id.\n", 
      "properties": {
        "previous_value": {
          "type": "string", 
          "description": "Old external id."
        }
      }
    }, 
    "DomainVerificationRemoveDomainDetails": {
      "type": "object", 
      "description": "Removed domain from list of verified team domains.\ndomain_names: Domain names.\n", 
      "properties": {
        "domain_names": {
          "items": {
            "type": "string"
          }, 
          "type": "array", 
          "description": "Domain names."
        }
      }
    }, 
    "DeviceChangeIpDesktopDetails": {
      "type": "object", 
      "description": "Changed IP address associated with active desktop session.\ndevice_session_info: Device's session logged information.\n", 
      "properties": {
        "device_session_info": {
          "$ref": "#/definitions/DeviceSessionLogInfo"
        }
      }
    }, 
    "AssetLogInfo": {
      "type": "object", 
      "description": "Asset details.\nfile: File's details.\nfolder: Folder's details.\npaper_document: Paper docuement's details.\npaper_folder: Paper folder's details.\nshowcase_document: Showcase document's details.\nother: None\n", 
      "properties": {
        "showcase_document": {
          "$ref": "#/definitions/ShowcaseDocumentLogInfo"
        }, 
        ".tag": {
          "enum": [
            "file", 
            "folder", 
            "paper_document", 
            "paper_folder", 
            "showcase_document", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of AssetLogInfo"
        }, 
        "file": {
          "$ref": "#/definitions/FileLogInfo"
        }, 
        "paper_document": {
          "$ref": "#/definitions/PaperDocumentLogInfo"
        }, 
        "folder": {
          "$ref": "#/definitions/FolderLogInfo"
        }, 
        "paper_folder": {
          "$ref": "#/definitions/PaperFolderLogInfo"
        }
      }
    }, 
    "SharedLinkViewType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SharedFolderUnmountDetails": {
      "type": "object", 
      "description": "Deleted shared folder from Dropbox.\n", 
      "properties": {}
    }, 
    "TeamName": {
      "type": "object", 
      "description": "Team name details\nteam_display_name: Team's display name.\nteam_legal_name: Team's legal name.\n", 
      "properties": {
        "team_legal_name": {
          "type": "string", 
          "description": "Team's legal name."
        }, 
        "team_display_name": {
          "type": "string", 
          "description": "Team's display name."
        }
      }
    }, 
    "ShowcaseCreatedDetails": {
      "type": "object", 
      "description": "Created showcase.\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "HasTeamSelectiveSyncValue": {
      "type": "object", 
      "description": "The value for :field:`Feature.has_team_selective_sync`.\nhas_team_selective_sync: Does this team have team selective sync enabled.\nother: None\n", 
      "properties": {
        "has_team_selective_sync": {
          "type": "boolean", 
          "description": "Does this team have team selective sync enabled."
        }, 
        ".tag": {
          "enum": [
            "has_team_selective_sync", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of HasTeamSelectiveSyncValue"
        }
      }
    }, 
    "GetTeamEventsResult": {
      "type": "object", 
      "description": "events: List of events.\ncursor: Pass the cursor into :route:`get_events/continue` to obtain additional events.\nhas_more: Is true if there are additional events that have not been returned yet. An additional call to :route:`get_events/continue` can retrieve them.\n", 
      "properties": {
        "cursor": {
          "type": "string", 
          "description": "Pass the cursor into :route:`get_events/continue` to obtain additional events."
        }, 
        "has_more": {
          "type": "boolean", 
          "description": "Is true if there are additional events that have not been returned yet. An additional call to :route:`get_events/continue` can retrieve them."
        }, 
        "events": {
          "items": {
            "$ref": "#/definitions/TeamEvent"
          }, 
          "type": "array", 
          "description": "List of events."
        }
      }
    }, 
    "FileUnresolveCommentType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SfTeamJoinFromOobLinkDetails": {
      "type": "object", 
      "description": "Joined team member's shared folder from link.\ntarget_asset_index: Target asset position in the Assets list.\noriginal_folder_name: Original shared folder name.\ntoken_key: Shared link token key.\nsharing_permission: Sharing permission. Might be missing due to historical data gap.\n", 
      "properties": {
        "sharing_permission": {
          "type": "string", 
          "description": "Sharing permission. Might be missing due to historical data gap."
        }, 
        "target_asset_index": {
          "type": "number", 
          "description": "Target asset position in the Assets list."
        }, 
        "original_folder_name": {
          "type": "string", 
          "description": "Original shared folder name."
        }, 
        "token_key": {
          "type": "string", 
          "description": "Shared link token key."
        }
      }
    }, 
    "RevokeLinkedAppError": {
      "type": "object", 
      "description": "Error returned by :route:`linked_apps/revoke_linked_app`.\napp_not_found: Application not found.\nmember_not_found: Member not found.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "app_not_found", 
            "member_not_found", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of RevokeLinkedAppError"
        }
      }
    }, 
    "ShmodelGroupShareDetails": {
      "type": "object", 
      "description": "Shared link with group.\n", 
      "properties": {}
    }, 
    "ListMemberDevicesResult": {
      "type": "object", 
      "description": "active_web_sessions: List of web sessions made by this team member.\ndesktop_client_sessions: List of desktop clients used by this team member.\nmobile_client_sessions: List of mobile client used by this team member.\n", 
      "properties": {
        "desktop_client_sessions": {
          "items": {
            "$ref": "#/definitions/DesktopClientSession"
          }, 
          "type": "array", 
          "description": "List of desktop clients used by this team member."
        }, 
        "mobile_client_sessions": {
          "items": {
            "$ref": "#/definitions/MobileClientSession"
          }, 
          "type": "array", 
          "description": "List of mobile client used by this team member."
        }, 
        "active_web_sessions": {
          "items": {
            "$ref": "#/definitions/ActiveWebSession"
          }, 
          "type": "array", 
          "description": "List of web sessions made by this team member."
        }
      }
    }, 
    "FileEditDetails": {
      "type": "object", 
      "description": "Edited files.\n", 
      "properties": {}
    }, 
    "SfTeamInviteDetails": {
      "type": "object", 
      "description": "Invited team members to shared folder.\ntarget_asset_index: Target asset position in the Assets list.\noriginal_folder_name: Original shared folder name.\nsharing_permission: Sharing permission. Might be missing due to historical data gap.\n", 
      "properties": {
        "sharing_permission": {
          "type": "string", 
          "description": "Sharing permission. Might be missing due to historical data gap."
        }, 
        "target_asset_index": {
          "type": "number", 
          "description": "Target asset position in the Assets list."
        }, 
        "original_folder_name": {
          "type": "string", 
          "description": "Original shared folder name."
        }
      }
    }, 
    "FileRollbackChangesDetails": {
      "type": "object", 
      "description": "Rolled back file actions.\n", 
      "properties": {}
    }, 
    "SmartSyncPolicy": {
      "type": "object", 
      "description": "local: The specified content will be synced as local files by default.\non_demand: The specified content will be synced as on-demand files by default.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "local", 
            "on_demand", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of SmartSyncPolicy"
        }
      }
    }, 
    "SharedContentCopyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "NoteShareReceiveDetails": {
      "type": "object", 
      "description": "Shared received Paper doc.\n", 
      "properties": {}
    }, 
    "DisabledDomainInvitesType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "PaperDocEditCommentDetails": {
      "type": "object", 
      "description": "Edited Paper doc comment.\nevent_uuid: Event unique identifier.\ncomment_text: Comment text. Might be missing due to historical data gap.\n", 
      "properties": {
        "comment_text": {
          "type": "string", 
          "description": "Comment text. Might be missing due to historical data gap."
        }, 
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "ExcludedUsersListError": {
      "type": "object", 
      "description": "Excluded users list error.\nlist_error: An error occurred.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "list_error", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of ExcludedUsersListError"
        }
      }
    }, 
    "PropertyType": {
      "type": "object", 
      "description": "Data type of the given property field added.\nstring: The associated property field will be of type string. Unicode is supported.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "string", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of PropertyType"
        }
      }
    }, 
    "AccountCaptureMigrateAccountDetails": {
      "type": "object", 
      "description": "Account-captured user migrated account to team.\ndomain_name: Domain name.\n", 
      "properties": {
        "domain_name": {
          "type": "string", 
          "description": "Domain name."
        }
      }
    }, 
    "SecondaryMailsPolicyChangedDetails": {
      "type": "object", 
      "description": "Secondary mails policy changed.\nprevious_value: Previous secondary mails policy.\nnew_value: New secondary mails policy.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/SecondaryMailsPolicy"
        }, 
        "previous_value": {
          "$ref": "#/definitions/SecondaryMailsPolicy"
        }
      }
    }, 
    "MemberRemoveActionType": {
      "type": "object", 
      "description": "delete: None\noffboard: None\nleave: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "delete", 
            "offboard", 
            "leave", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of MemberRemoveActionType"
        }
      }
    }, 
    "TeamFolderPermanentlyDeleteDetails": {
      "type": "object", 
      "description": "Permanently deleted archived team folder.\n", 
      "properties": {}
    }, 
    "SharedContentUnshareType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "DeviceDeleteOnUnlinkFailType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "LogoutType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "PaperDocRevertDetails": {
      "type": "object", 
      "description": "Restored Paper doc to previous version.\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "CollectionShareDetails": {
      "type": "object", 
      "description": "Shared album.\nalbum_name: Album name.\n", 
      "properties": {
        "album_name": {
          "type": "string", 
          "description": "Album name."
        }
      }
    }, 
    "SharedFolderDeclineInvitationDetails": {
      "type": "object", 
      "description": "Declined team member's invite to shared folder.\n", 
      "properties": {}
    }, 
    "SharedFolderNestDetails": {
      "type": "object", 
      "description": "Changed parent of shared folder.\nprevious_parent_ns_id: Previous parent namespace ID. Might be missing due to historical data gap.\nnew_parent_ns_id: New parent namespace ID. Might be missing due to historical data gap.\n", 
      "properties": {
        "previous_parent_ns_id": {
          "type": "string", 
          "description": "Previous parent namespace ID. Might be missing due to historical data gap."
        }, 
        "new_parent_ns_id": {
          "type": "string", 
          "description": "New parent namespace ID. Might be missing due to historical data gap."
        }
      }
    }, 
    "EventDetails": {
      "type": "object", 
      "description": "Additional fields depending on the event type.\napp_link_team_details: None\napp_link_user_details: None\napp_unlink_team_details: None\napp_unlink_user_details: None\nfile_add_comment_details: None\nfile_change_comment_subscription_details: None\nfile_delete_comment_details: None\nfile_like_comment_details: None\nfile_resolve_comment_details: None\nfile_unlike_comment_details: None\nfile_unresolve_comment_details: None\ndevice_change_ip_desktop_details: None\ndevice_change_ip_mobile_details: None\ndevice_change_ip_web_details: None\ndevice_delete_on_unlink_fail_details: None\ndevice_delete_on_unlink_success_details: None\ndevice_link_fail_details: None\ndevice_link_success_details: None\ndevice_management_disabled_details: None\ndevice_management_enabled_details: None\ndevice_unlink_details: None\nemm_refresh_auth_token_details: None\naccount_capture_change_availability_details: None\naccount_capture_migrate_account_details: None\naccount_capture_notification_emails_sent_details: None\naccount_capture_relinquish_account_details: None\ndisabled_domain_invites_details: None\ndomain_invites_approve_request_to_join_team_details: None\ndomain_invites_decline_request_to_join_team_details: None\ndomain_invites_email_existing_users_details: None\ndomain_invites_request_to_join_team_details: None\ndomain_invites_set_invite_new_user_pref_to_no_details: None\ndomain_invites_set_invite_new_user_pref_to_yes_details: None\ndomain_verification_add_domain_fail_details: None\ndomain_verification_add_domain_success_details: None\ndomain_verification_remove_domain_details: None\nenabled_domain_invites_details: None\ncreate_folder_details: None\nfile_add_details: None\nfile_copy_details: None\nfile_delete_details: None\nfile_download_details: None\nfile_edit_details: None\nfile_get_copy_reference_details: None\nfile_move_details: None\nfile_permanently_delete_details: None\nfile_preview_details: None\nfile_rename_details: None\nfile_restore_details: None\nfile_revert_details: None\nfile_rollback_changes_details: None\nfile_save_copy_reference_details: None\nfile_request_change_details: None\nfile_request_close_details: None\nfile_request_create_details: None\nfile_request_receive_file_details: None\ngroup_add_external_id_details: None\ngroup_add_member_details: None\ngroup_change_external_id_details: None\ngroup_change_management_type_details: None\ngroup_change_member_role_details: None\ngroup_create_details: None\ngroup_delete_details: None\ngroup_description_updated_details: None\ngroup_join_policy_updated_details: None\ngroup_moved_details: None\ngroup_remove_external_id_details: None\ngroup_remove_member_details: None\ngroup_rename_details: None\nemm_error_details: None\nlogin_fail_details: None\nlogin_success_details: None\nlogout_details: None\nreseller_support_session_end_details: None\nreseller_support_session_start_details: None\nsign_in_as_session_end_details: None\nsign_in_as_session_start_details: None\nsso_error_details: None\nmember_add_name_details: None\nmember_change_admin_role_details: None\nmember_change_email_details: None\nmember_change_membership_type_details: None\nmember_change_name_details: None\nmember_change_status_details: None\nmember_permanently_delete_account_contents_details: None\nmember_space_limits_add_custom_quota_details: None\nmember_space_limits_change_custom_quota_details: None\nmember_space_limits_change_status_details: None\nmember_space_limits_remove_custom_quota_details: None\nmember_suggest_details: None\nmember_transfer_account_contents_details: None\nsecondary_mails_policy_changed_details: None\npaper_content_add_member_details: None\npaper_content_add_to_folder_details: None\npaper_content_archive_details: None\npaper_content_create_details: None\npaper_content_permanently_delete_details: None\npaper_content_remove_from_folder_details: None\npaper_content_remove_member_details: None\npaper_content_rename_details: None\npaper_content_restore_details: None\npaper_doc_add_comment_details: None\npaper_doc_change_member_role_details: None\npaper_doc_change_sharing_policy_details: None\npaper_doc_change_subscription_details: None\npaper_doc_deleted_details: None\npaper_doc_delete_comment_details: None\npaper_doc_download_details: None\npaper_doc_edit_details: None\npaper_doc_edit_comment_details: None\npaper_doc_followed_details: None\npaper_doc_mention_details: None\npaper_doc_request_access_details: None\npaper_doc_resolve_comment_details: None\npaper_doc_revert_details: None\npaper_doc_slack_share_details: None\npaper_doc_team_invite_details: None\npaper_doc_trashed_details: None\npaper_doc_unresolve_comment_details: None\npaper_doc_untrashed_details: None\npaper_doc_view_details: None\npaper_external_view_allow_details: None\npaper_external_view_default_team_details: None\npaper_external_view_forbid_details: None\npaper_folder_change_subscription_details: None\npaper_folder_deleted_details: None\npaper_folder_followed_details: None\npaper_folder_team_invite_details: None\npassword_change_details: None\npassword_reset_details: None\npassword_reset_all_details: None\nemm_create_exceptions_report_details: None\nemm_create_usage_report_details: None\nexport_members_report_details: None\npaper_admin_export_start_details: None\nsmart_sync_create_admin_privilege_report_details: None\nteam_activity_create_report_details: None\ncollection_share_details: None\nnote_acl_invite_only_details: None\nnote_acl_link_details: None\nnote_acl_team_link_details: None\nnote_shared_details: None\nnote_share_receive_details: None\nopen_note_shared_details: None\nsf_add_group_details: None\nsf_allow_non_members_to_view_shared_links_details: None\nsf_external_invite_warn_details: None\nsf_fb_invite_details: None\nsf_fb_invite_change_role_details: None\nsf_fb_uninvite_details: None\nsf_invite_group_details: None\nsf_team_grant_access_details: None\nsf_team_invite_details: None\nsf_team_invite_change_role_details: None\nsf_team_join_details: None\nsf_team_join_from_oob_link_details: None\nsf_team_uninvite_details: None\nshared_content_add_invitees_details: None\nshared_content_add_link_expiry_details: None\nshared_content_add_link_password_details: None\nshared_content_add_member_details: None\nshared_content_change_downloads_policy_details: None\nshared_content_change_invitee_role_details: None\nshared_content_change_link_audience_details: None\nshared_content_change_link_expiry_details: None\nshared_content_change_link_password_details: None\nshared_content_change_member_role_details: None\nshared_content_change_viewer_info_policy_details: None\nshared_content_claim_invitation_details: None\nshared_content_copy_details: None\nshared_content_download_details: None\nshared_content_relinquish_membership_details: None\nshared_content_remove_invitees_details: None\nshared_content_remove_link_expiry_details: None\nshared_content_remove_link_password_details: None\nshared_content_remove_member_details: None\nshared_content_request_access_details: None\nshared_content_unshare_details: None\nshared_content_view_details: None\nshared_folder_change_link_policy_details: None\nshared_folder_change_members_inheritance_policy_details: None\nshared_folder_change_members_management_policy_details: None\nshared_folder_change_members_policy_details: None\nshared_folder_create_details: None\nshared_folder_decline_invitation_details: None\nshared_folder_mount_details: None\nshared_folder_nest_details: None\nshared_folder_transfer_ownership_details: None\nshared_folder_unmount_details: None\nshared_link_add_expiry_details: None\nshared_link_change_expiry_details: None\nshared_link_change_visibility_details: None\nshared_link_copy_details: None\nshared_link_create_details: None\nshared_link_disable_details: None\nshared_link_download_details: None\nshared_link_remove_expiry_details: None\nshared_link_share_details: None\nshared_link_view_details: None\nshared_note_opened_details: None\nshmodel_group_share_details: None\nshowcase_access_granted_details: None\nshowcase_add_member_details: None\nshowcase_archived_details: None\nshowcase_created_details: None\nshowcase_delete_comment_details: None\nshowcase_edited_details: None\nshowcase_edit_comment_details: None\nshowcase_file_added_details: None\nshowcase_file_download_details: None\nshowcase_file_removed_details: None\nshowcase_file_view_details: None\nshowcase_permanently_deleted_details: None\nshowcase_post_comment_details: None\nshowcase_remove_member_details: None\nshowcase_renamed_details: None\nshowcase_request_access_details: None\nshowcase_resolve_comment_details: None\nshowcase_restored_details: None\nshowcase_trashed_details: None\nshowcase_trashed_deprecated_details: None\nshowcase_unresolve_comment_details: None\nshowcase_untrashed_details: None\nshowcase_untrashed_deprecated_details: None\nshowcase_view_details: None\nsso_add_cert_details: None\nsso_add_login_url_details: None\nsso_add_logout_url_details: None\nsso_change_cert_details: None\nsso_change_login_url_details: None\nsso_change_logout_url_details: None\nsso_change_saml_identity_mode_details: None\nsso_remove_cert_details: None\nsso_remove_login_url_details: None\nsso_remove_logout_url_details: None\nteam_folder_change_status_details: None\nteam_folder_create_details: None\nteam_folder_downgrade_details: None\nteam_folder_permanently_delete_details: None\nteam_folder_rename_details: None\nteam_selective_sync_settings_changed_details: None\naccount_capture_change_policy_details: None\nallow_download_disabled_details: None\nallow_download_enabled_details: None\ndata_placement_restriction_change_policy_details: None\ndata_placement_restriction_satisfy_policy_details: None\ndevice_approvals_change_desktop_policy_details: None\ndevice_approvals_change_mobile_policy_details: None\ndevice_approvals_change_overage_action_details: None\ndevice_approvals_change_unlink_action_details: None\ndirectory_restrictions_add_members_details: None\ndirectory_restrictions_remove_members_details: None\nemm_add_exception_details: None\nemm_change_policy_details: None\nemm_remove_exception_details: None\nextended_version_history_change_policy_details: None\nfile_comments_change_policy_details: None\nfile_requests_change_policy_details: None\nfile_requests_emails_enabled_details: None\nfile_requests_emails_restricted_to_team_only_details: None\ngoogle_sso_change_policy_details: None\ngroup_user_management_change_policy_details: None\nmember_requests_change_policy_details: None\nmember_space_limits_add_exception_details: None\nmember_space_limits_change_caps_type_policy_details: None\nmember_space_limits_change_policy_details: None\nmember_space_limits_remove_exception_details: None\nmember_suggestions_change_policy_details: None\nmicrosoft_office_addin_change_policy_details: None\nnetwork_control_change_policy_details: None\npaper_change_deployment_policy_details: None\npaper_change_member_link_policy_details: None\npaper_change_member_policy_details: None\npaper_change_policy_details: None\npaper_enabled_users_group_addition_details: None\npaper_enabled_users_group_removal_details: None\npermanent_delete_change_policy_details: None\nsharing_change_folder_join_policy_details: None\nsharing_change_link_policy_details: None\nsharing_change_member_policy_details: None\nshowcase_change_download_policy_details: None\nshowcase_change_enabled_policy_details: None\nshowcase_change_external_sharing_policy_details: None\nsmart_sync_change_policy_details: None\nsmart_sync_not_opt_out_details: None\nsmart_sync_opt_out_details: None\nsso_change_policy_details: None\ntfa_change_policy_details: None\ntwo_account_change_policy_details: None\nweb_sessions_change_fixed_length_policy_details: None\nweb_sessions_change_idle_length_policy_details: None\nteam_merge_from_details: None\nteam_merge_to_details: None\nteam_profile_add_logo_details: None\nteam_profile_change_default_language_details: None\nteam_profile_change_logo_details: None\nteam_profile_change_name_details: None\nteam_profile_remove_logo_details: None\ntfa_add_backup_phone_details: None\ntfa_add_security_key_details: None\ntfa_change_backup_phone_details: None\ntfa_change_status_details: None\ntfa_remove_backup_phone_details: None\ntfa_remove_security_key_details: None\ntfa_reset_details: None\nmissing_details: Hints that this event was returned with missing details due to an internal error.\nother: None\n", 
      "properties": {
        "open_note_shared_details": {
          "$ref": "#/definitions/OpenNoteSharedDetails"
        }, 
        "group_create_details": {
          "$ref": "#/definitions/GroupCreateDetails"
        }, 
        "network_control_change_policy_details": {
          "$ref": "#/definitions/NetworkControlChangePolicyDetails"
        }, 
        "shared_note_opened_details": {
          "$ref": "#/definitions/SharedNoteOpenedDetails"
        }, 
        "device_link_success_details": {
          "$ref": "#/definitions/DeviceLinkSuccessDetails"
        }, 
        "sf_fb_uninvite_details": {
          "$ref": "#/definitions/SfFbUninviteDetails"
        }, 
        "showcase_add_member_details": {
          "$ref": "#/definitions/ShowcaseAddMemberDetails"
        }, 
        "sf_fb_invite_details": {
          "$ref": "#/definitions/SfFbInviteDetails"
        }, 
        "domain_verification_remove_domain_details": {
          "$ref": "#/definitions/DomainVerificationRemoveDomainDetails"
        }, 
        "paper_change_deployment_policy_details": {
          "$ref": "#/definitions/PaperChangeDeploymentPolicyDetails"
        }, 
        "paper_enabled_users_group_addition_details": {
          "$ref": "#/definitions/PaperEnabledUsersGroupAdditionDetails"
        }, 
        "shared_folder_create_details": {
          "$ref": "#/definitions/SharedFolderCreateDetails"
        }, 
        "file_request_change_details": {
          "$ref": "#/definitions/FileRequestChangeDetails"
        }, 
        "paper_folder_deleted_details": {
          "$ref": "#/definitions/PaperFolderDeletedDetails"
        }, 
        "paper_folder_followed_details": {
          "$ref": "#/definitions/PaperFolderFollowedDetails"
        }, 
        "extended_version_history_change_policy_details": {
          "$ref": "#/definitions/ExtendedVersionHistoryChangePolicyDetails"
        }, 
        "group_remove_member_details": {
          "$ref": "#/definitions/GroupRemoveMemberDetails"
        }, 
        "file_request_close_details": {
          "$ref": "#/definitions/FileRequestCloseDetails"
        }, 
        "sf_team_join_from_oob_link_details": {
          "$ref": "#/definitions/SfTeamJoinFromOobLinkDetails"
        }, 
        "shared_link_create_details": {
          "$ref": "#/definitions/SharedLinkCreateDetails"
        }, 
        "google_sso_change_policy_details": {
          "$ref": "#/definitions/GoogleSsoChangePolicyDetails"
        }, 
        "shared_folder_transfer_ownership_details": {
          "$ref": "#/definitions/SharedFolderTransferOwnershipDetails"
        }, 
        "showcase_remove_member_details": {
          "$ref": "#/definitions/ShowcaseRemoveMemberDetails"
        }, 
        "domain_verification_add_domain_fail_details": {
          "$ref": "#/definitions/DomainVerificationAddDomainFailDetails"
        }, 
        "team_merge_from_details": {
          "$ref": "#/definitions/TeamMergeFromDetails"
        }, 
        "shared_content_change_downloads_policy_details": {
          "$ref": "#/definitions/SharedContentChangeDownloadsPolicyDetails"
        }, 
        "directory_restrictions_add_members_details": {
          "$ref": "#/definitions/DirectoryRestrictionsAddMembersDetails"
        }, 
        "showcase_file_added_details": {
          "$ref": "#/definitions/ShowcaseFileAddedDetails"
        }, 
        "showcase_untrashed_deprecated_details": {
          "$ref": "#/definitions/ShowcaseUntrashedDeprecatedDetails"
        }, 
        "file_comments_change_policy_details": {
          "$ref": "#/definitions/FileCommentsChangePolicyDetails"
        }, 
        "allow_download_enabled_details": {
          "$ref": "#/definitions/AllowDownloadEnabledDetails"
        }, 
        "device_delete_on_unlink_fail_details": {
          "$ref": "#/definitions/DeviceDeleteOnUnlinkFailDetails"
        }, 
        "sharing_change_folder_join_policy_details": {
          "$ref": "#/definitions/SharingChangeFolderJoinPolicyDetails"
        }, 
        "member_space_limits_change_policy_details": {
          "$ref": "#/definitions/MemberSpaceLimitsChangePolicyDetails"
        }, 
        "sso_remove_logout_url_details": {
          "$ref": "#/definitions/SsoRemoveLogoutUrlDetails"
        }, 
        "tfa_add_security_key_details": {
          "$ref": "#/definitions/TfaAddSecurityKeyDetails"
        }, 
        "shared_content_change_link_password_details": {
          "$ref": "#/definitions/SharedContentChangeLinkPasswordDetails"
        }, 
        "shared_folder_change_link_policy_details": {
          "$ref": "#/definitions/SharedFolderChangeLinkPolicyDetails"
        }, 
        "tfa_change_backup_phone_details": {
          "$ref": "#/definitions/TfaChangeBackupPhoneDetails"
        }, 
        "paper_folder_change_subscription_details": {
          "$ref": "#/definitions/PaperFolderChangeSubscriptionDetails"
        }, 
        "shared_link_disable_details": {
          "$ref": "#/definitions/SharedLinkDisableDetails"
        }, 
        "paper_doc_change_sharing_policy_details": {
          "$ref": "#/definitions/PaperDocChangeSharingPolicyDetails"
        }, 
        "password_reset_all_details": {
          "$ref": "#/definitions/PasswordResetAllDetails"
        }, 
        "note_acl_team_link_details": {
          "$ref": "#/definitions/NoteAclTeamLinkDetails"
        }, 
        "paper_doc_mention_details": {
          "$ref": "#/definitions/PaperDocMentionDetails"
        }, 
        "paper_enabled_users_group_removal_details": {
          "$ref": "#/definitions/PaperEnabledUsersGroupRemovalDetails"
        }, 
        "reseller_support_session_end_details": {
          "$ref": "#/definitions/ResellerSupportSessionEndDetails"
        }, 
        "paper_content_archive_details": {
          "$ref": "#/definitions/PaperContentArchiveDetails"
        }, 
        "member_space_limits_add_exception_details": {
          "$ref": "#/definitions/MemberSpaceLimitsAddExceptionDetails"
        }, 
        "permanent_delete_change_policy_details": {
          "$ref": "#/definitions/PermanentDeleteChangePolicyDetails"
        }, 
        "shared_content_remove_member_details": {
          "$ref": "#/definitions/SharedContentRemoveMemberDetails"
        }, 
        "smart_sync_not_opt_out_details": {
          "$ref": "#/definitions/SmartSyncNotOptOutDetails"
        }, 
        "sso_change_logout_url_details": {
          "$ref": "#/definitions/SsoChangeLogoutUrlDetails"
        }, 
        "account_capture_relinquish_account_details": {
          "$ref": "#/definitions/AccountCaptureRelinquishAccountDetails"
        }, 
        "paper_external_view_forbid_details": {
          "$ref": "#/definitions/PaperExternalViewForbidDetails"
        }, 
        "tfa_change_status_details": {
          "$ref": "#/definitions/TfaChangeStatusDetails"
        }, 
        "member_space_limits_remove_exception_details": {
          "$ref": "#/definitions/MemberSpaceLimitsRemoveExceptionDetails"
        }, 
        "file_add_comment_details": {
          "$ref": "#/definitions/FileAddCommentDetails"
        }, 
        "team_folder_create_details": {
          "$ref": "#/definitions/TeamFolderCreateDetails"
        }, 
        "file_restore_details": {
          "$ref": "#/definitions/FileRestoreDetails"
        }, 
        "file_requests_change_policy_details": {
          "$ref": "#/definitions/FileRequestsChangePolicyDetails"
        }, 
        "directory_restrictions_remove_members_details": {
          "$ref": "#/definitions/DirectoryRestrictionsRemoveMembersDetails"
        }, 
        "showcase_access_granted_details": {
          "$ref": "#/definitions/ShowcaseAccessGrantedDetails"
        }, 
        "smart_sync_opt_out_details": {
          "$ref": "#/definitions/SmartSyncOptOutDetails"
        }, 
        "group_delete_details": {
          "$ref": "#/definitions/GroupDeleteDetails"
        }, 
        "device_link_fail_details": {
          "$ref": "#/definitions/DeviceLinkFailDetails"
        }, 
        "file_move_details": {
          "$ref": "#/definitions/FileMoveDetails"
        }, 
        "shared_content_relinquish_membership_details": {
          "$ref": "#/definitions/SharedContentRelinquishMembershipDetails"
        }, 
        "member_suggestions_change_policy_details": {
          "$ref": "#/definitions/MemberSuggestionsChangePolicyDetails"
        }, 
        "team_profile_change_logo_details": {
          "$ref": "#/definitions/TeamProfileChangeLogoDetails"
        }, 
        "shared_folder_decline_invitation_details": {
          "$ref": "#/definitions/SharedFolderDeclineInvitationDetails"
        }, 
        "team_profile_change_default_language_details": {
          "$ref": "#/definitions/TeamProfileChangeDefaultLanguageDetails"
        }, 
        "team_folder_permanently_delete_details": {
          "$ref": "#/definitions/TeamFolderPermanentlyDeleteDetails"
        }, 
        "sso_remove_cert_details": {
          "$ref": "#/definitions/SsoRemoveCertDetails"
        }, 
        "paper_content_remove_from_folder_details": {
          "$ref": "#/definitions/PaperContentRemoveFromFolderDetails"
        }, 
        "team_merge_to_details": {
          "$ref": "#/definitions/TeamMergeToDetails"
        }, 
        "showcase_unresolve_comment_details": {
          "$ref": "#/definitions/ShowcaseUnresolveCommentDetails"
        }, 
        "showcase_trashed_details": {
          "$ref": "#/definitions/ShowcaseTrashedDetails"
        }, 
        "paper_doc_revert_details": {
          "$ref": "#/definitions/PaperDocRevertDetails"
        }, 
        "paper_doc_team_invite_details": {
          "$ref": "#/definitions/PaperDocTeamInviteDetails"
        }, 
        "member_suggest_details": {
          "$ref": "#/definitions/MemberSuggestDetails"
        }, 
        "shared_link_view_details": {
          "$ref": "#/definitions/SharedLinkViewDetails"
        }, 
        "showcase_change_external_sharing_policy_details": {
          "$ref": "#/definitions/ShowcaseChangeExternalSharingPolicyDetails"
        }, 
        "sf_external_invite_warn_details": {
          "$ref": "#/definitions/SfExternalInviteWarnDetails"
        }, 
        "sso_change_login_url_details": {
          "$ref": "#/definitions/SsoChangeLoginUrlDetails"
        }, 
        "device_change_ip_mobile_details": {
          "$ref": "#/definitions/DeviceChangeIpMobileDetails"
        }, 
        "shared_content_remove_link_expiry_details": {
          "$ref": "#/definitions/SharedContentRemoveLinkExpiryDetails"
        }, 
        "shared_folder_change_members_policy_details": {
          "$ref": "#/definitions/SharedFolderChangeMembersPolicyDetails"
        }, 
        "note_share_receive_details": {
          "$ref": "#/definitions/NoteShareReceiveDetails"
        }, 
        "file_permanently_delete_details": {
          "$ref": "#/definitions/FilePermanentlyDeleteDetails"
        }, 
        "sf_fb_invite_change_role_details": {
          "$ref": "#/definitions/SfFbInviteChangeRoleDetails"
        }, 
        "paper_content_create_details": {
          "$ref": "#/definitions/PaperContentCreateDetails"
        }, 
        "team_activity_create_report_details": {
          "$ref": "#/definitions/TeamActivityCreateReportDetails"
        }, 
        "member_space_limits_change_custom_quota_details": {
          "$ref": "#/definitions/MemberSpaceLimitsChangeCustomQuotaDetails"
        }, 
        "showcase_archived_details": {
          "$ref": "#/definitions/ShowcaseArchivedDetails"
        }, 
        "file_download_details": {
          "$ref": "#/definitions/FileDownloadDetails"
        }, 
        "paper_content_permanently_delete_details": {
          "$ref": "#/definitions/PaperContentPermanentlyDeleteDetails"
        }, 
        "paper_doc_unresolve_comment_details": {
          "$ref": "#/definitions/PaperDocUnresolveCommentDetails"
        }, 
        "shared_folder_nest_details": {
          "$ref": "#/definitions/SharedFolderNestDetails"
        }, 
        "showcase_resolve_comment_details": {
          "$ref": "#/definitions/ShowcaseResolveCommentDetails"
        }, 
        "paper_doc_view_details": {
          "$ref": "#/definitions/PaperDocViewDetails"
        }, 
        "paper_doc_untrashed_details": {
          "$ref": "#/definitions/PaperDocUntrashedDetails"
        }, 
        "shared_link_remove_expiry_details": {
          "$ref": "#/definitions/SharedLinkRemoveExpiryDetails"
        }, 
        "sharing_change_member_policy_details": {
          "$ref": "#/definitions/SharingChangeMemberPolicyDetails"
        }, 
        "shared_link_copy_details": {
          "$ref": "#/definitions/SharedLinkCopyDetails"
        }, 
        "note_acl_invite_only_details": {
          "$ref": "#/definitions/NoteAclInviteOnlyDetails"
        }, 
        "paper_doc_change_member_role_details": {
          "$ref": "#/definitions/PaperDocChangeMemberRoleDetails"
        }, 
        "team_profile_add_logo_details": {
          "$ref": "#/definitions/TeamProfileAddLogoDetails"
        }, 
        "paper_doc_request_access_details": {
          "$ref": "#/definitions/PaperDocRequestAccessDetails"
        }, 
        "note_acl_link_details": {
          "$ref": "#/definitions/NoteAclLinkDetails"
        }, 
        "shmodel_group_share_details": {
          "$ref": "#/definitions/ShmodelGroupShareDetails"
        }, 
        "smart_sync_create_admin_privilege_report_details": {
          "$ref": "#/definitions/SmartSyncCreateAdminPrivilegeReportDetails"
        }, 
        "showcase_change_download_policy_details": {
          "$ref": "#/definitions/ShowcaseChangeDownloadPolicyDetails"
        }, 
        "showcase_file_download_details": {
          "$ref": "#/definitions/ShowcaseFileDownloadDetails"
        }, 
        "team_profile_change_name_details": {
          "$ref": "#/definitions/TeamProfileChangeNameDetails"
        }, 
        "emm_error_details": {
          "$ref": "#/definitions/EmmErrorDetails"
        }, 
        "emm_create_exceptions_report_details": {
          "$ref": "#/definitions/EmmCreateExceptionsReportDetails"
        }, 
        "device_delete_on_unlink_success_details": {
          "$ref": "#/definitions/DeviceDeleteOnUnlinkSuccessDetails"
        }, 
        "app_unlink_user_details": {
          "$ref": "#/definitions/AppUnlinkUserDetails"
        }, 
        "group_moved_details": {
          "$ref": "#/definitions/GroupMovedDetails"
        }, 
        "shared_content_download_details": {
          "$ref": "#/definitions/SharedContentDownloadDetails"
        }, 
        "showcase_change_enabled_policy_details": {
          "$ref": "#/definitions/ShowcaseChangeEnabledPolicyDetails"
        }, 
        "account_capture_migrate_account_details": {
          "$ref": "#/definitions/AccountCaptureMigrateAccountDetails"
        }, 
        "file_request_create_details": {
          "$ref": "#/definitions/FileRequestCreateDetails"
        }, 
        "domain_verification_add_domain_success_details": {
          "$ref": "#/definitions/DomainVerificationAddDomainSuccessDetails"
        }, 
        "shared_content_add_link_expiry_details": {
          "$ref": "#/definitions/SharedContentAddLinkExpiryDetails"
        }, 
        "device_approvals_change_desktop_policy_details": {
          "$ref": "#/definitions/DeviceApprovalsChangeDesktopPolicyDetails"
        }, 
        "data_placement_restriction_satisfy_policy_details": {
          "$ref": "#/definitions/DataPlacementRestrictionSatisfyPolicyDetails"
        }, 
        "team_folder_downgrade_details": {
          "$ref": "#/definitions/TeamFolderDowngradeDetails"
        }, 
        "paper_doc_change_subscription_details": {
          "$ref": "#/definitions/PaperDocChangeSubscriptionDetails"
        }, 
        "sf_team_join_details": {
          "$ref": "#/definitions/SfTeamJoinDetails"
        }, 
        "group_add_member_details": {
          "$ref": "#/definitions/GroupAddMemberDetails"
        }, 
        "sso_add_cert_details": {
          "$ref": "#/definitions/SsoAddCertDetails"
        }, 
        "shared_link_share_details": {
          "$ref": "#/definitions/SharedLinkShareDetails"
        }, 
        "paper_change_member_policy_details": {
          "$ref": "#/definitions/PaperChangeMemberPolicyDetails"
        }, 
        "emm_refresh_auth_token_details": {
          "$ref": "#/definitions/EmmRefreshAuthTokenDetails"
        }, 
        "shared_link_change_visibility_details": {
          "$ref": "#/definitions/SharedLinkChangeVisibilityDetails"
        }, 
        "file_edit_details": {
          "$ref": "#/definitions/FileEditDetails"
        }, 
        "sf_add_group_details": {
          "$ref": "#/definitions/SfAddGroupDetails"
        }, 
        "member_change_membership_type_details": {
          "$ref": "#/definitions/MemberChangeMembershipTypeDetails"
        }, 
        "domain_invites_email_existing_users_details": {
          "$ref": "#/definitions/DomainInvitesEmailExistingUsersDetails"
        }, 
        "account_capture_change_availability_details": {
          "$ref": "#/definitions/AccountCaptureChangeAvailabilityDetails"
        }, 
        "member_space_limits_remove_custom_quota_details": {
          "$ref": "#/definitions/MemberSpaceLimitsRemoveCustomQuotaDetails"
        }, 
        "shared_content_add_invitees_details": {
          "$ref": "#/definitions/SharedContentAddInviteesDetails"
        }, 
        "shared_content_change_link_audience_details": {
          "$ref": "#/definitions/SharedContentChangeLinkAudienceDetails"
        }, 
        "emm_change_policy_details": {
          "$ref": "#/definitions/EmmChangePolicyDetails"
        }, 
        "file_unlike_comment_details": {
          "$ref": "#/definitions/FileUnlikeCommentDetails"
        }, 
        "export_members_report_details": {
          "$ref": "#/definitions/ExportMembersReportDetails"
        }, 
        "shared_content_claim_invitation_details": {
          "$ref": "#/definitions/SharedContentClaimInvitationDetails"
        }, 
        "domain_invites_set_invite_new_user_pref_to_no_details": {
          "$ref": "#/definitions/DomainInvitesSetInviteNewUserPrefToNoDetails"
        }, 
        "paper_doc_followed_details": {
          "$ref": "#/definitions/PaperDocFollowedDetails"
        }, 
        "paper_doc_deleted_details": {
          "$ref": "#/definitions/PaperDocDeletedDetails"
        }, 
        "showcase_view_details": {
          "$ref": "#/definitions/ShowcaseViewDetails"
        }, 
        "showcase_renamed_details": {
          "$ref": "#/definitions/ShowcaseRenamedDetails"
        }, 
        "account_capture_change_policy_details": {
          "$ref": "#/definitions/AccountCaptureChangePolicyDetails"
        }, 
        "shared_content_unshare_details": {
          "$ref": "#/definitions/SharedContentUnshareDetails"
        }, 
        "shared_folder_mount_details": {
          "$ref": "#/definitions/SharedFolderMountDetails"
        }, 
        "group_rename_details": {
          "$ref": "#/definitions/GroupRenameDetails"
        }, 
        "file_rename_details": {
          "$ref": "#/definitions/FileRenameDetails"
        }, 
        "smart_sync_change_policy_details": {
          "$ref": "#/definitions/SmartSyncChangePolicyDetails"
        }, 
        "tfa_remove_backup_phone_details": {
          "$ref": "#/definitions/TfaRemoveBackupPhoneDetails"
        }, 
        "note_shared_details": {
          "$ref": "#/definitions/NoteSharedDetails"
        }, 
        "missing_details": {
          "$ref": "#/definitions/MissingDetails"
        }, 
        "sso_error_details": {
          "$ref": "#/definitions/SsoErrorDetails"
        }, 
        "password_change_details": {
          "$ref": "#/definitions/PasswordChangeDetails"
        }, 
        "showcase_restored_details": {
          "$ref": "#/definitions/ShowcaseRestoredDetails"
        }, 
        "showcase_edited_details": {
          "$ref": "#/definitions/ShowcaseEditedDetails"
        }, 
        "paper_change_policy_details": {
          "$ref": "#/definitions/PaperChangePolicyDetails"
        }, 
        "reseller_support_session_start_details": {
          "$ref": "#/definitions/ResellerSupportSessionStartDetails"
        }, 
        "device_unlink_details": {
          "$ref": "#/definitions/DeviceUnlinkDetails"
        }, 
        "device_approvals_change_mobile_policy_details": {
          "$ref": "#/definitions/DeviceApprovalsChangeMobilePolicyDetails"
        }, 
        "emm_add_exception_details": {
          "$ref": "#/definitions/EmmAddExceptionDetails"
        }, 
        "group_add_external_id_details": {
          "$ref": "#/definitions/GroupAddExternalIdDetails"
        }, 
        "sf_team_grant_access_details": {
          "$ref": "#/definitions/SfTeamGrantAccessDetails"
        }, 
        "paper_doc_edit_details": {
          "$ref": "#/definitions/PaperDocEditDetails"
        }, 
        "web_sessions_change_fixed_length_policy_details": {
          "$ref": "#/definitions/WebSessionsChangeFixedLengthPolicyDetails"
        }, 
        "file_like_comment_details": {
          "$ref": "#/definitions/FileLikeCommentDetails"
        }, 
        "sso_change_saml_identity_mode_details": {
          "$ref": "#/definitions/SsoChangeSamlIdentityModeDetails"
        }, 
        "file_change_comment_subscription_details": {
          "$ref": "#/definitions/FileChangeCommentSubscriptionDetails"
        }, 
        "group_join_policy_updated_details": {
          "$ref": "#/definitions/GroupJoinPolicyUpdatedDetails"
        }, 
        "group_change_external_id_details": {
          "$ref": "#/definitions/GroupChangeExternalIdDetails"
        }, 
        "shared_content_change_invitee_role_details": {
          "$ref": "#/definitions/SharedContentChangeInviteeRoleDetails"
        }, 
        "collection_share_details": {
          "$ref": "#/definitions/CollectionShareDetails"
        }, 
        "tfa_remove_security_key_details": {
          "$ref": "#/definitions/TfaRemoveSecurityKeyDetails"
        }, 
        "file_delete_comment_details": {
          "$ref": "#/definitions/FileDeleteCommentDetails"
        }, 
        "showcase_file_view_details": {
          "$ref": "#/definitions/ShowcaseFileViewDetails"
        }, 
        "group_change_member_role_details": {
          "$ref": "#/definitions/GroupChangeMemberRoleDetails"
        }, 
        "device_change_ip_desktop_details": {
          "$ref": "#/definitions/DeviceChangeIpDesktopDetails"
        }, 
        "domain_invites_request_to_join_team_details": {
          "$ref": "#/definitions/DomainInvitesRequestToJoinTeamDetails"
        }, 
        "enabled_domain_invites_details": {
          "$ref": "#/definitions/EnabledDomainInvitesDetails"
        }, 
        "paper_doc_resolve_comment_details": {
          "$ref": "#/definitions/PaperDocResolveCommentDetails"
        }, 
        "shared_content_change_link_expiry_details": {
          "$ref": "#/definitions/SharedContentChangeLinkExpiryDetails"
        }, 
        "shared_content_add_link_password_details": {
          "$ref": "#/definitions/SharedContentAddLinkPasswordDetails"
        }, 
        "file_requests_emails_restricted_to_team_only_details": {
          "$ref": "#/definitions/FileRequestsEmailsRestrictedToTeamOnlyDetails"
        }, 
        "member_change_status_details": {
          "$ref": "#/definitions/MemberChangeStatusDetails"
        }, 
        "account_capture_notification_emails_sent_details": {
          "$ref": "#/definitions/AccountCaptureNotificationEmailsSentDetails"
        }, 
        "sign_in_as_session_start_details": {
          "$ref": "#/definitions/SignInAsSessionStartDetails"
        }, 
        "paper_external_view_default_team_details": {
          "$ref": "#/definitions/PaperExternalViewDefaultTeamDetails"
        }, 
        "web_sessions_change_idle_length_policy_details": {
          "$ref": "#/definitions/WebSessionsChangeIdleLengthPolicyDetails"
        }, 
        "paper_content_remove_member_details": {
          "$ref": "#/definitions/PaperContentRemoveMemberDetails"
        }, 
        "secondary_mails_policy_changed_details": {
          "$ref": "#/definitions/SecondaryMailsPolicyChangedDetails"
        }, 
        "shared_link_download_details": {
          "$ref": "#/definitions/SharedLinkDownloadDetails"
        }, 
        "file_delete_details": {
          "$ref": "#/definitions/FileDeleteDetails"
        }, 
        "password_reset_details": {
          "$ref": "#/definitions/PasswordResetDetails"
        }, 
        "shared_content_view_details": {
          "$ref": "#/definitions/SharedContentViewDetails"
        }, 
        "app_link_user_details": {
          "$ref": "#/definitions/AppLinkUserDetails"
        }, 
        "tfa_add_backup_phone_details": {
          "$ref": "#/definitions/TfaAddBackupPhoneDetails"
        }, 
        "file_unresolve_comment_details": {
          "$ref": "#/definitions/FileUnresolveCommentDetails"
        }, 
        "showcase_trashed_deprecated_details": {
          "$ref": "#/definitions/ShowcaseTrashedDeprecatedDetails"
        }, 
        "sso_change_cert_details": {
          "$ref": "#/definitions/SsoChangeCertDetails"
        }, 
        "paper_doc_download_details": {
          "$ref": "#/definitions/PaperDocDownloadDetails"
        }, 
        "two_account_change_policy_details": {
          "$ref": "#/definitions/TwoAccountChangePolicyDetails"
        }, 
        "showcase_request_access_details": {
          "$ref": "#/definitions/ShowcaseRequestAccessDetails"
        }, 
        "sharing_change_link_policy_details": {
          "$ref": "#/definitions/SharingChangeLinkPolicyDetails"
        }, 
        "paper_doc_edit_comment_details": {
          "$ref": "#/definitions/PaperDocEditCommentDetails"
        }, 
        "shared_content_remove_invitees_details": {
          "$ref": "#/definitions/SharedContentRemoveInviteesDetails"
        }, 
        "sso_add_logout_url_details": {
          "$ref": "#/definitions/SsoAddLogoutUrlDetails"
        }, 
        "member_space_limits_change_status_details": {
          "$ref": "#/definitions/MemberSpaceLimitsChangeStatusDetails"
        }, 
        "member_add_name_details": {
          "$ref": "#/definitions/MemberAddNameDetails"
        }, 
        "file_rollback_changes_details": {
          "$ref": "#/definitions/FileRollbackChangesDetails"
        }, 
        "group_change_management_type_details": {
          "$ref": "#/definitions/GroupChangeManagementTypeDetails"
        }, 
        "sso_remove_login_url_details": {
          "$ref": "#/definitions/SsoRemoveLoginUrlDetails"
        }, 
        "paper_external_view_allow_details": {
          "$ref": "#/definitions/PaperExternalViewAllowDetails"
        }, 
        "sf_team_uninvite_details": {
          "$ref": "#/definitions/SfTeamUninviteDetails"
        }, 
        "paper_folder_team_invite_details": {
          "$ref": "#/definitions/PaperFolderTeamInviteDetails"
        }, 
        "showcase_file_removed_details": {
          "$ref": "#/definitions/ShowcaseFileRemovedDetails"
        }, 
        "sign_in_as_session_end_details": {
          "$ref": "#/definitions/SignInAsSessionEndDetails"
        }, 
        "member_permanently_delete_account_contents_details": {
          "$ref": "#/definitions/MemberPermanentlyDeleteAccountContentsDetails"
        }, 
        "sso_add_login_url_details": {
          "$ref": "#/definitions/SsoAddLoginUrlDetails"
        }, 
        "device_approvals_change_unlink_action_details": {
          "$ref": "#/definitions/DeviceApprovalsChangeUnlinkActionDetails"
        }, 
        "file_requests_emails_enabled_details": {
          "$ref": "#/definitions/FileRequestsEmailsEnabledDetails"
        }, 
        "device_change_ip_web_details": {
          "$ref": "#/definitions/DeviceChangeIpWebDetails"
        }, 
        "member_space_limits_add_custom_quota_details": {
          "$ref": "#/definitions/MemberSpaceLimitsAddCustomQuotaDetails"
        }, 
        "allow_download_disabled_details": {
          "$ref": "#/definitions/AllowDownloadDisabledDetails"
        }, 
        "group_remove_external_id_details": {
          "$ref": "#/definitions/GroupRemoveExternalIdDetails"
        }, 
        "disabled_domain_invites_details": {
          "$ref": "#/definitions/DisabledDomainInvitesDetails"
        }, 
        "device_management_enabled_details": {
          "$ref": "#/definitions/DeviceManagementEnabledDetails"
        }, 
        "app_link_team_details": {
          "$ref": "#/definitions/AppLinkTeamDetails"
        }, 
        "microsoft_office_addin_change_policy_details": {
          "$ref": "#/definitions/MicrosoftOfficeAddinChangePolicyDetails"
        }, 
        "emm_create_usage_report_details": {
          "$ref": "#/definitions/EmmCreateUsageReportDetails"
        }, 
        "paper_doc_add_comment_details": {
          "$ref": "#/definitions/PaperDocAddCommentDetails"
        }, 
        "group_description_updated_details": {
          "$ref": "#/definitions/GroupDescriptionUpdatedDetails"
        }, 
        "shared_content_request_access_details": {
          "$ref": "#/definitions/SharedContentRequestAccessDetails"
        }, 
        "shared_link_change_expiry_details": {
          "$ref": "#/definitions/SharedLinkChangeExpiryDetails"
        }, 
        "sf_invite_group_details": {
          "$ref": "#/definitions/SfInviteGroupDetails"
        }, 
        "paper_change_member_link_policy_details": {
          "$ref": "#/definitions/PaperChangeMemberLinkPolicyDetails"
        }, 
        "domain_invites_set_invite_new_user_pref_to_yes_details": {
          "$ref": "#/definitions/DomainInvitesSetInviteNewUserPrefToYesDetails"
        }, 
        "file_get_copy_reference_details": {
          "$ref": "#/definitions/FileGetCopyReferenceDetails"
        }, 
        "member_change_email_details": {
          "$ref": "#/definitions/MemberChangeEmailDetails"
        }, 
        "file_add_details": {
          "$ref": "#/definitions/FileAddDetails"
        }, 
        "data_placement_restriction_change_policy_details": {
          "$ref": "#/definitions/DataPlacementRestrictionChangePolicyDetails"
        }, 
        "showcase_permanently_deleted_details": {
          "$ref": "#/definitions/ShowcasePermanentlyDeletedDetails"
        }, 
        "paper_admin_export_start_details": {
          "$ref": "#/definitions/PaperAdminExportStartDetails"
        }, 
        "emm_remove_exception_details": {
          "$ref": "#/definitions/EmmRemoveExceptionDetails"
        }, 
        "shared_link_add_expiry_details": {
          "$ref": "#/definitions/SharedLinkAddExpiryDetails"
        }, 
        "paper_doc_delete_comment_details": {
          "$ref": "#/definitions/PaperDocDeleteCommentDetails"
        }, 
        "paper_doc_trashed_details": {
          "$ref": "#/definitions/PaperDocTrashedDetails"
        }, 
        "create_folder_details": {
          "$ref": "#/definitions/CreateFolderDetails"
        }, 
        "shared_content_remove_link_password_details": {
          "$ref": "#/definitions/SharedContentRemoveLinkPasswordDetails"
        }, 
        "paper_content_add_member_details": {
          "$ref": "#/definitions/PaperContentAddMemberDetails"
        }, 
        "tfa_reset_details": {
          "$ref": "#/definitions/TfaResetDetails"
        }, 
        "sf_allow_non_members_to_view_shared_links_details": {
          "$ref": "#/definitions/SfAllowNonMembersToViewSharedLinksDetails"
        }, 
        "member_transfer_account_contents_details": {
          "$ref": "#/definitions/MemberTransferAccountContentsDetails"
        }, 
        "device_approvals_change_overage_action_details": {
          "$ref": "#/definitions/DeviceApprovalsChangeOverageActionDetails"
        }, 
        "tfa_change_policy_details": {
          "$ref": "#/definitions/TfaChangePolicyDetails"
        }, 
        "file_revert_details": {
          "$ref": "#/definitions/FileRevertDetails"
        }, 
        "showcase_post_comment_details": {
          "$ref": "#/definitions/ShowcasePostCommentDetails"
        }, 
        "file_request_receive_file_details": {
          "$ref": "#/definitions/FileRequestReceiveFileDetails"
        }, 
        "domain_invites_decline_request_to_join_team_details": {
          "$ref": "#/definitions/DomainInvitesDeclineRequestToJoinTeamDetails"
        }, 
        "team_selective_sync_settings_changed_details": {
          "$ref": "#/definitions/TeamSelectiveSyncSettingsChangedDetails"
        }, 
        "paper_content_rename_details": {
          "$ref": "#/definitions/PaperContentRenameDetails"
        }, 
        "sf_team_invite_change_role_details": {
          "$ref": "#/definitions/SfTeamInviteChangeRoleDetails"
        }, 
        "sf_team_invite_details": {
          "$ref": "#/definitions/SfTeamInviteDetails"
        }, 
        "member_space_limits_change_caps_type_policy_details": {
          "$ref": "#/definitions/MemberSpaceLimitsChangeCapsTypePolicyDetails"
        }, 
        "device_management_disabled_details": {
          "$ref": "#/definitions/DeviceManagementDisabledDetails"
        }, 
        "sso_change_policy_details": {
          "$ref": "#/definitions/SsoChangePolicyDetails"
        }, 
        "paper_content_restore_details": {
          "$ref": "#/definitions/PaperContentRestoreDetails"
        }, 
        "showcase_untrashed_details": {
          "$ref": "#/definitions/ShowcaseUntrashedDetails"
        }, 
        "file_save_copy_reference_details": {
          "$ref": "#/definitions/FileSaveCopyReferenceDetails"
        }, 
        "file_copy_details": {
          "$ref": "#/definitions/FileCopyDetails"
        }, 
        "paper_doc_slack_share_details": {
          "$ref": "#/definitions/PaperDocSlackShareDetails"
        }, 
        "logout_details": {
          "$ref": "#/definitions/LogoutDetails"
        }, 
        "member_change_name_details": {
          "$ref": "#/definitions/MemberChangeNameDetails"
        }, 
        "shared_folder_change_members_management_policy_details": {
          "$ref": "#/definitions/SharedFolderChangeMembersManagementPolicyDetails"
        }, 
        "login_success_details": {
          "$ref": "#/definitions/LoginSuccessDetails"
        }, 
        "shared_content_change_viewer_info_policy_details": {
          "$ref": "#/definitions/SharedContentChangeViewerInfoPolicyDetails"
        }, 
        "shared_folder_change_members_inheritance_policy_details": {
          "$ref": "#/definitions/SharedFolderChangeMembersInheritancePolicyDetails"
        }, 
        "shared_content_add_member_details": {
          "$ref": "#/definitions/SharedContentAddMemberDetails"
        }, 
        "member_change_admin_role_details": {
          "$ref": "#/definitions/MemberChangeAdminRoleDetails"
        }, 
        "app_unlink_team_details": {
          "$ref": "#/definitions/AppUnlinkTeamDetails"
        }, 
        "team_folder_rename_details": {
          "$ref": "#/definitions/TeamFolderRenameDetails"
        }, 
        "shared_content_copy_details": {
          "$ref": "#/definitions/SharedContentCopyDetails"
        }, 
        "domain_invites_approve_request_to_join_team_details": {
          "$ref": "#/definitions/DomainInvitesApproveRequestToJoinTeamDetails"
        }, 
        "member_requests_change_policy_details": {
          "$ref": "#/definitions/MemberRequestsChangePolicyDetails"
        }, 
        "shared_content_change_member_role_details": {
          "$ref": "#/definitions/SharedContentChangeMemberRoleDetails"
        }, 
        "login_fail_details": {
          "$ref": "#/definitions/LoginFailDetails"
        }, 
        "team_profile_remove_logo_details": {
          "$ref": "#/definitions/TeamProfileRemoveLogoDetails"
        }, 
        "file_preview_details": {
          "$ref": "#/definitions/FilePreviewDetails"
        }, 
        "file_resolve_comment_details": {
          "$ref": "#/definitions/FileResolveCommentDetails"
        }, 
        ".tag": {
          "enum": [
            "app_link_team_details", 
            "app_link_user_details", 
            "app_unlink_team_details", 
            "app_unlink_user_details", 
            "file_add_comment_details", 
            "file_change_comment_subscription_details", 
            "file_delete_comment_details", 
            "file_like_comment_details", 
            "file_resolve_comment_details", 
            "file_unlike_comment_details", 
            "file_unresolve_comment_details", 
            "device_change_ip_desktop_details", 
            "device_change_ip_mobile_details", 
            "device_change_ip_web_details", 
            "device_delete_on_unlink_fail_details", 
            "device_delete_on_unlink_success_details", 
            "device_link_fail_details", 
            "device_link_success_details", 
            "device_management_disabled_details", 
            "device_management_enabled_details", 
            "device_unlink_details", 
            "emm_refresh_auth_token_details", 
            "account_capture_change_availability_details", 
            "account_capture_migrate_account_details", 
            "account_capture_notification_emails_sent_details", 
            "account_capture_relinquish_account_details", 
            "disabled_domain_invites_details", 
            "domain_invites_approve_request_to_join_team_details", 
            "domain_invites_decline_request_to_join_team_details", 
            "domain_invites_email_existing_users_details", 
            "domain_invites_request_to_join_team_details", 
            "domain_invites_set_invite_new_user_pref_to_no_details", 
            "domain_invites_set_invite_new_user_pref_to_yes_details", 
            "domain_verification_add_domain_fail_details", 
            "domain_verification_add_domain_success_details", 
            "domain_verification_remove_domain_details", 
            "enabled_domain_invites_details", 
            "create_folder_details", 
            "file_add_details", 
            "file_copy_details", 
            "file_delete_details", 
            "file_download_details", 
            "file_edit_details", 
            "file_get_copy_reference_details", 
            "file_move_details", 
            "file_permanently_delete_details", 
            "file_preview_details", 
            "file_rename_details", 
            "file_restore_details", 
            "file_revert_details", 
            "file_rollback_changes_details", 
            "file_save_copy_reference_details", 
            "file_request_change_details", 
            "file_request_close_details", 
            "file_request_create_details", 
            "file_request_receive_file_details", 
            "group_add_external_id_details", 
            "group_add_member_details", 
            "group_change_external_id_details", 
            "group_change_management_type_details", 
            "group_change_member_role_details", 
            "group_create_details", 
            "group_delete_details", 
            "group_description_updated_details", 
            "group_join_policy_updated_details", 
            "group_moved_details", 
            "group_remove_external_id_details", 
            "group_remove_member_details", 
            "group_rename_details", 
            "emm_error_details", 
            "login_fail_details", 
            "login_success_details", 
            "logout_details", 
            "reseller_support_session_end_details", 
            "reseller_support_session_start_details", 
            "sign_in_as_session_end_details", 
            "sign_in_as_session_start_details", 
            "sso_error_details", 
            "member_add_name_details", 
            "member_change_admin_role_details", 
            "member_change_email_details", 
            "member_change_membership_type_details", 
            "member_change_name_details", 
            "member_change_status_details", 
            "member_permanently_delete_account_contents_details", 
            "member_space_limits_add_custom_quota_details", 
            "member_space_limits_change_custom_quota_details", 
            "member_space_limits_change_status_details", 
            "member_space_limits_remove_custom_quota_details", 
            "member_suggest_details", 
            "member_transfer_account_contents_details", 
            "secondary_mails_policy_changed_details", 
            "paper_content_add_member_details", 
            "paper_content_add_to_folder_details", 
            "paper_content_archive_details", 
            "paper_content_create_details", 
            "paper_content_permanently_delete_details", 
            "paper_content_remove_from_folder_details", 
            "paper_content_remove_member_details", 
            "paper_content_rename_details", 
            "paper_content_restore_details", 
            "paper_doc_add_comment_details", 
            "paper_doc_change_member_role_details", 
            "paper_doc_change_sharing_policy_details", 
            "paper_doc_change_subscription_details", 
            "paper_doc_deleted_details", 
            "paper_doc_delete_comment_details", 
            "paper_doc_download_details", 
            "paper_doc_edit_details", 
            "paper_doc_edit_comment_details", 
            "paper_doc_followed_details", 
            "paper_doc_mention_details", 
            "paper_doc_request_access_details", 
            "paper_doc_resolve_comment_details", 
            "paper_doc_revert_details", 
            "paper_doc_slack_share_details", 
            "paper_doc_team_invite_details", 
            "paper_doc_trashed_details", 
            "paper_doc_unresolve_comment_details", 
            "paper_doc_untrashed_details", 
            "paper_doc_view_details", 
            "paper_external_view_allow_details", 
            "paper_external_view_default_team_details", 
            "paper_external_view_forbid_details", 
            "paper_folder_change_subscription_details", 
            "paper_folder_deleted_details", 
            "paper_folder_followed_details", 
            "paper_folder_team_invite_details", 
            "password_change_details", 
            "password_reset_details", 
            "password_reset_all_details", 
            "emm_create_exceptions_report_details", 
            "emm_create_usage_report_details", 
            "export_members_report_details", 
            "paper_admin_export_start_details", 
            "smart_sync_create_admin_privilege_report_details", 
            "team_activity_create_report_details", 
            "collection_share_details", 
            "note_acl_invite_only_details", 
            "note_acl_link_details", 
            "note_acl_team_link_details", 
            "note_shared_details", 
            "note_share_receive_details", 
            "open_note_shared_details", 
            "sf_add_group_details", 
            "sf_allow_non_members_to_view_shared_links_details", 
            "sf_external_invite_warn_details", 
            "sf_fb_invite_details", 
            "sf_fb_invite_change_role_details", 
            "sf_fb_uninvite_details", 
            "sf_invite_group_details", 
            "sf_team_grant_access_details", 
            "sf_team_invite_details", 
            "sf_team_invite_change_role_details", 
            "sf_team_join_details", 
            "sf_team_join_from_oob_link_details", 
            "sf_team_uninvite_details", 
            "shared_content_add_invitees_details", 
            "shared_content_add_link_expiry_details", 
            "shared_content_add_link_password_details", 
            "shared_content_add_member_details", 
            "shared_content_change_downloads_policy_details", 
            "shared_content_change_invitee_role_details", 
            "shared_content_change_link_audience_details", 
            "shared_content_change_link_expiry_details", 
            "shared_content_change_link_password_details", 
            "shared_content_change_member_role_details", 
            "shared_content_change_viewer_info_policy_details", 
            "shared_content_claim_invitation_details", 
            "shared_content_copy_details", 
            "shared_content_download_details", 
            "shared_content_relinquish_membership_details", 
            "shared_content_remove_invitees_details", 
            "shared_content_remove_link_expiry_details", 
            "shared_content_remove_link_password_details", 
            "shared_content_remove_member_details", 
            "shared_content_request_access_details", 
            "shared_content_unshare_details", 
            "shared_content_view_details", 
            "shared_folder_change_link_policy_details", 
            "shared_folder_change_members_inheritance_policy_details", 
            "shared_folder_change_members_management_policy_details", 
            "shared_folder_change_members_policy_details", 
            "shared_folder_create_details", 
            "shared_folder_decline_invitation_details", 
            "shared_folder_mount_details", 
            "shared_folder_nest_details", 
            "shared_folder_transfer_ownership_details", 
            "shared_folder_unmount_details", 
            "shared_link_add_expiry_details", 
            "shared_link_change_expiry_details", 
            "shared_link_change_visibility_details", 
            "shared_link_copy_details", 
            "shared_link_create_details", 
            "shared_link_disable_details", 
            "shared_link_download_details", 
            "shared_link_remove_expiry_details", 
            "shared_link_share_details", 
            "shared_link_view_details", 
            "shared_note_opened_details", 
            "shmodel_group_share_details", 
            "showcase_access_granted_details", 
            "showcase_add_member_details", 
            "showcase_archived_details", 
            "showcase_created_details", 
            "showcase_delete_comment_details", 
            "showcase_edited_details", 
            "showcase_edit_comment_details", 
            "showcase_file_added_details", 
            "showcase_file_download_details", 
            "showcase_file_removed_details", 
            "showcase_file_view_details", 
            "showcase_permanently_deleted_details", 
            "showcase_post_comment_details", 
            "showcase_remove_member_details", 
            "showcase_renamed_details", 
            "showcase_request_access_details", 
            "showcase_resolve_comment_details", 
            "showcase_restored_details", 
            "showcase_trashed_details", 
            "showcase_trashed_deprecated_details", 
            "showcase_unresolve_comment_details", 
            "showcase_untrashed_details", 
            "showcase_untrashed_deprecated_details", 
            "showcase_view_details", 
            "sso_add_cert_details", 
            "sso_add_login_url_details", 
            "sso_add_logout_url_details", 
            "sso_change_cert_details", 
            "sso_change_login_url_details", 
            "sso_change_logout_url_details", 
            "sso_change_saml_identity_mode_details", 
            "sso_remove_cert_details", 
            "sso_remove_login_url_details", 
            "sso_remove_logout_url_details", 
            "team_folder_change_status_details", 
            "team_folder_create_details", 
            "team_folder_downgrade_details", 
            "team_folder_permanently_delete_details", 
            "team_folder_rename_details", 
            "team_selective_sync_settings_changed_details", 
            "account_capture_change_policy_details", 
            "allow_download_disabled_details", 
            "allow_download_enabled_details", 
            "data_placement_restriction_change_policy_details", 
            "data_placement_restriction_satisfy_policy_details", 
            "device_approvals_change_desktop_policy_details", 
            "device_approvals_change_mobile_policy_details", 
            "device_approvals_change_overage_action_details", 
            "device_approvals_change_unlink_action_details", 
            "directory_restrictions_add_members_details", 
            "directory_restrictions_remove_members_details", 
            "emm_add_exception_details", 
            "emm_change_policy_details", 
            "emm_remove_exception_details", 
            "extended_version_history_change_policy_details", 
            "file_comments_change_policy_details", 
            "file_requests_change_policy_details", 
            "file_requests_emails_enabled_details", 
            "file_requests_emails_restricted_to_team_only_details", 
            "google_sso_change_policy_details", 
            "group_user_management_change_policy_details", 
            "member_requests_change_policy_details", 
            "member_space_limits_add_exception_details", 
            "member_space_limits_change_caps_type_policy_details", 
            "member_space_limits_change_policy_details", 
            "member_space_limits_remove_exception_details", 
            "member_suggestions_change_policy_details", 
            "microsoft_office_addin_change_policy_details", 
            "network_control_change_policy_details", 
            "paper_change_deployment_policy_details", 
            "paper_change_member_link_policy_details", 
            "paper_change_member_policy_details", 
            "paper_change_policy_details", 
            "paper_enabled_users_group_addition_details", 
            "paper_enabled_users_group_removal_details", 
            "permanent_delete_change_policy_details", 
            "sharing_change_folder_join_policy_details", 
            "sharing_change_link_policy_details", 
            "sharing_change_member_policy_details", 
            "showcase_change_download_policy_details", 
            "showcase_change_enabled_policy_details", 
            "showcase_change_external_sharing_policy_details", 
            "smart_sync_change_policy_details", 
            "smart_sync_not_opt_out_details", 
            "smart_sync_opt_out_details", 
            "sso_change_policy_details", 
            "tfa_change_policy_details", 
            "two_account_change_policy_details", 
            "web_sessions_change_fixed_length_policy_details", 
            "web_sessions_change_idle_length_policy_details", 
            "team_merge_from_details", 
            "team_merge_to_details", 
            "team_profile_add_logo_details", 
            "team_profile_change_default_language_details", 
            "team_profile_change_logo_details", 
            "team_profile_change_name_details", 
            "team_profile_remove_logo_details", 
            "tfa_add_backup_phone_details", 
            "tfa_add_security_key_details", 
            "tfa_change_backup_phone_details", 
            "tfa_change_status_details", 
            "tfa_remove_backup_phone_details", 
            "tfa_remove_security_key_details", 
            "tfa_reset_details", 
            "missing_details", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of EventDetails"
        }, 
        "paper_content_add_to_folder_details": {
          "$ref": "#/definitions/PaperContentAddToFolderDetails"
        }, 
        "showcase_delete_comment_details": {
          "$ref": "#/definitions/ShowcaseDeleteCommentDetails"
        }, 
        "team_folder_change_status_details": {
          "$ref": "#/definitions/TeamFolderChangeStatusDetails"
        }, 
        "showcase_edit_comment_details": {
          "$ref": "#/definitions/ShowcaseEditCommentDetails"
        }, 
        "shared_folder_unmount_details": {
          "$ref": "#/definitions/SharedFolderUnmountDetails"
        }, 
        "showcase_created_details": {
          "$ref": "#/definitions/ShowcaseCreatedDetails"
        }, 
        "group_user_management_change_policy_details": {
          "$ref": "#/definitions/GroupUserManagementChangePolicyDetails"
        }
      }
    }, 
    "PaperDeploymentPolicy": {
      "type": "object", 
      "description": "full: All team members have access to Paper.\npartial: Only whitelisted team members can access Paper. To see which user is whitelisted, check 'is_paper_whitelisted' on 'account/info'.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "full", 
            "partial", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of PaperDeploymentPolicy"
        }
      }
    }, 
    "EmmChangePolicyDetails": {
      "type": "object", 
      "description": "Enabled/disabled enterprise mobility management for members.\nnew_value: New enterprise mobility management policy.\nprevious_value: Previous enterprise mobility management policy. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/EmmState"
        }, 
        "previous_value": {
          "$ref": "#/definitions/EmmState"
        }
      }
    }, 
    "FileCopyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "ShowcaseFileViewType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SharedContentDownloadDetails": {
      "type": "object", 
      "description": "Downloaded shared file/folder.\nshared_content_link: Shared content link.\nshared_content_access_level: Shared content access level.\nshared_content_owner: The shared content owner.\n", 
      "properties": {
        "shared_content_owner": {
          "$ref": "#/definitions/UserLogInfo"
        }, 
        "shared_content_link": {
          "type": "string", 
          "description": "Shared content link."
        }, 
        "shared_content_access_level": {
          "$ref": "#/definitions/AccessLevel"
        }
      }
    }, 
    "FileSaveCopyReferenceDetails": {
      "type": "object", 
      "description": "Saved file/folder using copy reference.\nrelocate_action_details: Relocate action details.\n", 
      "properties": {
        "relocate_action_details": {
          "items": {
            "$ref": "#/definitions/RelocateAssetReferencesLogInfo"
          }, 
          "type": "array", 
          "description": "Relocate action details."
        }
      }
    }, 
    "FailureDetailsLogInfo": {
      "type": "object", 
      "description": "Provides details about a failure\nuser_friendly_message: A user friendly explanation of the error. Might be missing due to historical data gap.\ntechnical_error_message: A technical explanation of the error. This is relevant for some errors.\n", 
      "properties": {
        "user_friendly_message": {
          "type": "string", 
          "description": "A user friendly explanation of the error. Might be missing due to historical data gap."
        }, 
        "technical_error_message": {
          "type": "string", 
          "description": "A technical explanation of the error. This is relevant for some errors."
        }
      }
    }, 
    "NamespaceType": {
      "type": "object", 
      "description": "app_folder: App sandbox folder.\nshared_folder: Shared folder.\nteam_folder: Top-level team-owned folder.\nteam_member_folder: Team member's home folder.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "app_folder", 
            "shared_folder", 
            "team_folder", 
            "team_member_folder", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of NamespaceType"
        }
      }
    }, 
    "FilePreviewType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "DeviceManagementEnabledDetails": {
      "type": "object", 
      "description": "Enabled device management.\n", 
      "properties": {}
    }, 
    "AccountCapturePolicy": {
      "type": "object", 
      "description": "disabled: None\ninvited_users: None\nall_users: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "disabled", 
            "invited_users", 
            "all_users", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of AccountCapturePolicy"
        }
      }
    }, 
    "ShowcaseFileAddedType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SharedContentViewDetails": {
      "type": "object", 
      "description": "Previewed shared file/folder.\nshared_content_link: Shared content link.\nshared_content_access_level: Shared content access level.\nshared_content_owner: The shared content owner.\n", 
      "properties": {
        "shared_content_owner": {
          "$ref": "#/definitions/UserLogInfo"
        }, 
        "shared_content_link": {
          "type": "string", 
          "description": "Shared content link."
        }, 
        "shared_content_access_level": {
          "$ref": "#/definitions/AccessLevel"
        }
      }
    }, 
    "TeamProfileRemoveLogoDetails": {
      "type": "object", 
      "description": "Removed team logo displayed on shared link headers.\n", 
      "properties": {}
    }, 
    "SharedContentChangeViewerInfoPolicyDetails": {
      "type": "object", 
      "description": "Changed whether members can see who viewed shared file/folder.\nnew_value: New viewer info policy.\nprevious_value: Previous view info policy. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/ViewerInfoPolicy"
        }, 
        "previous_value": {
          "$ref": "#/definitions/ViewerInfoPolicy"
        }
      }
    }, 
    "GroupRemoveMemberType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "TeamFolderIdListArg": {
      "type": "object", 
      "description": "team_folder_ids: The list of team folder IDs.\n", 
      "properties": {
        "team_folder_ids": {
          "items": {
            "type": "string"
          }, 
          "type": "array", 
          "description": "The list of team folder IDs."
        }
      }
    }, 
    "SsoErrorDetails": {
      "type": "object", 
      "description": "Failed to sign in via SSO.\nerror_details: Error details.\n", 
      "properties": {
        "error_details": {
          "$ref": "#/definitions/FailureDetailsLogInfo"
        }
      }
    }, 
    "DomainInvitesSetInviteNewUserPrefToNoType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "NoteAclTeamLinkDetails": {
      "type": "object", 
      "description": "Changed Paper doc to link-accessible for team.\n", 
      "properties": {}
    }, 
    "PaperExternalViewForbidDetails": {
      "type": "object", 
      "description": "Changed Paper external sharing setting to team-only.\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "TfaChangeStatusDetails": {
      "type": "object", 
      "description": "Enabled/disabled/changed two-step verification setting.\nnew_value: The new two factor authentication configuration.\nprevious_value: The previous two factor authentication configuration. Might be missing due to historical data gap.\nused_rescue_code: Used two factor authentication rescue code. This flag is relevant when the two factor authentication configuration is disabled.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/TfaConfiguration"
        }, 
        "previous_value": {
          "$ref": "#/definitions/TfaConfiguration"
        }, 
        "used_rescue_code": {
          "type": "boolean", 
          "description": "Used two factor authentication rescue code. This flag is relevant when the two factor authentication configuration is disabled."
        }
      }
    }, 
    "SharedFolderChangeMembersManagementPolicyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "DeviceLinkSuccessDetails": {
      "type": "object", 
      "description": "Linked device.\ndevice_session_info: Device's session logged information.\n", 
      "properties": {
        "device_session_info": {
          "$ref": "#/definitions/DeviceSessionLogInfo"
        }
      }
    }, 
    "DomainInvitesApproveRequestToJoinTeamType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "ShowcaseUntrashedDetails": {
      "type": "object", 
      "description": "Restored showcase.\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "DeviceApprovalsChangeMobilePolicyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "FilePermanentlyDeleteType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "MemberChangeNameType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SsoPolicy": {
      "type": "object", 
      "description": "disabled: Users will be able to sign in with their Dropbox credentials.\noptional: Users will be able to sign in with either their Dropbox or single sign-on credentials.\nrequired: Users will be required to sign in with their single sign-on credentials.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "disabled", 
            "optional", 
            "required", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of SsoPolicy"
        }
      }
    }, 
    "PaperFolderChangeSubscriptionDetails": {
      "type": "object", 
      "description": "Followed/unfollowed Paper folder.\nevent_uuid: Event unique identifier.\nnew_subscription_level: New folder subscription level.\nprevious_subscription_level: Previous folder subscription level. Might be missing due to historical data gap.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }, 
        "previous_subscription_level": {
          "type": "string", 
          "description": "Previous folder subscription level. Might be missing due to historical data gap."
        }, 
        "new_subscription_level": {
          "type": "string", 
          "description": "New folder subscription level."
        }
      }
    }, 
    "AccountCaptureMigrateAccountType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SharingChangeFolderJoinPolicyDetails": {
      "type": "object", 
      "description": "Changed whether team members can join shared folders owned outside team.\nnew_value: New external join policy.\nprevious_value: Previous external join policy. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/SharingFolderJoinPolicy"
        }, 
        "previous_value": {
          "$ref": "#/definitions/SharingFolderJoinPolicy"
        }
      }
    }, 
    "NoteSharedType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SsoChangeSamlIdentityModeType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "FileRequestDetails": {
      "type": "object", 
      "description": "File request details\nasset_index: Asset position in the Assets list.\ndeadline: File request deadline. Might be missing due to historical data gap.\n", 
      "properties": {
        "asset_index": {
          "type": "number", 
          "description": "Asset position in the Assets list."
        }, 
        "deadline": {
          "$ref": "#/definitions/FileRequestDeadline"
        }
      }
    }, 
    "PasswordResetDetails": {
      "type": "object", 
      "description": "Reset password.\n", 
      "properties": {}
    }, 
    "PaperEnabledUsersGroupRemovalType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "MemberChangeNameDetails": {
      "type": "object", 
      "description": "Changed team member name.\nnew_value: New user's name.\nprevious_value: Previous user's name. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/UserNameLogInfo"
        }, 
        "previous_value": {
          "$ref": "#/definitions/UserNameLogInfo"
        }
      }
    }, 
    "EmmRefreshAuthTokenDetails": {
      "type": "object", 
      "description": "Refreshed auth token used for setting up enterprise mobility management.\n", 
      "properties": {}
    }, 
    "PaperContentPermanentlyDeleteType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SsoRemoveLoginUrlDetails": {
      "type": "object", 
      "description": "Removed sign-in URL for SSO.\nprevious_value: Previous single sign-on login URL.\n", 
      "properties": {
        "previous_value": {
          "type": "string", 
          "description": "Previous single sign-on login URL."
        }
      }
    }, 
    "NoteAclInviteOnlyDetails": {
      "type": "object", 
      "description": "Changed Paper doc to invite-only.\n", 
      "properties": {}
    }, 
    "SharedFolderMembersInheritancePolicy": {
      "type": "object", 
      "description": "Specifies if a shared folder inherits its members from the parent folder.\ninherit_members: None\ndont_inherit_members: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "inherit_members", 
            "dont_inherit_members", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of SharedFolderMembersInheritancePolicy"
        }
      }
    }, 
    "PaperDocUnresolveCommentDetails": {
      "type": "object", 
      "description": "Unresolved Paper doc comment.\nevent_uuid: Event unique identifier.\ncomment_text: Comment text. Might be missing due to historical data gap.\n", 
      "properties": {
        "comment_text": {
          "type": "string", 
          "description": "Comment text. Might be missing due to historical data gap."
        }, 
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "UserNameLogInfo": {
      "type": "object", 
      "description": "User's name logged information\ngiven_name: Given name.\nsurname: Surname.\nlocale: Locale. Might be missing due to historical data gap.\n", 
      "properties": {
        "locale": {
          "type": "string", 
          "description": "Locale. Might be missing due to historical data gap."
        }, 
        "surname": {
          "type": "string", 
          "description": "Surname."
        }, 
        "given_name": {
          "type": "string", 
          "description": "Given name."
        }
      }
    }, 
    "WebSessionsIdleLengthPolicy": {
      "type": "object", 
      "description": "Web sessions idle length policy.\ndefined: Defined idle session length.\nundefined: Undefined idle session length.\nother: None\n", 
      "properties": {
        "defined": {
          "$ref": "#/definitions/DurationLogInfo"
        }, 
        ".tag": {
          "enum": [
            "defined", 
            "undefined", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of WebSessionsIdleLengthPolicy"
        }
      }
    }, 
    "GetDevicesReport": {
      "type": "object", 
      "description": "Devices Report Result. Contains subsections for different time ranges of activity. Each of the items in each subsection of the storage report is an array of values, one value per day. If there is no data for a day, then the value will be None.\nstart_date: First date present in the results as 'YYYY-MM-DD' or None.\nactive_1_day: Report of the number of devices active in the last day.\nactive_7_day: Report of the number of devices active in the last 7 days.\nactive_28_day: Report of the number of devices active in the last 28 days.\n", 
      "properties": {
        "active_28_day": {
          "$ref": "#/definitions/DevicesActive"
        }, 
        "active_7_day": {
          "$ref": "#/definitions/DevicesActive"
        }, 
        "start_date": {
          "type": "string", 
          "description": "First date present in the results as 'YYYY-MM-DD' or None."
        }, 
        "active_1_day": {
          "$ref": "#/definitions/DevicesActive"
        }
      }
    }, 
    "SfAddGroupDetails": {
      "type": "object", 
      "description": "Added team to shared folder.\ntarget_asset_index: Target asset position in the Assets list.\noriginal_folder_name: Original shared folder name.\nteam_name: Team name.\nsharing_permission: Sharing permission. Might be missing due to historical data gap.\n", 
      "properties": {
        "sharing_permission": {
          "type": "string", 
          "description": "Sharing permission. Might be missing due to historical data gap."
        }, 
        "target_asset_index": {
          "type": "number", 
          "description": "Target asset position in the Assets list."
        }, 
        "original_folder_name": {
          "type": "string", 
          "description": "Original shared folder name."
        }, 
        "team_name": {
          "type": "string", 
          "description": "Team name."
        }
      }
    }, 
    "MemberLinkedApps": {
      "type": "object", 
      "description": "Information on linked applications of a team member.\nteam_member_id: The member unique Id.\nlinked_api_apps: List of third party applications linked by this team member.\n", 
      "properties": {
        "team_member_id": {
          "type": "string", 
          "description": "The member unique Id."
        }, 
        "linked_api_apps": {
          "items": {
            "$ref": "#/definitions/ApiApp"
          }, 
          "type": "array", 
          "description": "List of third party applications linked by this team member."
        }
      }
    }, 
    "GroupChangeExternalIdDetails": {
      "type": "object", 
      "description": "Changed external ID for group.\nnew_value: Current external id.\nprevious_value: Old external id.\n", 
      "properties": {
        "new_value": {
          "type": "string", 
          "description": "Current external id."
        }, 
        "previous_value": {
          "type": "string", 
          "description": "Old external id."
        }
      }
    }, 
    "GroupsMembersListResult": {
      "type": "object", 
      "description": "members: None\ncursor: Pass the cursor into :route:`groups/members/list/continue` to obtain additional group members.\nhas_more: Is true if there are additional group members that have not been returned yet. An additional call to :route:`groups/members/list/continue` can retrieve them.\n", 
      "properties": {
        "cursor": {
          "type": "string", 
          "description": "Pass the cursor into :route:`groups/members/list/continue` to obtain additional group members."
        }, 
        "has_more": {
          "type": "boolean", 
          "description": "Is true if there are additional group members that have not been returned yet. An additional call to :route:`groups/members/list/continue` can retrieve them."
        }, 
        "members": {
          "items": {
            "$ref": "#/definitions/GroupMemberInfo"
          }, 
          "type": "array"
        }
      }
    }, 
    "FileCommentsChangePolicyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "PaperDocSlackShareType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "PaperExternalViewAllowType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "PaperDocTeamInviteType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SharedFolderDeclineInvitationType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "MemberSuggestionsPolicy": {
      "type": "object", 
      "description": "Member suggestions policy\ndisabled: None\nenabled: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "disabled", 
            "enabled", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of MemberSuggestionsPolicy"
        }
      }
    }, 
    "LinkedDeviceLogInfo": {
      "type": "object", 
      "description": "The device sessions that user is linked to.\nmobile_device_session: mobile device session's details.\ndesktop_device_session: desktop device session's details.\nweb_device_session: web device session's details.\nlegacy_device_session: legacy device session's details.\nother: None\n", 
      "properties": {
        "web_device_session": {
          "$ref": "#/definitions/WebDeviceSessionLogInfo"
        }, 
        ".tag": {
          "enum": [
            "mobile_device_session", 
            "desktop_device_session", 
            "web_device_session", 
            "legacy_device_session", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of LinkedDeviceLogInfo"
        }, 
        "mobile_device_session": {
          "$ref": "#/definitions/MobileDeviceSessionLogInfo"
        }, 
        "legacy_device_session": {
          "$ref": "#/definitions/LegacyDeviceSessionLogInfo"
        }, 
        "desktop_device_session": {
          "$ref": "#/definitions/DesktopDeviceSessionLogInfo"
        }
      }
    }, 
    "SharedLinkAddExpiryDetails": {
      "type": "object", 
      "description": "Added shared link expiration date.\nnew_value: New shared link expiration date.\n", 
      "properties": {
        "new_value": {
          "type": "string", 
          "description": "New shared link expiration date."
        }
      }
    }, 
    "ExtendedVersionHistoryChangePolicyDetails": {
      "type": "object", 
      "description": "Accepted/opted out of extended version history.\nnew_value: New extended version history policy.\nprevious_value: Previous extended version history policy. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/ExtendedVersionHistoryPolicy"
        }, 
        "previous_value": {
          "$ref": "#/definitions/ExtendedVersionHistoryPolicy"
        }
      }
    }, 
    "SharedLinkAddExpiryType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SharedContentAddMemberDetails": {
      "type": "object", 
      "description": "Added users and/or groups to shared file/folder.\nshared_content_access_level: Shared content access level.\n", 
      "properties": {
        "shared_content_access_level": {
          "$ref": "#/definitions/AccessLevel"
        }
      }
    }, 
    "SmartSyncNotOptOutType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SfTeamUninviteDetails": {
      "type": "object", 
      "description": "Unshared folder with team member.\ntarget_asset_index: Target asset position in the Assets list.\noriginal_folder_name: Original shared folder name.\n", 
      "properties": {
        "target_asset_index": {
          "type": "number", 
          "description": "Target asset position in the Assets list."
        }, 
        "original_folder_name": {
          "type": "string", 
          "description": "Original shared folder name."
        }
      }
    }, 
    "LoginSuccessDetails": {
      "type": "object", 
      "description": "Signed in.\nlogin_method: Login method.\nis_emm_managed: Tells if the login device is EMM managed. Might be missing due to historical data gap.\n", 
      "properties": {
        "login_method": {
          "$ref": "#/definitions/LoginMethod"
        }, 
        "is_emm_managed": {
          "type": "boolean", 
          "description": "Tells if the login device is EMM managed. Might be missing due to historical data gap."
        }
      }
    }, 
    "PollError": {
      "type": "object", 
      "description": "Error returned by methods for polling the status of asynchronous job.\ninvalid_async_job_id: The job ID is invalid.\ninternal_error: Something went wrong with the job on Dropbox's end. You'll need to verify that the action you were taking succeeded, and if not, try again. This should happen very rarely.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "invalid_async_job_id", 
            "internal_error", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of PollError"
        }
      }
    }, 
    "SharedLinkViewDetails": {
      "type": "object", 
      "description": "Opened shared link.\nshared_link_owner: Shared link owner details. Might be missing due to historical data gap.\n", 
      "properties": {
        "shared_link_owner": {
          "$ref": "#/definitions/UserLogInfo"
        }
      }
    }, 
    "MemberRequestsChangePolicyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "FileDeleteDetails": {
      "type": "object", 
      "description": "Deleted files and/or folders.\n", 
      "properties": {}
    }, 
    "SharedContentChangeMemberRoleDetails": {
      "type": "object", 
      "description": "Changed access type of shared file/folder member.\nnew_access_level: New access level.\nprevious_access_level: Previous access level. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_access_level": {
          "$ref": "#/definitions/AccessLevel"
        }, 
        "previous_access_level": {
          "$ref": "#/definitions/AccessLevel"
        }
      }
    }, 
    "ShowcaseAddMemberType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SfTeamInviteChangeRoleType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "EmmChangePolicyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SmartSyncOptOutPolicy": {
      "type": "object", 
      "description": "default: None\nopted_out: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "default", 
            "opted_out", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of SmartSyncOptOutPolicy"
        }
      }
    }, 
    "SharedFolderNestType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "TeamActivityCreateReportType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SharingChangeLinkPolicyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SsoChangeLogoutUrlType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "GroupsGetInfoItem": {
      "type": "object", 
      "description": "id_not_found: An ID that was provided as a parameter to :route:`groups/get_info`, and did not match a corresponding group. The ID can be a group ID, or an external ID, depending on how the method was called.\ngroup_info: Info about a group.\n", 
      "properties": {
        "group_info": {
          "$ref": "#/definitions/GroupFullInfo"
        }, 
        "id_not_found": {
          "type": "string", 
          "description": "An ID that was provided as a parameter to :route:`groups/get_info`, and did not match a corresponding group. The ID can be a group ID, or an external ID, depending on how the method was called."
        }, 
        ".tag": {
          "enum": [
            "id_not_found", 
            "group_info"
          ], 
          "type": "string", 
          "title": "Choice of GroupsGetInfoItem"
        }
      }
    }, 
    "FileDownloadDetails": {
      "type": "object", 
      "description": "Downloaded files and/or folders.\n", 
      "properties": {}
    }, 
    "SfFbUninviteDetails": {
      "type": "object", 
      "description": "Uninvited Facebook user from shared folder.\ntarget_asset_index: Target asset position in the Assets list.\noriginal_folder_name: Original shared folder name.\n", 
      "properties": {
        "target_asset_index": {
          "type": "number", 
          "description": "Target asset position in the Assets list."
        }, 
        "original_folder_name": {
          "type": "string", 
          "description": "Original shared folder name."
        }
      }
    }, 
    "NoteAclLinkDetails": {
      "type": "object", 
      "description": "Changed Paper doc to link-accessible.\n", 
      "properties": {}
    }, 
    "MembersListContinueError": {
      "type": "object", 
      "description": "invalid_cursor: The cursor is invalid.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "invalid_cursor", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of MembersListContinueError"
        }
      }
    }, 
    "GroupUserManagementChangePolicyDetails": {
      "type": "object", 
      "description": "Changed who can create groups.\nnew_value: New group users management policy.\nprevious_value: Previous group users management policy. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/GroupCreation"
        }, 
        "previous_value": {
          "$ref": "#/definitions/GroupCreation"
        }
      }
    }, 
    "FileRequestChangeType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SfExternalInviteWarnDetails": {
      "type": "object", 
      "description": "Set team members to see warning before sharing folders outside team.\ntarget_asset_index: Target asset position in the Assets list.\noriginal_folder_name: Original shared folder name.\nnew_sharing_permission: New sharing permission. Might be missing due to historical data gap.\nprevious_sharing_permission: Previous sharing permission. Might be missing due to historical data gap.\n", 
      "properties": {
        "target_asset_index": {
          "type": "number", 
          "description": "Target asset position in the Assets list."
        }, 
        "original_folder_name": {
          "type": "string", 
          "description": "Original shared folder name."
        }, 
        "new_sharing_permission": {
          "type": "string", 
          "description": "New sharing permission. Might be missing due to historical data gap."
        }, 
        "previous_sharing_permission": {
          "type": "string", 
          "description": "Previous sharing permission. Might be missing due to historical data gap."
        }
      }
    }, 
    "TeamSelectiveSyncSettingsChangedType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "WebSessionsFixedLengthPolicy": {
      "type": "object", 
      "description": "Web sessions fixed length policy.\ndefined: Defined fixed session length.\nundefined: Undefined fixed session length.\nother: None\n", 
      "properties": {
        "defined": {
          "$ref": "#/definitions/DurationLogInfo"
        }, 
        ".tag": {
          "enum": [
            "defined", 
            "undefined", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of WebSessionsFixedLengthPolicy"
        }
      }
    }, 
    "TeamFolderArchiveError": {
      "type": "object", 
      "description": "access_error: None\nstatus_error: None\nteam_shared_dropbox_error: None\nother: None\n", 
      "properties": {
        "access_error": {
          "$ref": "#/definitions/TeamFolderAccessError"
        }, 
        ".tag": {
          "enum": [
            "access_error", 
            "status_error", 
            "team_shared_dropbox_error", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of TeamFolderArchiveError"
        }, 
        "team_shared_dropbox_error": {
          "$ref": "#/definitions/TeamFolderTeamSharedDropboxError"
        }, 
        "status_error": {
          "$ref": "#/definitions/TeamFolderInvalidStatusError"
        }
      }
    }, 
    "RevokeDeviceSessionBatchArg": {
      "type": "object", 
      "description": "revoke_devices: None\n", 
      "properties": {
        "revoke_devices": {
          "items": {
            "$ref": "#/definitions/RevokeDeviceSessionArg"
          }, 
          "type": "array"
        }
      }
    }, 
    "TimeUnit": {
      "type": "object", 
      "description": "milliseconds: None\nseconds: None\nminutes: None\nhours: None\ndays: None\nweeks: None\nmonths: None\nyears: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "milliseconds", 
            "seconds", 
            "minutes", 
            "hours", 
            "days", 
            "weeks", 
            "months", 
            "years", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of TimeUnit"
        }
      }
    }, 
    "TeamFolderRenameError": {
      "type": "object", 
      "description": "access_error: None\nstatus_error: None\nteam_shared_dropbox_error: None\nother: None\ninvalid_folder_name: The provided folder name cannot be used.\nfolder_name_already_used: There is already a team folder with the same name.\nfolder_name_reserved: The provided name cannot be used because it is reserved.\n", 
      "properties": {
        "access_error": {
          "$ref": "#/definitions/TeamFolderAccessError"
        }, 
        ".tag": {
          "enum": [
            "access_error", 
            "status_error", 
            "team_shared_dropbox_error", 
            "other", 
            "invalid_folder_name", 
            "folder_name_already_used", 
            "folder_name_reserved"
          ], 
          "type": "string", 
          "title": "Choice of TeamFolderRenameError"
        }, 
        "team_shared_dropbox_error": {
          "$ref": "#/definitions/TeamFolderTeamSharedDropboxError"
        }, 
        "status_error": {
          "$ref": "#/definitions/TeamFolderInvalidStatusError"
        }
      }
    }, 
    "ShowcaseExternalSharingPolicy": {
      "type": "object", 
      "description": "Policy for controlling if team members can share Showcases externally.\ndisabled: None\nenabled: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "disabled", 
            "enabled", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of ShowcaseExternalSharingPolicy"
        }
      }
    }, 
    "DeviceApprovalsChangeDesktopPolicyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "FileUnresolveCommentDetails": {
      "type": "object", 
      "description": "Unresolved file comment.\ncomment_text: Comment text. Might be missing due to historical data gap.\n", 
      "properties": {
        "comment_text": {
          "type": "string", 
          "description": "Comment text. Might be missing due to historical data gap."
        }
      }
    }, 
    "SharedContentAddLinkExpiryDetails": {
      "type": "object", 
      "description": "Added expiration date to link for shared file/folder.\nnew_value: New shared content link expiration date. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "type": "string", 
          "description": "New shared content link expiration date. Might be missing due to historical data gap."
        }
      }
    }, 
    "MemberSpaceLimitsAddExceptionType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "ListTeamDevicesArg": {
      "type": "object", 
      "description": "cursor: At the first call to the :route:`devices/list_team_devices` the cursor shouldn't be passed. Then, if the result of the call includes a cursor, the following requests should include the received cursors in order to receive the next sub list of team devices.\ninclude_web_sessions: Whether to list web sessions of the team members.\ninclude_desktop_clients: Whether to list desktop clients of the team members.\ninclude_mobile_clients: Whether to list mobile clients of the team members.\n", 
      "properties": {
        "cursor": {
          "type": "string", 
          "description": "At the first call to the :route:`devices/list_team_devices` the cursor shouldn't be passed. Then, if the result of the call includes a cursor, the following requests should include the received cursors in order to receive the next sub list of team devices."
        }, 
        "include_desktop_clients": {
          "type": "boolean", 
          "description": "Whether to list desktop clients of the team members."
        }, 
        "include_web_sessions": {
          "type": "boolean", 
          "description": "Whether to list web sessions of the team members."
        }, 
        "include_mobile_clients": {
          "type": "boolean", 
          "description": "Whether to list mobile clients of the team members."
        }
      }
    }, 
    "PaperAdminExportStartDetails": {
      "type": "object", 
      "description": "Exported all team Paper docs.\n", 
      "properties": {}
    }, 
    "GroupChangeManagementTypeDetails": {
      "type": "object", 
      "description": "Changed group management type.\nnew_value: New group management type.\nprevious_value: Previous group management type. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/GroupManagementType"
        }, 
        "previous_value": {
          "$ref": "#/definitions/GroupManagementType"
        }
      }
    }, 
    "OpenNoteSharedType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "GroupCreation": {
      "type": "object", 
      "description": "admins_and_members: Team admins and members can create groups.\nadmins_only: Only team admins can create groups.\n", 
      "properties": {
        ".tag": {
          "enum": [
            "admins_and_members", 
            "admins_only"
          ], 
          "type": "string", 
          "title": "Choice of GroupCreation"
        }
      }
    }, 
    "SsoChangeSamlIdentityModeDetails": {
      "type": "object", 
      "description": "Changed SAML identity mode for SSO.\nprevious_value: Previous single sign-on identity mode.\nnew_value: New single sign-on identity mode.\n", 
      "properties": {
        "new_value": {
          "type": "number", 
          "description": "New single sign-on identity mode."
        }, 
        "previous_value": {
          "type": "number", 
          "description": "Previous single sign-on identity mode."
        }
      }
    }, 
    "EmmCreateExceptionsReportDetails": {
      "type": "object", 
      "description": "Created EMM-excluded users report.\n", 
      "properties": {}
    }, 
    "SharedContentRequestAccessType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "RevokeDeviceSessionBatchError": {
      "type": "object", 
      "description": "other: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "other"
          ], 
          "type": "string", 
          "title": "Choice of RevokeDeviceSessionBatchError"
        }
      }
    }, 
    "SharedContentChangeLinkExpiryType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "PaperAdminExportStartType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "LogoutDetails": {
      "type": "object", 
      "description": "Signed out.\n", 
      "properties": {}
    }, 
    "ShowcaseArchivedType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "ModifyTemplateError": {
      "type": "object", 
      "description": "template_not_found: Template does not exist for the given identifier.\nrestricted_content: You do not have permission to modify this template.\nother: None\nconflicting_property_names: A property field key with that name already exists in the template.\ntoo_many_properties: There are too many properties in the changed template. The maximum number of properties per template is 32.\ntoo_many_templates: There are too many templates for the team.\ntemplate_attribute_too_large: The template name, description or one or more of the property field keys is too large.\n", 
      "properties": {
        ".tag": {
          "enum": [
            "template_not_found", 
            "restricted_content", 
            "other", 
            "conflicting_property_names", 
            "too_many_properties", 
            "too_many_templates", 
            "template_attribute_too_large"
          ], 
          "type": "string", 
          "title": "Choice of ModifyTemplateError"
        }, 
        "template_not_found": {
          "type": "string", 
          "description": "Template does not exist for the given identifier."
        }
      }
    }, 
    "AllowDownloadEnabledType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "AccountCaptureRelinquishAccountType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "ShowcaseRenamedType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "ShowcaseAccessGrantedType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "TeamMergeFromDetails": {
      "type": "object", 
      "description": "Merged another team into this team.\nteam_name: The name of the team that was merged into this team.\n", 
      "properties": {
        "team_name": {
          "type": "string", 
          "description": "The name of the team that was merged into this team."
        }
      }
    }, 
    "GroupChangeExternalIdType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "PaperFolderDeletedType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "PaperExternalViewDefaultTeamType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "TeamFolderActivateError": {
      "type": "object", 
      "description": "access_error: None\nstatus_error: None\nteam_shared_dropbox_error: None\nother: None\n", 
      "properties": {
        "access_error": {
          "$ref": "#/definitions/TeamFolderAccessError"
        }, 
        ".tag": {
          "enum": [
            "access_error", 
            "status_error", 
            "team_shared_dropbox_error", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of TeamFolderActivateError"
        }, 
        "team_shared_dropbox_error": {
          "$ref": "#/definitions/TeamFolderTeamSharedDropboxError"
        }, 
        "status_error": {
          "$ref": "#/definitions/TeamFolderInvalidStatusError"
        }
      }
    }, 
    "ShowcaseChangeDownloadPolicyDetails": {
      "type": "object", 
      "description": "Enabled/disabled downloading files from Dropbox Showcase for team.\nnew_value: New Dropbox Showcase download policy.\nprevious_value: Previous Dropbox Showcase download policy.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/ShowcaseDownloadPolicy"
        }, 
        "previous_value": {
          "$ref": "#/definitions/ShowcaseDownloadPolicy"
        }
      }
    }, 
    "MemberChangeMembershipTypeDetails": {
      "type": "object", 
      "description": "Changed membership type (limited/full) of member.\nprev_value: Previous membership type.\nnew_value: New membership type.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/TeamMembershipType"
        }, 
        "prev_value": {
          "$ref": "#/definitions/TeamMembershipType"
        }
      }
    }, 
    "TeamFolderUpdateSyncSettingsError": {
      "type": "object", 
      "description": "access_error: None\nstatus_error: None\nteam_shared_dropbox_error: None\nother: None\nsync_settings_error: An error occurred setting the sync settings.\n", 
      "properties": {
        "access_error": {
          "$ref": "#/definitions/TeamFolderAccessError"
        }, 
        ".tag": {
          "enum": [
            "access_error", 
            "status_error", 
            "team_shared_dropbox_error", 
            "other", 
            "sync_settings_error"
          ], 
          "type": "string", 
          "title": "Choice of TeamFolderUpdateSyncSettingsError"
        }, 
        "team_shared_dropbox_error": {
          "$ref": "#/definitions/TeamFolderTeamSharedDropboxError"
        }, 
        "status_error": {
          "$ref": "#/definitions/TeamFolderInvalidStatusError"
        }, 
        "sync_settings_error": {
          "$ref": "#/definitions/SyncSettingsError"
        }
      }
    }, 
    "PaperDocChangeSharingPolicyDetails": {
      "type": "object", 
      "description": "Changed sharing setting for Paper doc.\nevent_uuid: Event unique identifier.\npublic_sharing_policy: Sharing policy with external users. Might be missing due to historical data gap.\nteam_sharing_policy: Sharing policy with team. Might be missing due to historical data gap.\n", 
      "properties": {
        "team_sharing_policy": {
          "type": "string", 
          "description": "Sharing policy with team. Might be missing due to historical data gap."
        }, 
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }, 
        "public_sharing_policy": {
          "type": "string", 
          "description": "Sharing policy with external users. Might be missing due to historical data gap."
        }
      }
    }, 
    "PaperDocAddCommentDetails": {
      "type": "object", 
      "description": "Added Paper doc comment.\nevent_uuid: Event unique identifier.\ncomment_text: Comment text. Might be missing due to historical data gap.\n", 
      "properties": {
        "comment_text": {
          "type": "string", 
          "description": "Comment text. Might be missing due to historical data gap."
        }, 
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "TeamNamespacesListResult": {
      "type": "object", 
      "description": "Result for :route:`namespaces/list`.\nnamespaces: List of all namespaces the team can access.\ncursor: Pass the cursor into :route:`namespaces/list/continue` to obtain additional namespaces. Note that duplicate namespaces may be returned.\nhas_more: Is true if there are additional namespaces that have not been returned yet.\n", 
      "properties": {
        "cursor": {
          "type": "string", 
          "description": "Pass the cursor into :route:`namespaces/list/continue` to obtain additional namespaces. Note that duplicate namespaces may be returned."
        }, 
        "has_more": {
          "type": "boolean", 
          "description": "Is true if there are additional namespaces that have not been returned yet."
        }, 
        "namespaces": {
          "items": {
            "$ref": "#/definitions/NamespaceMetadata"
          }, 
          "type": "array", 
          "description": "List of all namespaces the team can access."
        }
      }
    }, 
    "DeviceSessionArg": {
      "type": "object", 
      "description": "session_id: The session id.\nteam_member_id: The unique id of the member owning the device.\n", 
      "properties": {
        "team_member_id": {
          "type": "string", 
          "description": "The unique id of the member owning the device."
        }, 
        "session_id": {
          "type": "string", 
          "description": "The session id."
        }
      }
    }, 
    "AppUnlinkUserType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SharedContentRemoveMemberType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "AccountCaptureChangeAvailabilityType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SyncSettingsError": {
      "type": "object", 
      "description": "path: None\nunsupported_combination: Setting this combination of sync settings simultaneously is not supported.\nunsupported_configuration: The specified configuration is not supported.\nother: None\n", 
      "properties": {
        "path": {
          "$ref": "#/definitions/LookupError"
        }, 
        ".tag": {
          "enum": [
            "path", 
            "unsupported_combination", 
            "unsupported_configuration", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of SyncSettingsError"
        }
      }
    }, 
    "FileUnlikeCommentType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "GroupRenameDetails": {
      "type": "object", 
      "description": "Renamed group.\nprevious_value: Previous display name.\nnew_value: New display name.\n", 
      "properties": {
        "new_value": {
          "type": "string", 
          "description": "New display name."
        }, 
        "previous_value": {
          "type": "string", 
          "description": "Previous display name."
        }
      }
    }, 
    "PlacementRestriction": {
      "type": "object", 
      "description": "europe_only: None\nnone: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "europe_only", 
            "none", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of PlacementRestriction"
        }
      }
    }, 
    "UserCustomQuotaResult": {
      "type": "object", 
      "description": "User and their custom quota in GB (1 TB = 1024 GB).  No quota returns if the user has no custom quota set.\nuser: None\nquota_gb: None\n", 
      "properties": {
        "quota_gb": {
          "type": "number"
        }, 
        "user": {
          "$ref": "#/definitions/UserSelectorArg"
        }
      }
    }, 
    "MemberSuggestType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "ShowcaseEditCommentDetails": {
      "type": "object", 
      "description": "Edited showcase comment.\nevent_uuid: Event unique identifier.\ncomment_text: Comment text.\n", 
      "properties": {
        "comment_text": {
          "type": "string", 
          "description": "Comment text."
        }, 
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "PaperChangeMemberPolicyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "MicrosoftOfficeAddinChangePolicyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "MemberSpaceLimitsAddCustomQuotaType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "MemberSpaceLimitsChangePolicyDetails": {
      "type": "object", 
      "description": "Changed team default member space limit.\nprevious_value: Previous team default limit value in bytes. Might be missing due to historical data gap.\nnew_value: New team default limit value in bytes. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "type": "number", 
          "description": "New team default limit value in bytes. Might be missing due to historical data gap."
        }, 
        "previous_value": {
          "type": "number", 
          "description": "Previous team default limit value in bytes. Might be missing due to historical data gap."
        }
      }
    }, 
    "SharedLinkRemoveExpiryType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "AclUpdatePolicy": {
      "type": "object", 
      "description": "Who can change a shared folder's access control list (ACL). In other words, who can add, remove, or change the privileges of members.\nowner: Only the owner can update the ACL.\neditors: Any editor can update the ACL. This may be further restricted to editors on the same team.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "owner", 
            "editors", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of AclUpdatePolicy"
        }
      }
    }, 
    "MemberPermanentlyDeleteAccountContentsDetails": {
      "type": "object", 
      "description": "Permanently deleted contents of deleted team member account.\n", 
      "properties": {}
    }, 
    "ShowcaseArchivedDetails": {
      "type": "object", 
      "description": "Archived showcase.\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "ShowcasePostCommentDetails": {
      "type": "object", 
      "description": "Added showcase comment.\nevent_uuid: Event unique identifier.\ncomment_text: Comment text.\n", 
      "properties": {
        "comment_text": {
          "type": "string", 
          "description": "Comment text."
        }, 
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "ShowcaseRestoredDetails": {
      "type": "object", 
      "description": "Unarchived showcase.\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "DeviceType": {
      "type": "object", 
      "description": "desktop: None\nmobile: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "desktop", 
            "mobile", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of DeviceType"
        }
      }
    }, 
    "OpenNoteSharedDetails": {
      "type": "object", 
      "description": "Opened shared Paper doc.\n", 
      "properties": {}
    }, 
    "PasswordResetAllType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "ShowcaseRestoredType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "TeamMemberStatus": {
      "type": "object", 
      "description": "The user's status as a member of a specific team.\nactive: User has successfully joined the team.\ninvited: User has been invited to a team, but has not joined the team yet.\nsuspended: User is no longer a member of the team, but the account can be un-suspended, re-establishing the user as a team member.\nremoved: User is no longer a member of the team. Removed users are only listed when include_removed is true in members/list.\n", 
      "properties": {
        ".tag": {
          "enum": [
            "active", 
            "invited", 
            "suspended", 
            "removed"
          ], 
          "type": "string", 
          "title": "Choice of TeamMemberStatus"
        }, 
        "removed": {
          "$ref": "#/definitions/RemovedStatus"
        }
      }
    }, 
    "DeviceApprovalsChangeUnlinkActionDetails": {
      "type": "object", 
      "description": "Changed device approvals setting when member unlinks approved device.\nnew_value: New device unlink policy. Might be missing due to historical data gap.\nprevious_value: Previous device unlink policy. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/DeviceUnlinkPolicy"
        }, 
        "previous_value": {
          "$ref": "#/definitions/DeviceUnlinkPolicy"
        }
      }
    }, 
    "SmartSyncChangePolicyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SfTeamJoinType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SharingChangeMemberPolicyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SsoAddLoginUrlType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "MemberSpaceLimitsChangePolicyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "FileDeleteType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "GroupJoinPolicyUpdatedType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "FileChangeCommentSubscriptionDetails": {
      "type": "object", 
      "description": "Subscribed to or unsubscribed from comment notifications for file.\nnew_value: New file comment subscription.\nprevious_value: Previous file comment subscription. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/FileCommentNotificationPolicy"
        }, 
        "previous_value": {
          "$ref": "#/definitions/FileCommentNotificationPolicy"
        }
      }
    }, 
    "FileChangeCommentSubscriptionType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "EnabledDomainInvitesDetails": {
      "type": "object", 
      "description": "Enabled domain invites.\n", 
      "properties": {}
    }, 
    "TeamFolderCreateArg": {
      "type": "object", 
      "description": "name: Name for the new team folder.\nsync_setting: The sync setting to apply to this team folder. Only permitted if the team has team selective sync enabled.\n", 
      "properties": {
        "sync_setting": {
          "$ref": "#/definitions/SyncSettingArg"
        }, 
        "name": {
          "type": "string", 
          "description": "Name for the new team folder."
        }
      }
    }, 
    "TfaRemoveSecurityKeyDetails": {
      "type": "object", 
      "description": "Removed security key for two-step verification.\n", 
      "properties": {}
    }, 
    "PaperDocUntrashedType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "MembersUnsuspendError": {
      "type": "object", 
      "description": "user_not_found: No matching user found. The provided team_member_id, email, or external_id does not exist on this team.\nuser_not_in_team: The user is not a member of the team.\nother: None\nunsuspend_non_suspended_member: The user is unsuspended, so it cannot be unsuspended again.\nteam_license_limit: Team is full. The organization has no available licenses.\n", 
      "properties": {
        ".tag": {
          "enum": [
            "user_not_found", 
            "user_not_in_team", 
            "other", 
            "unsuspend_non_suspended_member", 
            "team_license_limit"
          ], 
          "type": "string", 
          "title": "Choice of MembersUnsuspendError"
        }
      }
    }, 
    "DurationLogInfo": {
      "type": "object", 
      "description": "Represents a time duration: unit and amount\nunit: Time unit.\namount: Amount of time.\n", 
      "properties": {
        "amount": {
          "type": "number", 
          "description": "Amount of time."
        }, 
        "unit": {
          "$ref": "#/definitions/TimeUnit"
        }
      }
    }, 
    "PaperContentRenameDetails": {
      "type": "object", 
      "description": "Renamed Paper doc/folder.\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "ShowcaseTrashedType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "DeviceDeleteOnUnlinkFailDetails": {
      "type": "object", 
      "description": "Failed to delete all files from unlinked device.\nnum_failures: The number of times that remote file deletion failed.\nsession_info: Session unique id. Might be missing due to historical data gap.\ndisplay_name: The device name. Might be missing due to historical data gap.\n", 
      "properties": {
        "display_name": {
          "type": "string", 
          "description": "The device name. Might be missing due to historical data gap."
        }, 
        "num_failures": {
          "type": "number", 
          "description": "The number of times that remote file deletion failed."
        }, 
        "session_info": {
          "$ref": "#/definitions/SessionLogInfo"
        }
      }
    }, 
    "SharedLinkCopyDetails": {
      "type": "object", 
      "description": "Added file/folder to Dropbox from shared link.\nshared_link_owner: Shared link owner details. Might be missing due to historical data gap.\n", 
      "properties": {
        "shared_link_owner": {
          "$ref": "#/definitions/UserLogInfo"
        }
      }
    }, 
    "ShowcaseRequestAccessDetails": {
      "type": "object", 
      "description": "Requested access to showcase.\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "ExtendedVersionHistoryChangePolicyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "TeamNamespacesListContinueError": {
      "type": "object", 
      "description": "invalid_cursor: The cursor is invalid.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "invalid_cursor", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of TeamNamespacesListContinueError"
        }
      }
    }, 
    "MemberAddResult": {
      "type": "object", 
      "description": "Describes the result of attempting to add a single user to the team. 'success' is the only value indicating that a user was indeed added to the team - the other values explain the type of failure that occurred, and include the email of the user for which the operation has failed.\nsuccess: Describes a user that was successfully added to the team.\nteam_license_limit: Team is already full. The organization has no available licenses.\nfree_team_member_limit_reached: Team is already full. The free team member limit has been reached.\nuser_already_on_team: User is already on this team. The provided email address is associated with a user who is already a member of (including in recoverable state) or invited to the team.\nuser_on_another_team: User is already on another team. The provided email address is associated with a user that is already a member or invited to another team.\nuser_already_paired: User is already paired.\nuser_migration_failed: User migration has failed.\nduplicate_external_member_id: A user with the given external member ID already exists on the team (including in recoverable state).\nduplicate_member_persistent_id: A user with the given persistent ID already exists on the team (including in recoverable state).\npersistent_id_disabled: Persistent ID is only available to teams with persistent ID SAML configuration. Please contact Dropbox for more information.\nuser_creation_failed: User creation has failed.\n", 
      "properties": {
        "duplicate_external_member_id": {
          "type": "string", 
          "description": "A user with the given external member ID already exists on the team (including in recoverable state)."
        }, 
        "persistent_id_disabled": {
          "type": "string", 
          "description": "Persistent ID is only available to teams with persistent ID SAML configuration. Please contact Dropbox for more information."
        }, 
        "success": {
          "$ref": "#/definitions/TeamMemberInfo"
        }, 
        "user_creation_failed": {
          "type": "string", 
          "description": "User creation has failed."
        }, 
        ".tag": {
          "enum": [
            "success", 
            "team_license_limit", 
            "free_team_member_limit_reached", 
            "user_already_on_team", 
            "user_on_another_team", 
            "user_already_paired", 
            "user_migration_failed", 
            "duplicate_external_member_id", 
            "duplicate_member_persistent_id", 
            "persistent_id_disabled", 
            "user_creation_failed"
          ], 
          "type": "string", 
          "title": "Choice of MemberAddResult"
        }, 
        "user_already_on_team": {
          "type": "string", 
          "description": "User is already on this team. The provided email address is associated with a user who is already a member of (including in recoverable state) or invited to the team."
        }, 
        "duplicate_member_persistent_id": {
          "type": "string", 
          "description": "A user with the given persistent ID already exists on the team (including in recoverable state)."
        }, 
        "user_already_paired": {
          "type": "string", 
          "description": "User is already paired."
        }, 
        "team_license_limit": {
          "type": "string", 
          "description": "Team is already full. The organization has no available licenses."
        }, 
        "user_migration_failed": {
          "type": "string", 
          "description": "User migration has failed."
        }, 
        "free_team_member_limit_reached": {
          "type": "string", 
          "description": "Team is already full. The free team member limit has been reached."
        }, 
        "user_on_another_team": {
          "type": "string", 
          "description": "User is already on another team. The provided email address is associated with a user that is already a member or invited to another team."
        }
      }
    }, 
    "PaperDocMentionDetails": {
      "type": "object", 
      "description": "Mentioned team member in Paper doc.\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "SharedContentRemoveInviteesType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "GroupMembersAddArg": {
      "type": "object", 
      "description": "group: Group to which users will be added.\nmembers: List of users to be added to the group.\nreturn_members: Whether to return the list of members in the group.  Note that the default value will cause all the group members  to be returned in the response. This may take a long time for large groups.\n", 
      "properties": {
        "return_members": {
          "type": "boolean", 
          "description": "Whether to return the list of members in the group.  Note that the default value will cause all the group members  to be returned in the response. This may take a long time for large groups."
        }, 
        "group": {
          "$ref": "#/definitions/GroupSelector"
        }, 
        "members": {
          "items": {
            "$ref": "#/definitions/MemberAccess"
          }, 
          "type": "array", 
          "description": "List of users to be added to the group."
        }
      }
    }, 
    "ShowcaseRemoveMemberDetails": {
      "type": "object", 
      "description": "Removed member from showcase.\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "SharedContentRelinquishMembershipDetails": {
      "type": "object", 
      "description": "Left shared file/folder.\n", 
      "properties": {}
    }, 
    "DomainVerificationAddDomainFailDetails": {
      "type": "object", 
      "description": "Failed to verify team domain.\ndomain_name: Domain name.\nverification_method: Domain name verification method. Might be missing due to historical data gap.\n", 
      "properties": {
        "verification_method": {
          "type": "string", 
          "description": "Domain name verification method. Might be missing due to historical data gap."
        }, 
        "domain_name": {
          "type": "string", 
          "description": "Domain name."
        }
      }
    }, 
    "TeamMergeToType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "GetStorageReport": {
      "type": "object", 
      "description": "Storage Report Result. Each of the items in the storage report is an array of values, one value per day. If there is no data for a day, then the value will be None.\nstart_date: First date present in the results as 'YYYY-MM-DD' or None.\ntotal_usage: Sum of the shared, unshared, and datastore usages, for each day.\nshared_usage: Array of the combined size (bytes) of team members' shared folders, for each day.\nunshared_usage: Array of the combined size (bytes) of team members' root namespaces, for each day.\nshared_folders: Array of the number of shared folders owned by team members, for each day.\nmember_storage_map: Array of storage summaries of team members' account sizes. Each storage summary is an array of key, value pairs, where each pair describes a storage bucket. The key indicates the upper bound of the bucket and the value is the number of users in that bucket. There is one such summary per day. If there is no data for a day, the storage summary will be empty.\n", 
      "properties": {
        "total_usage": {
          "items": {
            "type": "number"
          }, 
          "type": "array", 
          "description": "Sum of the shared, unshared, and datastore usages, for each day."
        }, 
        "member_storage_map": {
          "items": {
            "items": {
              "$ref": "#/definitions/StorageBucket"
            }, 
            "type": "array"
          }, 
          "type": "array", 
          "description": "Array of storage summaries of team members' account sizes. Each storage summary is an array of key, value pairs, where each pair describes a storage bucket. The key indicates the upper bound of the bucket and the value is the number of users in that bucket. There is one such summary per day. If there is no data for a day, the storage summary will be empty."
        }, 
        "shared_usage": {
          "items": {
            "type": "number"
          }, 
          "type": "array", 
          "description": "Array of the combined size (bytes) of team members' shared folders, for each day."
        }, 
        "unshared_usage": {
          "items": {
            "type": "number"
          }, 
          "type": "array", 
          "description": "Array of the combined size (bytes) of team members' root namespaces, for each day."
        }, 
        "shared_folders": {
          "items": {
            "type": "number"
          }, 
          "type": "array", 
          "description": "Array of the number of shared folders owned by team members, for each day."
        }, 
        "start_date": {
          "type": "string", 
          "description": "First date present in the results as 'YYYY-MM-DD' or None."
        }
      }
    }, 
    "PathLogInfo": {
      "type": "object", 
      "description": "Path's details.\nnamespace_relative: Path relative to the namespace containing the content.\ncontextual: Fully qualified path relative to event's context. Might be missing due to historical data gap.\n", 
      "properties": {
        "namespace_relative": {
          "$ref": "#/definitions/NamespaceRelativePathLogInfo"
        }, 
        "contextual": {
          "type": "string", 
          "description": "Fully qualified path relative to event's context. Might be missing due to historical data gap."
        }
      }
    }, 
    "GetTeamEventsError": {
      "type": "object", 
      "description": "Errors that can be raised when calling :route:`get_events`.\naccount_id_not_found: No user found matching the provided account_id.\ninvalid_time_range: Invalid time range.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "account_id_not_found", 
            "invalid_time_range", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of GetTeamEventsError"
        }
      }
    }, 
    "SharedContentClaimInvitationType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "FileRequestReceiveFileType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "AccountCaptureChangeAvailabilityDetails": {
      "type": "object", 
      "description": "Granted/revoked option to enable account capture on team domains.\nnew_value: New account capture availabilty value.\nprevious_value: Previous account capture availabilty value. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/AccountCaptureAvailability"
        }, 
        "previous_value": {
          "$ref": "#/definitions/AccountCaptureAvailability"
        }
      }
    }, 
    "SharedLinkCopyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "MemberSuggestionsChangePolicyDetails": {
      "type": "object", 
      "description": "Enabled/disabled option for team members to suggest people to add to team.\nnew_value: New team member suggestions policy.\nprevious_value: Previous team member suggestions policy. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/MemberSuggestionsPolicy"
        }, 
        "previous_value": {
          "$ref": "#/definitions/MemberSuggestionsPolicy"
        }
      }
    }, 
    "UserSelectorArg": {
      "type": "object", 
      "description": "Argument for selecting a single user, either by team_member_id, external_id or email.\nteam_member_id: None\nexternal_id: None\nemail: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "team_member_id", 
            "external_id", 
            "email"
          ], 
          "type": "string", 
          "title": "Choice of UserSelectorArg"
        }, 
        "external_id": {
          "type": "string"
        }, 
        "team_member_id": {
          "type": "string"
        }, 
        "email": {
          "type": "string"
        }
      }
    }, 
    "PaperExternalViewAllowDetails": {
      "type": "object", 
      "description": "Changed Paper external sharing setting to anyone.\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "ResellerLogInfo": {
      "type": "object", 
      "description": "Reseller information.\nreseller_name: Reseller name.\nreseller_email: Reseller email.\n", 
      "properties": {
        "reseller_name": {
          "type": "string", 
          "description": "Reseller name."
        }, 
        "reseller_email": {
          "type": "string", 
          "description": "Reseller email."
        }
      }
    }, 
    "AppLinkTeamDetails": {
      "type": "object", 
      "description": "Linked app for team.\napp_info: Relevant application details.\n", 
      "properties": {
        "app_info": {
          "$ref": "#/definitions/AppLogInfo"
        }
      }
    }, 
    "SharedLinkCreatePolicy": {
      "type": "object", 
      "description": "Policy governing the visibility of shared links. This policy can apply to newly created shared links, or all shared links.\ndefault_public: By default, anyone can access newly created shared links. No login will be required to access the shared links unless overridden.\ndefault_team_only: By default, only members of the same team can access newly created shared links. Login will be required to access the shared links unless overridden.\nteam_only: Only members of the same team can access all shared links. Login will be required to access all shared links.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "default_public", 
            "default_team_only", 
            "team_only", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of SharedLinkCreatePolicy"
        }
      }
    }, 
    "GroupUserManagementChangePolicyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "MemberChangeStatusType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SfTeamInviteType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "ContentPermanentDeletePolicy": {
      "type": "object", 
      "description": "Policy for pemanent content deletion\ndisabled: None\nenabled: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "disabled", 
            "enabled", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of ContentPermanentDeletePolicy"
        }
      }
    }, 
    "TeamFolderListContinueArg": {
      "type": "object", 
      "description": "cursor: Indicates from what point to get the next set of team folders.\n", 
      "properties": {
        "cursor": {
          "type": "string", 
          "description": "Indicates from what point to get the next set of team folders."
        }
      }
    }, 
    "PaperDocRevertType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SsoRemoveLogoutUrlType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "TeamFolderRenameType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SharedLinkDisableType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "RolloutMethod": {
      "type": "object", 
      "description": "unlink_all: Unlink all.\nunlink_most_inactive: Unlink devices with the most inactivity.\nadd_member_to_exceptions: Add member to Exceptions.\n", 
      "properties": {
        ".tag": {
          "enum": [
            "unlink_all", 
            "unlink_most_inactive", 
            "add_member_to_exceptions"
          ], 
          "type": "string", 
          "title": "Choice of RolloutMethod"
        }
      }
    }, 
    "AccountCaptureNotificationEmailsSentType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "DeviceChangeIpMobileType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SfFbUninviteType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "MemberSuggestionsChangePolicyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "PaperDocViewType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "TeamNamespacesListContinueArg": {
      "type": "object", 
      "description": "cursor: Indicates from what point to get the next set of team-accessible namespaces.\n", 
      "properties": {
        "cursor": {
          "type": "string", 
          "description": "Indicates from what point to get the next set of team-accessible namespaces."
        }
      }
    }, 
    "PaperDocTeamInviteDetails": {
      "type": "object", 
      "description": "Shared Paper doc with team member.\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "SharedContentRequestAccessDetails": {
      "type": "object", 
      "description": "Requested access to shared file/folder.\nshared_content_link: Shared content link.\n", 
      "properties": {
        "shared_content_link": {
          "type": "string", 
          "description": "Shared content link."
        }
      }
    }, 
    "SharedContentRelinquishMembershipType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SharedLinkCreateType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "ShowcaseDownloadPolicy": {
      "type": "object", 
      "description": "Policy for controlling if files can be downloaded from Showcases by team members\ndisabled: None\nenabled: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "disabled", 
            "enabled", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of ShowcaseDownloadPolicy"
        }
      }
    }, 
    "SharedContentAddLinkPasswordType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "TeamActivityCreateReportDetails": {
      "type": "object", 
      "description": "Created team activity report.\nstart_date: Report start date.\nend_date: Report end date.\n", 
      "properties": {
        "start_date": {
          "type": "string", 
          "description": "Report start date."
        }, 
        "end_date": {
          "type": "string", 
          "description": "Report end date."
        }
      }
    }, 
    "SetCustomQuotaError": {
      "type": "object", 
      "description": "Error returned when setting member custom quota.\ntoo_many_users: A maximum of 1000 users can be set for a single call.\nother: None\nsome_users_are_excluded: Some of the users are on the excluded users list and can't have custom quota set.\n", 
      "properties": {
        ".tag": {
          "enum": [
            "too_many_users", 
            "other", 
            "some_users_are_excluded"
          ], 
          "type": "string", 
          "title": "Choice of SetCustomQuotaError"
        }
      }
    }, 
    "HasTeamSharedDropboxValue": {
      "type": "object", 
      "description": "The value for :field:`Feature.has_team_shared_dropbox`.\nhas_team_shared_dropbox: Does this team have a shared team root.\nother: None\n", 
      "properties": {
        "has_team_shared_dropbox": {
          "type": "boolean", 
          "description": "Does this team have a shared team root."
        }, 
        ".tag": {
          "enum": [
            "has_team_shared_dropbox", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of HasTeamSharedDropboxValue"
        }
      }
    }, 
    "TeamMemberProfile": {
      "type": "object", 
      "description": "Profile of a user as a member of a team.\nteam_member_id: ID of user as a member of a team.\nemail: Email address of user.\nemail_verified: Is true if the user's email is verified to be owned by the user.\nstatus: The user's status as a member of a specific team.\nname: Representations for a person's name.\nmembership_type: The user's membership type: full (normal team member) vs limited (does not use a license; no access to the team's shared quota).\ngroups: List of group IDs of groups that the user belongs to.\nmember_folder_id: The namespace id of the user's root folder.\nexternal_id: External ID that a team can attach to the user. An application using the API may find it easier to use their own IDs instead of Dropbox IDs like account_id or team_member_id.\naccount_id: A user's account identifier.\njoined_on: The date and time the user joined as a member of a specific team.\npersistent_id: Persistent ID that a team can attach to the user. The persistent ID is unique ID to be used for SAML authentication.\nis_directory_restricted: Whether the user is a directory restricted user.\n", 
      "properties": {
        "status": {
          "$ref": "#/definitions/TeamMemberStatus"
        }, 
        "membership_type": {
          "$ref": "#/definitions/TeamMembershipType"
        }, 
        "is_directory_restricted": {
          "type": "boolean", 
          "description": "Whether the user is a directory restricted user."
        }, 
        "name": {
          "$ref": "#/definitions/Name"
        }, 
        "email_verified": {
          "type": "boolean", 
          "description": "Is true if the user's email is verified to be owned by the user."
        }, 
        "team_member_id": {
          "type": "string", 
          "description": "ID of user as a member of a team."
        }, 
        "persistent_id": {
          "type": "string", 
          "description": "Persistent ID that a team can attach to the user. The persistent ID is unique ID to be used for SAML authentication."
        }, 
        "member_folder_id": {
          "type": "string", 
          "description": "The namespace id of the user's root folder."
        }, 
        "groups": {
          "items": {
            "type": "string"
          }, 
          "type": "array", 
          "description": "List of group IDs of groups that the user belongs to."
        }, 
        "joined_on": {
          "type": "string", 
          "description": "The date and time the user joined as a member of a specific team."
        }, 
        "external_id": {
          "type": "string", 
          "description": "External ID that a team can attach to the user. An application using the API may find it easier to use their own IDs instead of Dropbox IDs like account_id or team_member_id."
        }, 
        "email": {
          "type": "string", 
          "description": "Email address of user."
        }, 
        "account_id": {
          "type": "string", 
          "description": "A user's account identifier."
        }
      }
    }, 
    "LegacyDeviceSessionLogInfo": {
      "type": "object", 
      "description": "Information on sessions, in legacy format\nip_address: The IP address of the last activity from this session. Might be missing due to historical data gap.\ncreated: The time this session was created. Might be missing due to historical data gap.\nupdated: The time of the last activity from this session. Might be missing due to historical data gap.\nsession_info: Session unique id. Might be missing due to historical data gap.\ndisplay_name: The device name. Might be missing due to historical data gap.\nis_emm_managed: Is device managed by emm. Might be missing due to historical data gap.\nplatform: Information on the hosting platform. Might be missing due to historical data gap.\nmac_address: The mac address of the last activity from this session. Might be missing due to historical data gap.\nos_version: The hosting OS version. Might be missing due to historical data gap.\ndevice_type: Information on the hosting device type. Might be missing due to historical data gap.\nclient_version: The Dropbox client version. Might be missing due to historical data gap.\nlegacy_uniq_id: Alternative unique device session id, instead of session id field. Might be missing due to historical data gap.\n", 
      "properties": {
        "legacy_uniq_id": {
          "type": "string", 
          "description": "Alternative unique device session id, instead of session id field. Might be missing due to historical data gap."
        }, 
        "updated": {
          "type": "string", 
          "description": "The time of the last activity from this session. Might be missing due to historical data gap."
        }, 
        "display_name": {
          "type": "string", 
          "description": "The device name. Might be missing due to historical data gap."
        }, 
        "created": {
          "type": "string", 
          "description": "The time this session was created. Might be missing due to historical data gap."
        }, 
        "session_info": {
          "$ref": "#/definitions/SessionLogInfo"
        }, 
        "os_version": {
          "type": "string", 
          "description": "The hosting OS version. Might be missing due to historical data gap."
        }, 
        "platform": {
          "type": "string", 
          "description": "Information on the hosting platform. Might be missing due to historical data gap."
        }, 
        "device_type": {
          "type": "string", 
          "description": "Information on the hosting device type. Might be missing due to historical data gap."
        }, 
        "mac_address": {
          "type": "string", 
          "description": "The mac address of the last activity from this session. Might be missing due to historical data gap."
        }, 
        "client_version": {
          "type": "string", 
          "description": "The Dropbox client version. Might be missing due to historical data gap."
        }, 
        "ip_address": {
          "type": "string", 
          "description": "The IP address of the last activity from this session. Might be missing due to historical data gap."
        }, 
        "is_emm_managed": {
          "type": "boolean", 
          "description": "Is device managed by emm. Might be missing due to historical data gap."
        }
      }
    }, 
    "DeviceLinkSuccessType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "PasswordChangeDetails": {
      "type": "object", 
      "description": "Changed password.\n", 
      "properties": {}
    }, 
    "DeviceUnlinkPolicy": {
      "type": "object", 
      "description": "remove: None\nkeep: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "remove", 
            "keep", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of DeviceUnlinkPolicy"
        }
      }
    }, 
    "FileRenameDetails": {
      "type": "object", 
      "description": "Renamed files and/or folders.\nrelocate_action_details: Relocate action details.\n", 
      "properties": {
        "relocate_action_details": {
          "items": {
            "$ref": "#/definitions/RelocateAssetReferencesLogInfo"
          }, 
          "type": "array", 
          "description": "Relocate action details."
        }
      }
    }, 
    "SharedContentAddLinkExpiryType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "GoogleSsoChangePolicyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "ExcludedUsersUpdateResult": {
      "type": "object", 
      "description": "Excluded users update result.\nstatus: Update status.\n", 
      "properties": {
        "status": {
          "$ref": "#/definitions/ExcludedUsersUpdateStatus"
        }
      }
    }, 
    "DomainInvitesSetInviteNewUserPrefToYesDetails": {
      "type": "object", 
      "description": "Enabled \"Automatically invite new users\".\n", 
      "properties": {}
    }, 
    "NamespaceRelativePathLogInfo": {
      "type": "object", 
      "description": "Namespace relative path details.\nns_id: Namespace ID. Might be missing due to historical data gap.\nrelative_path: A path relative to the specified namespace ID. Might be missing due to historical data gap.\n", 
      "properties": {
        "ns_id": {
          "type": "string", 
          "description": "Namespace ID. Might be missing due to historical data gap."
        }, 
        "relative_path": {
          "type": "string", 
          "description": "A path relative to the specified namespace ID. Might be missing due to historical data gap."
        }
      }
    }, 
    "SsoRemoveCertType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "DomainInvitesSetInviteNewUserPrefToYesType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "DirectoryRestrictionsRemoveMembersType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "GroupDescriptionUpdatedType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "FileAddDetails": {
      "type": "object", 
      "description": "Added files and/or folders.\n", 
      "properties": {}
    }, 
    "PaperDocSlackShareDetails": {
      "type": "object", 
      "description": "Shared Paper doc via Slack.\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "ShowcaseEnabledPolicy": {
      "type": "object", 
      "description": "Policy for controlling whether Showcase is enabled.\ndisabled: None\nenabled: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "disabled", 
            "enabled", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of ShowcaseEnabledPolicy"
        }
      }
    }, 
    "WebSessionsChangeFixedLengthPolicyDetails": {
      "type": "object", 
      "description": "Changed how long members can stay signed in to Dropbox.com.\nnew_value: New session length policy. Might be missing due to historical data gap.\nprevious_value: Previous session length policy. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/WebSessionsFixedLengthPolicy"
        }, 
        "previous_value": {
          "$ref": "#/definitions/WebSessionsFixedLengthPolicy"
        }
      }
    }, 
    "TeamProfileChangeNameDetails": {
      "type": "object", 
      "description": "Changed team name.\nnew_value: New team name.\nprevious_value: Previous teams name. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/TeamName"
        }, 
        "previous_value": {
          "$ref": "#/definitions/TeamName"
        }
      }
    }, 
    "SsoRemoveCertDetails": {
      "type": "object", 
      "description": "Removed X.509 certificate for SSO.\n", 
      "properties": {}
    }, 
    "SfTeamUninviteType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SfFbInviteChangeRoleDetails": {
      "type": "object", 
      "description": "Changed Facebook user's role in shared folder.\ntarget_asset_index: Target asset position in the Assets list.\noriginal_folder_name: Original shared folder name.\nprevious_sharing_permission: Previous sharing permission. Might be missing due to historical data gap.\nnew_sharing_permission: New sharing permission. Might be missing due to historical data gap.\n", 
      "properties": {
        "target_asset_index": {
          "type": "number", 
          "description": "Target asset position in the Assets list."
        }, 
        "original_folder_name": {
          "type": "string", 
          "description": "Original shared folder name."
        }, 
        "new_sharing_permission": {
          "type": "string", 
          "description": "New sharing permission. Might be missing due to historical data gap."
        }, 
        "previous_sharing_permission": {
          "type": "string", 
          "description": "Previous sharing permission. Might be missing due to historical data gap."
        }
      }
    }, 
    "SharedContentRemoveLinkExpiryType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "GoogleSsoChangePolicyDetails": {
      "type": "object", 
      "description": "Enabled/disabled Google single sign-on for team.\nnew_value: New Google single sign-on policy.\nprevious_value: Previous Google single sign-on policy. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/GoogleSsoPolicy"
        }, 
        "previous_value": {
          "$ref": "#/definitions/GoogleSsoPolicy"
        }
      }
    }, 
    "SharedContentAddLinkPasswordDetails": {
      "type": "object", 
      "description": "Added password to link for shared file/folder.\n", 
      "properties": {}
    }, 
    "ListMembersDevicesError": {
      "type": "object", 
      "description": "reset: Indicates that the cursor has been invalidated. Call :route:`devices/list_members_devices` again with an empty cursor to obtain a new cursor.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "reset", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of ListMembersDevicesError"
        }
      }
    }, 
    "TeamFolderInvalidStatusError": {
      "type": "object", 
      "description": "active: The folder is active and the operation did not succeed.\narchived: The folder is archived and the operation did not succeed.\narchive_in_progress: The folder is being archived and the operation did not succeed.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "active", 
            "archived", 
            "archive_in_progress", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of TeamFolderInvalidStatusError"
        }
      }
    }, 
    "SyncSettingArg": {
      "type": "object", 
      "description": "default: On first sync to members' computers, the specified folder will follow its parent folder's setting or otherwise follow default sync behavior.\nnot_synced: On first sync to members' computers, the specified folder will be set to not sync with selective sync.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "default", 
            "not_synced", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of SyncSettingArg"
        }
      }
    }, 
    "FileRequestsChangePolicyDetails": {
      "type": "object", 
      "description": "Enabled/disabled file requests.\nnew_value: New file requests policy.\nprevious_value: Previous file requests policy. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/FileRequestsPolicy"
        }, 
        "previous_value": {
          "$ref": "#/definitions/FileRequestsPolicy"
        }
      }
    }, 
    "PaperChangeMemberLinkPolicyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "FileRequestsPolicy": {
      "type": "object", 
      "description": "File requests policy\ndisabled: None\nenabled: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "disabled", 
            "enabled", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of FileRequestsPolicy"
        }
      }
    }, 
    "GroupFullInfo": {
      "type": "object", 
      "description": "Full description of a group.\ngroup_name: None\ngroup_id: None\ngroup_management_type: Who is allowed to manage the group.\ncreated: The group creation time as a UTC timestamp in milliseconds since the Unix epoch.\ngroup_external_id: External ID of group. This is an arbitrary ID that an admin can attach to a group.\nmember_count: The number of members in the group.\nmembers: List of group members.\n", 
      "properties": {
        "group_external_id": {
          "type": "string", 
          "description": "External ID of group. This is an arbitrary ID that an admin can attach to a group."
        }, 
        "member_count": {
          "type": "number", 
          "description": "The number of members in the group."
        }, 
        "created": {
          "type": "number", 
          "description": "The group creation time as a UTC timestamp in milliseconds since the Unix epoch."
        }, 
        "group_management_type": {
          "$ref": "#/definitions/GroupManagementType"
        }, 
        "group_name": {
          "type": "string"
        }, 
        "members": {
          "items": {
            "$ref": "#/definitions/GroupMemberInfo"
          }, 
          "type": "array", 
          "description": "List of group members."
        }, 
        "group_id": {
          "type": "string"
        }
      }
    }, 
    "WebSessionsChangeFixedLengthPolicyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SharedContentRemoveLinkExpiryDetails": {
      "type": "object", 
      "description": "Removed link expiration date of shared file/folder.\nprevious_value: Previous shared content link expiration date. Might be missing due to historical data gap.\n", 
      "properties": {
        "previous_value": {
          "type": "string", 
          "description": "Previous shared content link expiration date. Might be missing due to historical data gap."
        }
      }
    }, 
    "TeamMemberPolicies": {
      "type": "object", 
      "description": "Policies governing team members.\nsharing: Policies governing sharing.\nemm_state: This describes the Enterprise Mobility Management (EMM) state for this team. This information can be used to understand if an organization is integrating with a third-party EMM vendor to further manage and apply restrictions upon the team's Dropbox usage on mobile devices. This is a new feature and in the future we'll be adding more new fields and additional documentation.\noffice_addin: The admin policy around the Dropbox Office Add-In for this team.\n", 
      "properties": {
        "sharing": {
          "$ref": "#/definitions/TeamSharingPolicies"
        }, 
        "emm_state": {
          "$ref": "#/definitions/EmmState"
        }, 
        "office_addin": {
          "$ref": "#/definitions/OfficeAddInPolicy"
        }
      }
    }, 
    "ActorLogInfo": {
      "type": "object", 
      "description": "The entity who performed the action.\nuser: The user who did the action.\nadmin: The admin who did the action.\napp: The application who did the action.\nreseller: Action done by reseller.\ndropbox: Action done by Dropbox.\nanonymous: Anonymous actor.\nother: None\n", 
      "properties": {
        "admin": {
          "$ref": "#/definitions/UserLogInfo"
        }, 
        "app": {
          "$ref": "#/definitions/AppLogInfo"
        }, 
        ".tag": {
          "enum": [
            "user", 
            "admin", 
            "app", 
            "reseller", 
            "dropbox", 
            "anonymous", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of ActorLogInfo"
        }, 
        "user": {
          "$ref": "#/definitions/UserLogInfo"
        }, 
        "reseller": {
          "$ref": "#/definitions/ResellerLogInfo"
        }
      }
    }, 
    "OriginLogInfo": {
      "type": "object", 
      "description": "The origin from which the actor performed the action.\naccess_method: The method that was used to perform the action.\ngeo_location: Geographic location details.\n", 
      "properties": {
        "geo_location": {
          "$ref": "#/definitions/GeoLocationLogInfo"
        }, 
        "access_method": {
          "$ref": "#/definitions/AccessMethodLogInfo"
        }
      }
    }, 
    "Certificate": {
      "type": "object", 
      "description": "Certificate details.\nsubject: Certificate subject.\nissuer: Certificate issuer.\nissue_date: Certificate issue date.\nexpiration_date: Certificate expiration date.\nserial_number: Certificate serial number.\nsha1_fingerprint: Certificate sha1 fingerprint.\ncommon_name: Certificate common name.\n", 
      "properties": {
        "issue_date": {
          "type": "string", 
          "description": "Certificate issue date."
        }, 
        "expiration_date": {
          "type": "string", 
          "description": "Certificate expiration date."
        }, 
        "sha1_fingerprint": {
          "type": "string", 
          "description": "Certificate sha1 fingerprint."
        }, 
        "common_name": {
          "type": "string", 
          "description": "Certificate common name."
        }, 
        "serial_number": {
          "type": "string", 
          "description": "Certificate serial number."
        }, 
        "subject": {
          "type": "string", 
          "description": "Certificate subject."
        }, 
        "issuer": {
          "type": "string", 
          "description": "Certificate issuer."
        }
      }
    }, 
    "EmmErrorType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "ShowcaseUntrashedDeprecatedDetails": {
      "type": "object", 
      "description": "Restored showcase (old version).\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "ListMemberAppsResult": {
      "type": "object", 
      "description": "linked_api_apps: List of third party applications linked by this team member.\n", 
      "properties": {
        "linked_api_apps": {
          "items": {
            "$ref": "#/definitions/ApiApp"
          }, 
          "type": "array", 
          "description": "List of third party applications linked by this team member."
        }
      }
    }, 
    "MemberSpaceLimitsRemoveExceptionType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "DeviceManagementDisabledType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "MembersListContinueArg": {
      "type": "object", 
      "description": "cursor: Indicates from what point to get the next set of members.\n", 
      "properties": {
        "cursor": {
          "type": "string", 
          "description": "Indicates from what point to get the next set of members."
        }
      }
    }, 
    "TeamFolderRenameDetails": {
      "type": "object", 
      "description": "Renamed active/archived team folder.\nprevious_folder_name: Previous folder name.\nnew_folder_name: New folder name.\n", 
      "properties": {
        "previous_folder_name": {
          "type": "string", 
          "description": "Previous folder name."
        }, 
        "new_folder_name": {
          "type": "string", 
          "description": "New folder name."
        }
      }
    }, 
    "MemberChangeEmailType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "FileRequestCloseDetails": {
      "type": "object", 
      "description": "Closed file request.\nfile_request_id: File request id. Might be missing due to historical data gap.\nprevious_details: Previous file request details. Might be missing due to historical data gap.\n", 
      "properties": {
        "file_request_id": {
          "type": "string", 
          "description": "File request id. Might be missing due to historical data gap."
        }, 
        "previous_details": {
          "$ref": "#/definitions/FileRequestDetails"
        }
      }
    }, 
    "DomainInvitesSetInviteNewUserPrefToNoDetails": {
      "type": "object", 
      "description": "Disabled \"Automatically invite new users\".\n", 
      "properties": {}
    }, 
    "GroupMembersSetAccessTypeArg": {
      "type": "object", 
      "description": "group: Specify a group.\nuser: Identity of a user that is a member of :field:`group`.\naccess_type: New group access type the user will have.\nreturn_members: Whether to return the list of members in the group.  Note that the default value will cause all the group members  to be returned in the response. This may take a long time for large groups.\n", 
      "properties": {
        "return_members": {
          "type": "boolean", 
          "description": "Whether to return the list of members in the group.  Note that the default value will cause all the group members  to be returned in the response. This may take a long time for large groups."
        }, 
        "group": {
          "$ref": "#/definitions/GroupSelector"
        }, 
        "user": {
          "$ref": "#/definitions/UserSelectorArg"
        }, 
        "access_type": {
          "$ref": "#/definitions/GroupAccessType"
        }
      }
    }, 
    "GetActivityReport": {
      "type": "object", 
      "description": "Activity Report Result. Each of the items in the storage report is an array of values, one value per day. If there is no data for a day, then the value will be None.\nstart_date: First date present in the results as 'YYYY-MM-DD' or None.\nadds: Array of total number of adds by team members.\nedits: Array of number of edits by team members. If the same user edits the same file multiple times this is counted as a single edit.\ndeletes: Array of total number of deletes by team members.\nactive_users_28_day: Array of the number of users who have been active in the last 28 days.\nactive_users_7_day: Array of the number of users who have been active in the last week.\nactive_users_1_day: Array of the number of users who have been active in the last day.\nactive_shared_folders_28_day: Array of the number of shared folders with some activity in the last 28 days.\nactive_shared_folders_7_day: Array of the number of shared folders with some activity in the last week.\nactive_shared_folders_1_day: Array of the number of shared folders with some activity in the last day.\nshared_links_created: Array of the number of shared links created.\nshared_links_viewed_by_team: Array of the number of views by team users to shared links created by the team.\nshared_links_viewed_by_outside_user: Array of the number of views by users outside of the team to shared links created by the team.\nshared_links_viewed_by_not_logged_in: Array of the number of views by non-logged-in users to shared links created by the team.\nshared_links_viewed_total: Array of the total number of views to shared links created by the team.\n", 
      "properties": {
        "shared_links_viewed_by_team": {
          "items": {
            "type": "number"
          }, 
          "type": "array", 
          "description": "Array of the number of views by team users to shared links created by the team."
        }, 
        "adds": {
          "items": {
            "type": "number"
          }, 
          "type": "array", 
          "description": "Array of total number of adds by team members."
        }, 
        "active_shared_folders_28_day": {
          "items": {
            "type": "number"
          }, 
          "type": "array", 
          "description": "Array of the number of shared folders with some activity in the last 28 days."
        }, 
        "shared_links_viewed_by_not_logged_in": {
          "items": {
            "type": "number"
          }, 
          "type": "array", 
          "description": "Array of the number of views by non-logged-in users to shared links created by the team."
        }, 
        "active_users_7_day": {
          "items": {
            "type": "number"
          }, 
          "type": "array", 
          "description": "Array of the number of users who have been active in the last week."
        }, 
        "shared_links_created": {
          "items": {
            "type": "number"
          }, 
          "type": "array", 
          "description": "Array of the number of shared links created."
        }, 
        "active_users_28_day": {
          "items": {
            "type": "number"
          }, 
          "type": "array", 
          "description": "Array of the number of users who have been active in the last 28 days."
        }, 
        "edits": {
          "items": {
            "type": "number"
          }, 
          "type": "array", 
          "description": "Array of number of edits by team members. If the same user edits the same file multiple times this is counted as a single edit."
        }, 
        "shared_links_viewed_by_outside_user": {
          "items": {
            "type": "number"
          }, 
          "type": "array", 
          "description": "Array of the number of views by users outside of the team to shared links created by the team."
        }, 
        "active_users_1_day": {
          "items": {
            "type": "number"
          }, 
          "type": "array", 
          "description": "Array of the number of users who have been active in the last day."
        }, 
        "active_shared_folders_7_day": {
          "items": {
            "type": "number"
          }, 
          "type": "array", 
          "description": "Array of the number of shared folders with some activity in the last week."
        }, 
        "active_shared_folders_1_day": {
          "items": {
            "type": "number"
          }, 
          "type": "array", 
          "description": "Array of the number of shared folders with some activity in the last day."
        }, 
        "start_date": {
          "type": "string", 
          "description": "First date present in the results as 'YYYY-MM-DD' or None."
        }, 
        "shared_links_viewed_total": {
          "items": {
            "type": "number"
          }, 
          "type": "array", 
          "description": "Array of the total number of views to shared links created by the team."
        }, 
        "deletes": {
          "items": {
            "type": "number"
          }, 
          "type": "array", 
          "description": "Array of total number of deletes by team members."
        }
      }
    }, 
    "GroupAddExternalIdDetails": {
      "type": "object", 
      "description": "Added external ID for group.\nnew_value: Current external id.\n", 
      "properties": {
        "new_value": {
          "type": "string", 
          "description": "Current external id."
        }
      }
    }, 
    "LaunchEmptyResult": {
      "type": "object", 
      "description": "Result returned by methods that may either launch an asynchronous job or complete synchronously. Upon synchronous completion of the job, no additional information is returned.\nasync_job_id: This response indicates that the processing is asynchronous. The string is an id that can be used to obtain the status of the asynchronous job.\ncomplete: The job finished synchronously and successfully.\n", 
      "properties": {
        ".tag": {
          "enum": [
            "async_job_id", 
            "complete"
          ], 
          "type": "string", 
          "title": "Choice of LaunchEmptyResult"
        }, 
        "async_job_id": {
          "type": "string", 
          "description": "This response indicates that the processing is asynchronous. The string is an id that can be used to obtain the status of the asynchronous job."
        }
      }
    }, 
    "TeamProfileChangeLogoType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "FileCopyDetails": {
      "type": "object", 
      "description": "Copied files and/or folders.\nrelocate_action_details: Relocate action details.\n", 
      "properties": {
        "relocate_action_details": {
          "items": {
            "$ref": "#/definitions/RelocateAssetReferencesLogInfo"
          }, 
          "type": "array", 
          "description": "Relocate action details."
        }
      }
    }, 
    "PaperFolderChangeSubscriptionType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SsoRemoveLoginUrlType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "GroupDeleteType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "OfficeAddInPolicy": {
      "type": "object", 
      "description": "disabled: Office Add-In is disabled.\nenabled: Office Add-In is enabled.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "disabled", 
            "enabled", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of OfficeAddInPolicy"
        }
      }
    }, 
    "SharedContentChangeLinkPasswordType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "PaperContentRemoveMemberType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "MemberSpaceLimitsChangeStatusDetails": {
      "type": "object", 
      "description": "Changed space limit status.\nprevious_value: Previous storage quota status.\nnew_value: New storage quota status.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/SpaceLimitsStatus"
        }, 
        "previous_value": {
          "$ref": "#/definitions/SpaceLimitsStatus"
        }
      }
    }, 
    "MobileClientSession": {
      "type": "object", 
      "description": "Information about linked Dropbox mobile client sessions.\nsession_id: The session id.\ndevice_name: The device name.\nclient_type: The mobile application type.\nip_address: The IP address of the last activity from this session.\ncountry: The country from which the last activity from this session was made.\ncreated: The time this session was created.\nupdated: The time of the last activity from this session.\nclient_version: The dropbox client version.\nos_version: The hosting OS version.\nlast_carrier: last carrier used by the device.\n", 
      "properties": {
        "updated": {
          "type": "string", 
          "description": "The time of the last activity from this session."
        }, 
        "created": {
          "type": "string", 
          "description": "The time this session was created."
        }, 
        "country": {
          "type": "string", 
          "description": "The country from which the last activity from this session was made."
        }, 
        "session_id": {
          "type": "string", 
          "description": "The session id."
        }, 
        "device_name": {
          "type": "string", 
          "description": "The device name."
        }, 
        "os_version": {
          "type": "string", 
          "description": "The hosting OS version."
        }, 
        "client_type": {
          "$ref": "#/definitions/MobileClientPlatform"
        }, 
        "last_carrier": {
          "type": "string", 
          "description": "last carrier used by the device."
        }, 
        "client_version": {
          "type": "string", 
          "description": "The dropbox client version."
        }, 
        "ip_address": {
          "type": "string", 
          "description": "The IP address of the last activity from this session."
        }
      }
    }, 
    "ListMemberAppsError": {
      "type": "object", 
      "description": "Error returned by :route:`linked_apps/list_member_linked_apps`.\nmember_not_found: Member not found.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "member_not_found", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of ListMemberAppsError"
        }
      }
    }, 
    "DisabledDomainInvitesDetails": {
      "type": "object", 
      "description": "Disabled domain invites.\n", 
      "properties": {}
    }, 
    "FolderLogInfo": {
      "type": "object", 
      "description": "Folder's logged information.\npath: Path relative to event context.\ndisplay_name: Display name. Might be missing due to historical data gap.\nfile_id: Unique ID. Might be missing due to historical data gap.\n", 
      "properties": {
        "path": {
          "$ref": "#/definitions/PathLogInfo"
        }, 
        "display_name": {
          "type": "string", 
          "description": "Display name. Might be missing due to historical data gap."
        }, 
        "file_id": {
          "type": "string", 
          "description": "Unique ID. Might be missing due to historical data gap."
        }
      }
    }, 
    "EmmRemoveExceptionType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "DeviceDeleteOnUnlinkSuccessType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "PaperMemberPolicy": {
      "type": "object", 
      "description": "Policy for controlling if team members can share Paper documents externally.\nanyone_with_link: None\nonly_team: None\nteam_and_explicitly_shared: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "anyone_with_link", 
            "only_team", 
            "team_and_explicitly_shared", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of PaperMemberPolicy"
        }
      }
    }, 
    "GroupAddMemberDetails": {
      "type": "object", 
      "description": "Added team members to group.\nis_group_owner: Is group owner.\n", 
      "properties": {
        "is_group_owner": {
          "type": "boolean", 
          "description": "Is group owner."
        }
      }
    }, 
    "MemberSpaceLimitsChangeStatusType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SfInviteGroupType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "PaperChangePolicyDetails": {
      "type": "object", 
      "description": "Enabled/disabled Dropbox Paper for team.\nnew_value: New Dropbox Paper policy.\nprevious_value: Previous Dropbox Paper policy. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/PaperEnabledPolicy"
        }, 
        "previous_value": {
          "$ref": "#/definitions/PaperEnabledPolicy"
        }
      }
    }, 
    "TeamFolderChangeStatusDetails": {
      "type": "object", 
      "description": "Changed archival status of team folder.\nnew_value: New team folder status.\nprevious_value: Previous team folder status. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/TeamFolderStatus"
        }, 
        "previous_value": {
          "$ref": "#/definitions/TeamFolderStatus"
        }
      }
    }, 
    "CollectionShareType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SharedLinkShareType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "PaperDocRequestAccessType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "MemberSpaceLimitsChangeCapsTypePolicyDetails": {
      "type": "object", 
      "description": "Changed member space limit type for team.\nprevious_value: Previous space limit type.\nnew_value: New space limit type.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/SpaceCapsType"
        }, 
        "previous_value": {
          "$ref": "#/definitions/SpaceCapsType"
        }
      }
    }, 
    "DesktopDeviceSessionLogInfo": {
      "type": "object", 
      "description": "Information about linked Dropbox desktop client sessions\nhost_name: Name of the hosting desktop.\nclient_type: The Dropbox desktop client type.\nplatform: Information on the hosting platform.\nis_delete_on_unlink_supported: Whether itu2019s possible to delete all of the account files upon unlinking.\nip_address: The IP address of the last activity from this session. Might be missing due to historical data gap.\ncreated: The time this session was created. Might be missing due to historical data gap.\nupdated: The time of the last activity from this session. Might be missing due to historical data gap.\nsession_info: Desktop session unique id. Might be missing due to historical data gap.\nclient_version: The Dropbox client version.\n", 
      "properties": {
        "updated": {
          "type": "string", 
          "description": "The time of the last activity from this session. Might be missing due to historical data gap."
        }, 
        "session_info": {
          "$ref": "#/definitions/DesktopSessionLogInfo"
        }, 
        "created": {
          "type": "string", 
          "description": "The time this session was created. Might be missing due to historical data gap."
        }, 
        "platform": {
          "type": "string", 
          "description": "Information on the hosting platform."
        }, 
        "client_type": {
          "$ref": "#/definitions/DesktopPlatform"
        }, 
        "host_name": {
          "type": "string", 
          "description": "Name of the hosting desktop."
        }, 
        "is_delete_on_unlink_supported": {
          "type": "boolean", 
          "description": "Whether itu2019s possible to delete all of the account files upon unlinking."
        }, 
        "client_version": {
          "type": "string", 
          "description": "The Dropbox client version."
        }, 
        "ip_address": {
          "type": "string", 
          "description": "The IP address of the last activity from this session. Might be missing due to historical data gap."
        }
      }
    }, 
    "EmmAddExceptionDetails": {
      "type": "object", 
      "description": "Added members to EMM exception list.\n", 
      "properties": {}
    }, 
    "PaperDocAddCommentType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "ListMemberDevicesError": {
      "type": "object", 
      "description": "member_not_found: Member not found.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "member_not_found", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of ListMemberDevicesError"
        }
      }
    }, 
    "FileRequestsChangePolicyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SharedLinkCreateDetails": {
      "type": "object", 
      "description": "Created shared link.\nshared_link_access_level: Defines who can access the shared link. Might be missing due to historical data gap.\n", 
      "properties": {
        "shared_link_access_level": {
          "$ref": "#/definitions/SharedLinkAccessLevel"
        }
      }
    }, 
    "RevokeLinkedApiAppBatchArg": {
      "type": "object", 
      "description": "revoke_linked_app: None\n", 
      "properties": {
        "revoke_linked_app": {
          "items": {
            "$ref": "#/definitions/RevokeLinkedApiAppArg"
          }, 
          "type": "array"
        }
      }
    }, 
    "DesktopSessionLogInfo": {
      "type": "object", 
      "description": "Desktop session.\nsession_id: Session ID. Might be missing due to historical data gap.\n", 
      "properties": {
        "session_id": {
          "type": "string", 
          "description": "Session ID. Might be missing due to historical data gap."
        }
      }
    }, 
    "PaperDocFollowedType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SharingChangeLinkPolicyDetails": {
      "type": "object", 
      "description": "Changed whether members can share links outside team, and if links are accessible only by team members or anyone by default.\nnew_value: New external link accessibility policy.\nprevious_value: Previous external link accessibility policy. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/SharingLinkPolicy"
        }, 
        "previous_value": {
          "$ref": "#/definitions/SharingLinkPolicy"
        }
      }
    }, 
    "SfFbInviteDetails": {
      "type": "object", 
      "description": "Invited Facebook users to shared folder.\ntarget_asset_index: Target asset position in the Assets list.\noriginal_folder_name: Original shared folder name.\nsharing_permission: Sharing permission. Might be missing due to historical data gap.\n", 
      "properties": {
        "sharing_permission": {
          "type": "string", 
          "description": "Sharing permission. Might be missing due to historical data gap."
        }, 
        "target_asset_index": {
          "type": "number", 
          "description": "Target asset position in the Assets list."
        }, 
        "original_folder_name": {
          "type": "string", 
          "description": "Original shared folder name."
        }
      }
    }, 
    "UploadApiRateLimitValue": {
      "type": "object", 
      "description": "The value for :field:`Feature.upload_api_rate_limit`.\nunlimited: This team has unlimited upload API quota. So far both server version account and legacy  account type have unlimited monthly upload api quota.\nlimit: The number of upload API calls allowed per month.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "unlimited", 
            "limit", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of UploadApiRateLimitValue"
        }, 
        "limit": {
          "type": "number", 
          "description": "The number of upload API calls allowed per month."
        }
      }
    }, 
    "ShowcaseUnresolveCommentDetails": {
      "type": "object", 
      "description": "Unresolved showcase comment.\nevent_uuid: Event unique identifier.\ncomment_text: Comment text.\n", 
      "properties": {
        "comment_text": {
          "type": "string", 
          "description": "Comment text."
        }, 
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "TeamFolderCreateType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SharedFolderMountDetails": {
      "type": "object", 
      "description": "Added shared folder to own Dropbox.\n", 
      "properties": {}
    }, 
    "RevokeDeviceSessionStatus": {
      "type": "object", 
      "description": "success: Result of the revoking request.\nerror_type: The error cause in case of a failure.\n", 
      "properties": {
        "error_type": {
          "$ref": "#/definitions/RevokeDeviceSessionError"
        }, 
        "success": {
          "type": "boolean", 
          "description": "Result of the revoking request."
        }
      }
    }, 
    "TeamProfileChangeNameType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "PermanentDeleteChangePolicyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "TfaChangePolicyDetails": {
      "type": "object", 
      "description": "Changed two-step verification setting for team.\nnew_value: New change policy.\nprevious_value: Previous change policy. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/TwoStepVerificationPolicy"
        }, 
        "previous_value": {
          "$ref": "#/definitions/TwoStepVerificationPolicy"
        }
      }
    }, 
    "GroupUpdateArgs": {
      "type": "object", 
      "description": "group: Specify a group.\nreturn_members: Whether to return the list of members in the group.  Note that the default value will cause all the group members  to be returned in the response. This may take a long time for large groups.\nnew_group_name: Optional argument. Set group name to this if provided.\nnew_group_external_id: Optional argument. New group external ID. If the argument is None, the group's external_id won't be updated. If the argument is empty string, the group's external id will be cleared.\nnew_group_management_type: Set new group management type, if provided.\n", 
      "properties": {
        "new_group_external_id": {
          "type": "string", 
          "description": "Optional argument. New group external ID. If the argument is None, the group's external_id won't be updated. If the argument is empty string, the group's external id will be cleared."
        }, 
        "new_group_name": {
          "type": "string", 
          "description": "Optional argument. Set group name to this if provided."
        }, 
        "return_members": {
          "type": "boolean", 
          "description": "Whether to return the list of members in the group.  Note that the default value will cause all the group members  to be returned in the response. This may take a long time for large groups."
        }, 
        "new_group_management_type": {
          "$ref": "#/definitions/GroupManagementType"
        }, 
        "group": {
          "$ref": "#/definitions/GroupSelector"
        }
      }
    }, 
    "DomainVerificationAddDomainSuccessType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "FileCommentNotificationPolicy": {
      "type": "object", 
      "description": "Enable or disable file comments notifications\ndisabled: None\nenabled: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "disabled", 
            "enabled", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of FileCommentNotificationPolicy"
        }
      }
    }, 
    "PaperExternalViewDefaultTeamDetails": {
      "type": "object", 
      "description": "Changed Paper external sharing setting to default team.\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "SharedContentRemoveMemberDetails": {
      "type": "object", 
      "description": "Removed user/group from shared file/folder.\nshared_content_access_level: Shared content access level.\n", 
      "properties": {
        "shared_content_access_level": {
          "$ref": "#/definitions/AccessLevel"
        }
      }
    }, 
    "PaperContentArchiveDetails": {
      "type": "object", 
      "description": "Archived Paper doc/folder.\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "DeviceUnlinkDetails": {
      "type": "object", 
      "description": "Disconnected device.\ndelete_data: True if the user requested to delete data after device unlink, false otherwise.\nsession_info: Session unique id.\ndisplay_name: The device name. Might be missing due to historical data gap.\n", 
      "properties": {
        "session_info": {
          "$ref": "#/definitions/SessionLogInfo"
        }, 
        "display_name": {
          "type": "string", 
          "description": "The device name. Might be missing due to historical data gap."
        }, 
        "delete_data": {
          "type": "boolean", 
          "description": "True if the user requested to delete data after device unlink, false otherwise."
        }
      }
    }, 
    "MembersUnsuspendArg": {
      "type": "object", 
      "description": "Exactly one of team_member_id, email, or external_id must be provided to identify the user account.\nuser: Identity of user to unsuspend.\n", 
      "properties": {
        "user": {
          "$ref": "#/definitions/UserSelectorArg"
        }
      }
    }, 
    "GroupsGetInfoError": {
      "type": "object", 
      "description": "group_not_on_team: The group is not on your team.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "group_not_on_team", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of GroupsGetInfoError"
        }
      }
    }, 
    "GetMembershipReport": {
      "type": "object", 
      "description": "Membership Report Result. Each of the items in the storage report is an array of values, one value per day. If there is no data for a day, then the value will be None.\nstart_date: First date present in the results as 'YYYY-MM-DD' or None.\nteam_size: Team size, for each day.\npending_invites: The number of pending invites to the team, for each day.\nmembers_joined: The number of members that joined the team, for each day.\nsuspended_members: The number of suspended team members, for each day.\nlicenses: The total number of licenses the team has, for each day.\n", 
      "properties": {
        "team_size": {
          "items": {
            "type": "number"
          }, 
          "type": "array", 
          "description": "Team size, for each day."
        }, 
        "suspended_members": {
          "items": {
            "type": "number"
          }, 
          "type": "array", 
          "description": "The number of suspended team members, for each day."
        }, 
        "members_joined": {
          "items": {
            "type": "number"
          }, 
          "type": "array", 
          "description": "The number of members that joined the team, for each day."
        }, 
        "licenses": {
          "items": {
            "type": "number"
          }, 
          "type": "array", 
          "description": "The total number of licenses the team has, for each day."
        }, 
        "pending_invites": {
          "items": {
            "type": "number"
          }, 
          "type": "array", 
          "description": "The number of pending invites to the team, for each day."
        }, 
        "start_date": {
          "type": "string", 
          "description": "First date present in the results as 'YYYY-MM-DD' or None."
        }
      }
    }, 
    "DeviceUnlinkType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "MemberStatus": {
      "type": "object", 
      "description": "not_joined: None\ninvited: None\nactive: None\nsuspended: None\nremoved: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "not_joined", 
            "invited", 
            "active", 
            "suspended", 
            "removed", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of MemberStatus"
        }
      }
    }, 
    "SharingMemberPolicy": {
      "type": "object", 
      "description": "External sharing policy\nallow: None\nforbid: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "allow", 
            "forbid", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of SharingMemberPolicy"
        }
      }
    }, 
    "SharedFolderChangeMembersInheritancePolicyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "FileDownloadType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SharingFolderJoinPolicy": {
      "type": "object", 
      "description": "Policy for controlling if team members can join shared folders owned by non team members.\nfrom_anyone: None\nfrom_team_only: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "from_anyone", 
            "from_team_only", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of SharingFolderJoinPolicy"
        }
      }
    }, 
    "PaperContentAddToFolderDetails": {
      "type": "object", 
      "description": "Added Paper doc/folder to folder.\nevent_uuid: Event unique identifier.\ntarget_asset_index: Target asset position in the Assets list.\nparent_asset_index: Parent asset position in the Assets list.\n", 
      "properties": {
        "target_asset_index": {
          "type": "number", 
          "description": "Target asset position in the Assets list."
        }, 
        "parent_asset_index": {
          "type": "number", 
          "description": "Parent asset position in the Assets list."
        }, 
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "FileGetCopyReferenceType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SharedContentUnshareDetails": {
      "type": "object", 
      "description": "Unshared file/folder by clearing membership and turning off link.\n", 
      "properties": {}
    }, 
    "SharedFolderUnmountType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "TwoAccountChangePolicyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "TfaConfiguration": {
      "type": "object", 
      "description": "Two factor authentication configuration. Note: the enabled option is deprecated.\ndisabled: None\nenabled: None\nsms: None\nauthenticator: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "disabled", 
            "enabled", 
            "sms", 
            "authenticator", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of TfaConfiguration"
        }
      }
    }, 
    "MembersAddLaunch": {
      "type": "object", 
      "description": "async_job_id: This response indicates that the processing is asynchronous. The string is an id that can be used to obtain the status of the asynchronous job.\ncomplete: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "async_job_id", 
            "complete"
          ], 
          "type": "string", 
          "title": "Choice of MembersAddLaunch"
        }, 
        "async_job_id": {
          "type": "string", 
          "description": "This response indicates that the processing is asynchronous. The string is an id that can be used to obtain the status of the asynchronous job."
        }, 
        "complete": {
          "items": {
            "$ref": "#/definitions/MemberAddResult"
          }, 
          "type": "array"
        }
      }
    }, 
    "ShowcaseUntrashedType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "UserLogInfo": {
      "type": "object", 
      "description": "User's logged information.\naccount_id: User unique ID. Might be missing due to historical data gap.\ndisplay_name: User display name. Might be missing due to historical data gap.\nemail: User email address. Might be missing due to historical data gap.\n", 
      "properties": {
        "display_name": {
          "type": "string", 
          "description": "User display name. Might be missing due to historical data gap."
        }, 
        "account_id": {
          "type": "string", 
          "description": "User unique ID. Might be missing due to historical data gap."
        }, 
        "email": {
          "type": "string", 
          "description": "User email address. Might be missing due to historical data gap."
        }
      }
    }, 
    "ExportMembersReportDetails": {
      "type": "object", 
      "description": "Created member data report.\n", 
      "properties": {}
    }, 
    "RevokeLinkedAppStatus": {
      "type": "object", 
      "description": "success: Result of the revoking request.\nerror_type: The error cause in case of a failure.\n", 
      "properties": {
        "error_type": {
          "$ref": "#/definitions/RevokeLinkedAppError"
        }, 
        "success": {
          "type": "boolean", 
          "description": "Result of the revoking request."
        }
      }
    }, 
    "PaperChangeMemberLinkPolicyDetails": {
      "type": "object", 
      "description": "Changed whether non-members can view Paper docs with link.\nnew_value: New paper external link accessibility policy.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/PaperMemberPolicy"
        }
      }
    }, 
    "MembersGetInfoArgs": {
      "type": "object", 
      "description": "members: List of team members.\n", 
      "properties": {
        "members": {
          "items": {
            "$ref": "#/definitions/UserSelectorArg"
          }, 
          "type": "array", 
          "description": "List of team members."
        }
      }
    }, 
    "GroupMovedType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "FileRestoreDetails": {
      "type": "object", 
      "description": "Restored deleted files and/or folders.\n", 
      "properties": {}
    }, 
    "PaperDocRequestAccessDetails": {
      "type": "object", 
      "description": "Requested access to Paper doc.\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "ShowcaseResolveCommentType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "GroupsListResult": {
      "type": "object", 
      "description": "groups: None\ncursor: Pass the cursor into :route:`groups/list/continue` to obtain the additional groups.\nhas_more: Is true if there are additional groups that have not been returned yet. An additional call to :route:`groups/list/continue` can retrieve them.\n", 
      "properties": {
        "cursor": {
          "type": "string", 
          "description": "Pass the cursor into :route:`groups/list/continue` to obtain the additional groups."
        }, 
        "has_more": {
          "type": "boolean", 
          "description": "Is true if there are additional groups that have not been returned yet. An additional call to :route:`groups/list/continue` can retrieve them."
        }, 
        "groups": {
          "items": {
            "$ref": "#/definitions/GroupSummary"
          }, 
          "type": "array"
        }
      }
    }, 
    "SfInviteGroupDetails": {
      "type": "object", 
      "description": "Invited group to shared folder.\ntarget_asset_index: Target asset position in the Assets list.\n", 
      "properties": {
        "target_asset_index": {
          "type": "number", 
          "description": "Target asset position in the Assets list."
        }
      }
    }, 
    "GetTemplateResult": {
      "type": "object", 
      "description": "name: Display name for the template. Template names can be up to 256 bytes.\ndescription: Description for the template. Template descriptions can be up to 1024 bytes.\nfields: Definitions of the property fields associated with this template. There can be up to 32 properties in a single template.\n", 
      "properties": {
        "fields": {
          "items": {
            "$ref": "#/definitions/PropertyFieldTemplate"
          }, 
          "type": "array", 
          "description": "Definitions of the property fields associated with this template. There can be up to 32 properties in a single template."
        }, 
        "name": {
          "type": "string", 
          "description": "Display name for the template. Template names can be up to 256 bytes."
        }, 
        "description": {
          "type": "string", 
          "description": "Description for the template. Template descriptions can be up to 1024 bytes."
        }
      }
    }, 
    "DomainInvitesRequestToJoinTeamDetails": {
      "type": "object", 
      "description": "Requested to join team.\n", 
      "properties": {}
    }, 
    "GroupMembersRemoveError": {
      "type": "object", 
      "description": "group_not_found: No matching group found. No groups match the specified group ID.\nother: None\nsystem_managed_group_disallowed: This operation is not supported on system-managed groups.\nmember_not_in_group: At least one of the specified users is not a member of the group.\ngroup_not_in_team: Group is not in this team. You cannot remove members from a group that is outside of your team.\nmembers_not_in_team: These members are not part of your team.\nusers_not_found: These users were not found in Dropbox.\n", 
      "properties": {
        "members_not_in_team": {
          "items": {
            "type": "string"
          }, 
          "type": "array", 
          "description": "These members are not part of your team."
        }, 
        "users_not_found": {
          "items": {
            "type": "string"
          }, 
          "type": "array", 
          "description": "These users were not found in Dropbox."
        }, 
        ".tag": {
          "enum": [
            "group_not_found", 
            "other", 
            "system_managed_group_disallowed", 
            "member_not_in_group", 
            "group_not_in_team", 
            "members_not_in_team", 
            "users_not_found"
          ], 
          "type": "string", 
          "title": "Choice of GroupMembersRemoveError"
        }
      }
    }, 
    "MemberPermanentlyDeleteAccountContentsType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "TfaChangePolicyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "MicrosoftOfficeAddinChangePolicyDetails": {
      "type": "object", 
      "description": "Enabled/disabled Microsoft Office add-in.\nnew_value: New Microsoft Office addin policy.\nprevious_value: Previous Microsoft Office addin policy. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/MicrosoftOfficeAddinPolicy"
        }, 
        "previous_value": {
          "$ref": "#/definitions/MicrosoftOfficeAddinPolicy"
        }
      }
    }, 
    "SharingChangeFolderJoinPolicyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "MemberSpaceLimitsChangeCustomQuotaType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "EmmCreateExceptionsReportType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "ListTemplateResult": {
      "type": "object", 
      "description": "template_ids: List of identifiers for templates added by  See :route:`templates/add_for_user` or :route:`templates/add_for_team`.\n", 
      "properties": {
        "template_ids": {
          "items": {
            "type": "string"
          }, 
          "type": "array", 
          "description": "List of identifiers for templates added by  See :route:`templates/add_for_user` or :route:`templates/add_for_team`."
        }
      }
    }, 
    "MobileSessionLogInfo": {
      "type": "object", 
      "description": "Mobile session.\nsession_id: Session ID. Might be missing due to historical data gap.\n", 
      "properties": {
        "session_id": {
          "type": "string", 
          "description": "Session ID. Might be missing due to historical data gap."
        }
      }
    }, 
    "PaperDocUntrashedDetails": {
      "type": "object", 
      "description": "Restored Paper doc.\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "ListMemberDevicesArg": {
      "type": "object", 
      "description": "team_member_id: The team's member id.\ninclude_web_sessions: Whether to list web sessions of the team's member.\ninclude_desktop_clients: Whether to list linked desktop devices of the team's member.\ninclude_mobile_clients: Whether to list linked mobile devices of the team's member.\n", 
      "properties": {
        "team_member_id": {
          "type": "string", 
          "description": "The team's member id."
        }, 
        "include_desktop_clients": {
          "type": "boolean", 
          "description": "Whether to list linked desktop devices of the team's member."
        }, 
        "include_web_sessions": {
          "type": "boolean", 
          "description": "Whether to list web sessions of the team's member."
        }, 
        "include_mobile_clients": {
          "type": "boolean", 
          "description": "Whether to list linked mobile devices of the team's member."
        }
      }
    }, 
    "TwoStepVerificationPolicy": {
      "type": "object", 
      "description": "require_tfa_enable: Enabled require two factor authorization.\nrequire_tfa_disable: Disabled require two factor authorization.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "require_tfa_enable", 
            "require_tfa_disable", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of TwoStepVerificationPolicy"
        }
      }
    }, 
    "PaperDocDeletedType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "ResellerSupportSessionStartDetails": {
      "type": "object", 
      "description": "Started reseller support session.\n", 
      "properties": {}
    }, 
    "PasswordResetAllDetails": {
      "type": "object", 
      "description": "Reset all team member passwords.\n", 
      "properties": {}
    }, 
    "EmmRefreshAuthTokenType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "PaperDocChangeSubscriptionType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "CreateFolderDetails": {
      "type": "object", 
      "description": "Created folders.\n", 
      "properties": {}
    }, 
    "SmartSyncChangePolicyDetails": {
      "type": "object", 
      "description": "Changed default Smart Sync setting for team members.\nnew_value: New smart sync policy.\nprevious_value: Previous smart sync policy.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/SmartSyncPolicy"
        }, 
        "previous_value": {
          "$ref": "#/definitions/SmartSyncPolicy"
        }
      }
    }, 
    "PaperDocViewDetails": {
      "type": "object", 
      "description": "Viewed Paper doc.\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "UpdateTemplateResult": {
      "type": "object", 
      "description": "template_id: An identifier for template added by route  See :route:`templates/add_for_user` or :route:`templates/add_for_team`.\n", 
      "properties": {
        "template_id": {
          "type": "string", 
          "description": "An identifier for template added by route  See :route:`templates/add_for_user` or :route:`templates/add_for_team`."
        }
      }
    }, 
    "PaperDocEditType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "FileRequestCreateDetails": {
      "type": "object", 
      "description": "Created file request.\nfile_request_id: File request id. Might be missing due to historical data gap.\nrequest_details: File request details. Might be missing due to historical data gap.\n", 
      "properties": {
        "file_request_id": {
          "type": "string", 
          "description": "File request id. Might be missing due to historical data gap."
        }, 
        "request_details": {
          "$ref": "#/definitions/FileRequestDetails"
        }
      }
    }, 
    "NoteAclTeamLinkType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "CustomQuotaError": {
      "type": "object", 
      "description": "Error returned when getting member custom quota.\ntoo_many_users: A maximum of 1000 users can be set for a single call.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "too_many_users", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of CustomQuotaError"
        }
      }
    }, 
    "TeamFolderArchiveLaunch": {
      "type": "object", 
      "description": "async_job_id: This response indicates that the processing is asynchronous. The string is an id that can be used to obtain the status of the asynchronous job.\ncomplete: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "async_job_id", 
            "complete"
          ], 
          "type": "string", 
          "title": "Choice of TeamFolderArchiveLaunch"
        }, 
        "async_job_id": {
          "type": "string", 
          "description": "This response indicates that the processing is asynchronous. The string is an id that can be used to obtain the status of the asynchronous job."
        }, 
        "complete": {
          "$ref": "#/definitions/TeamFolderMetadata"
        }
      }
    }, 
    "RelocateAssetReferencesLogInfo": {
      "type": "object", 
      "description": "Provides the indices of the source asset and the destination asset for a relocate action.\nsrc_asset_index: Source asset position in the Assets list.\ndest_asset_index: Destination asset position in the Assets list.\n", 
      "properties": {
        "src_asset_index": {
          "type": "number", 
          "description": "Source asset position in the Assets list."
        }, 
        "dest_asset_index": {
          "type": "number", 
          "description": "Destination asset position in the Assets list."
        }
      }
    }, 
    "AccountCaptureChangePolicyDetails": {
      "type": "object", 
      "description": "Changed account capture setting on team domain.\nnew_value: New account capture policy.\nprevious_value: Previous account capture policy. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/AccountCapturePolicy"
        }, 
        "previous_value": {
          "$ref": "#/definitions/AccountCapturePolicy"
        }
      }
    }, 
    "FileLogInfo": {
      "type": "object", 
      "description": "File's logged information.\npath: Path relative to event context.\ndisplay_name: Display name. Might be missing due to historical data gap.\nfile_id: Unique ID. Might be missing due to historical data gap.\n", 
      "properties": {
        "path": {
          "$ref": "#/definitions/PathLogInfo"
        }, 
        "display_name": {
          "type": "string", 
          "description": "Display name. Might be missing due to historical data gap."
        }, 
        "file_id": {
          "type": "string", 
          "description": "Unique ID. Might be missing due to historical data gap."
        }
      }
    }, 
    "SsoChangePolicyDetails": {
      "type": "object", 
      "description": "Changed single sign-on setting for team.\nnew_value: New single sign-on policy.\nprevious_value: Previous single sign-on policy. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/SsoPolicy"
        }, 
        "previous_value": {
          "$ref": "#/definitions/SsoPolicy"
        }
      }
    }, 
    "ShowcaseChangeExternalSharingPolicyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "AccountCaptureAvailability": {
      "type": "object", 
      "description": "unavailable: None\navailable: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "unavailable", 
            "available", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of AccountCaptureAvailability"
        }
      }
    }, 
    "RevokeDesktopClientArg": {
      "type": "object", 
      "description": "session_id: The session id.\nteam_member_id: The unique id of the member owning the device.\ndelete_on_unlink: Whether to delete all files of the account (this is possible only if supported by the desktop client and  will be made the next time the client access the account).\n", 
      "properties": {
        "team_member_id": {
          "type": "string", 
          "description": "The unique id of the member owning the device."
        }, 
        "delete_on_unlink": {
          "type": "boolean", 
          "description": "Whether to delete all files of the account (this is possible only if supported by the desktop client and  will be made the next time the client access the account)."
        }, 
        "session_id": {
          "type": "string", 
          "description": "The session id."
        }
      }
    }, 
    "FileAddType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "DeviceApprovalsChangeDesktopPolicyDetails": {
      "type": "object", 
      "description": "Set/removed limit on number of computers member can link to team Dropbox account.\nnew_value: New desktop device approvals policy. Might be missing due to historical data gap.\nprevious_value: Previous desktop device approvals policy. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/DeviceApprovalsPolicy"
        }, 
        "previous_value": {
          "$ref": "#/definitions/DeviceApprovalsPolicy"
        }
      }
    }, 
    "TeamFolderListResult": {
      "type": "object", 
      "description": "Result for :route:`team_folder/list` and :route:`team_folder/list/continue`.\nteam_folders: List of all team folders in the authenticated team.\ncursor: Pass the cursor into :route:`team_folder/list/continue` to obtain additional team folders.\nhas_more: Is true if there are additional team folders that have not been returned yet. An additional call to :route:`team_folder/list/continue` can retrieve them.\n", 
      "properties": {
        "cursor": {
          "type": "string", 
          "description": "Pass the cursor into :route:`team_folder/list/continue` to obtain additional team folders."
        }, 
        "has_more": {
          "type": "boolean", 
          "description": "Is true if there are additional team folders that have not been returned yet. An additional call to :route:`team_folder/list/continue` can retrieve them."
        }, 
        "team_folders": {
          "items": {
            "$ref": "#/definitions/TeamFolderMetadata"
          }, 
          "type": "array", 
          "description": "List of all team folders in the authenticated team."
        }
      }
    }, 
    "GroupJoinPolicyUpdatedDetails": {
      "type": "object", 
      "description": "Updated group join policy.\nis_company_managed: Is company managed group. Might be missing due to historical data gap.\njoin_policy: Group join policy.\n", 
      "properties": {
        "is_company_managed": {
          "type": "boolean", 
          "description": "Is company managed group. Might be missing due to historical data gap."
        }, 
        "join_policy": {
          "$ref": "#/definitions/GroupJoinPolicy"
        }
      }
    }, 
    "Name": {
      "type": "object", 
      "description": "Representations for a person's name to assist with internationalization.\ngiven_name: Also known as a first name.\nsurname: Also known as a last name or family name.\nfamiliar_name: Locale-dependent name. In the US, a person's familiar name is their :field:`given_name`, but elsewhere, it could be any combination of a person's :field:`given_name` and :field:`surname`.\ndisplay_name: A name that can be used directly to represent the name of a user's Dropbox account.\nabbreviated_name: An abbreviated form of the person's name. Their initials in most locales.\n", 
      "properties": {
        "familiar_name": {
          "type": "string", 
          "description": "Locale-dependent name. In the US, a person's familiar name is their :field:`given_name`, but elsewhere, it could be any combination of a person's :field:`given_name` and :field:`surname`."
        }, 
        "surname": {
          "type": "string", 
          "description": "Also known as a last name or family name."
        }, 
        "display_name": {
          "type": "string", 
          "description": "A name that can be used directly to represent the name of a user's Dropbox account."
        }, 
        "given_name": {
          "type": "string", 
          "description": "Also known as a first name."
        }, 
        "abbreviated_name": {
          "type": "string", 
          "description": "An abbreviated form of the person's name. Their initials in most locales."
        }
      }
    }, 
    "EnabledDomainInvitesType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "PaperContentRemoveFromFolderType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "PaperContentAddToFolderType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "DomainInvitesRequestToJoinTeamType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "DateRangeError": {
      "type": "object", 
      "description": "Errors that can originate from problems in input arguments to reports.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "other"
          ], 
          "type": "string", 
          "title": "Choice of DateRangeError"
        }
      }
    }, 
    "SfExternalInviteWarnType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "NetworkControlPolicy": {
      "type": "object", 
      "description": "Network control policy\ndisabled: None\nenabled: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "disabled", 
            "enabled", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of NetworkControlPolicy"
        }
      }
    }, 
    "FilePreviewDetails": {
      "type": "object", 
      "description": "Previewed files and/or folders.\n", 
      "properties": {}
    }, 
    "SharedLinkRemoveExpiryDetails": {
      "type": "object", 
      "description": "Removed shared link expiration date.\nprevious_value: Previous shared link expiration date. Might be missing due to historical data gap.\n", 
      "properties": {
        "previous_value": {
          "type": "string", 
          "description": "Previous shared link expiration date. Might be missing due to historical data gap."
        }
      }
    }, 
    "DesktopClientSession": {
      "type": "object", 
      "description": "Information about linked Dropbox desktop client sessions.\nsession_id: The session id.\nhost_name: Name of the hosting desktop.\nclient_type: The Dropbox desktop client type.\nclient_version: The Dropbox client version.\nplatform: Information on the hosting platform.\nis_delete_on_unlink_supported: Whether it's possible to delete all of the account files upon unlinking.\nip_address: The IP address of the last activity from this session.\ncountry: The country from which the last activity from this session was made.\ncreated: The time this session was created.\nupdated: The time of the last activity from this session.\n", 
      "properties": {
        "updated": {
          "type": "string", 
          "description": "The time of the last activity from this session."
        }, 
        "created": {
          "type": "string", 
          "description": "The time this session was created."
        }, 
        "country": {
          "type": "string", 
          "description": "The country from which the last activity from this session was made."
        }, 
        "session_id": {
          "type": "string", 
          "description": "The session id."
        }, 
        "platform": {
          "type": "string", 
          "description": "Information on the hosting platform."
        }, 
        "client_type": {
          "$ref": "#/definitions/DesktopPlatform"
        }, 
        "host_name": {
          "type": "string", 
          "description": "Name of the hosting desktop."
        }, 
        "is_delete_on_unlink_supported": {
          "type": "boolean", 
          "description": "Whether it's possible to delete all of the account files upon unlinking."
        }, 
        "client_version": {
          "type": "string", 
          "description": "The Dropbox client version."
        }, 
        "ip_address": {
          "type": "string", 
          "description": "The IP address of the last activity from this session."
        }
      }
    }, 
    "ShowcaseUnresolveCommentType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "StorageBucket": {
      "type": "object", 
      "description": "Describes the number of users in a specific storage bucket.\nbucket: The name of the storage bucket. For example, '1G' is a bucket of users with storage size up to 1 Giga.\nusers: The number of people whose storage is in the range of this storage bucket.\n", 
      "properties": {
        "bucket": {
          "type": "string", 
          "description": "The name of the storage bucket. For example, '1G' is a bucket of users with storage size up to 1 Giga."
        }, 
        "users": {
          "type": "number", 
          "description": "The number of people whose storage is in the range of this storage bucket."
        }
      }
    }, 
    "TfaChangeStatusType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SharedNoteOpenedType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "MemberRequestsPolicy": {
      "type": "object", 
      "description": "auto_accept: None\ndisabled: None\nrequire_approval: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "auto_accept", 
            "disabled", 
            "require_approval", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of MemberRequestsPolicy"
        }
      }
    }, 
    "FileGetCopyReferenceDetails": {
      "type": "object", 
      "description": "Created copy reference to file/folder.\n", 
      "properties": {}
    }, 
    "TeamSelectiveSyncSettingsChangedDetails": {
      "type": "object", 
      "description": "Changed sync default.\nprevious_value: Previous value.\nnew_value: New value.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/SyncSetting"
        }, 
        "previous_value": {
          "$ref": "#/definitions/SyncSetting"
        }
      }
    }, 
    "SharedContentRemoveLinkPasswordType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "CustomQuotaUsersArg": {
      "type": "object", 
      "description": "users: List of users.\n", 
      "properties": {
        "users": {
          "items": {
            "$ref": "#/definitions/UserSelectorArg"
          }, 
          "type": "array", 
          "description": "List of users."
        }
      }
    }, 
    "TeamFolderPermanentlyDeleteType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "AppUnlinkTeamType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "PasswordResetType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "TeamEvent": {
      "type": "object", 
      "description": "An audit log event.\ntimestamp: The Dropbox timestamp representing when the action was taken.\nevent_category: The category that this type of action belongs to.\nevent_type: The particular type of action taken.\ndetails: The variable event schema applicable to this type of action, instantiated with respect to this particular action.\nactor: The entity who actually performed the action. Might be missing due to historical data gap.\norigin: The origin from which the actor performed the action including information about host, ip address, location, session, etc. If the action was performed programmatically via the API the origin represents the API client.\ninvolve_non_team_member: True if the action involved a non team member either as the actor or as one of the affected users. Might be missing due to historical data gap.\ncontext: The user or team on whose behalf the actor performed the action. Might be missing due to historical data gap.\nparticipants: Zero or more users and/or groups that are affected by the action. Note that this list doesn't include any actors or users in context.\nassets: Zero or more content assets involved in the action. Currently these include Dropbox files and folders but in the future we might add other asset types such as Paper documents, folders, projects, etc.\n", 
      "properties": {
        "origin": {
          "$ref": "#/definitions/OriginLogInfo"
        }, 
        "event_type": {
          "$ref": "#/definitions/EventType"
        }, 
        "timestamp": {
          "type": "string", 
          "description": "The Dropbox timestamp representing when the action was taken."
        }, 
        "actor": {
          "$ref": "#/definitions/ActorLogInfo"
        }, 
        "participants": {
          "items": {
            "$ref": "#/definitions/ParticipantLogInfo"
          }, 
          "type": "array", 
          "description": "Zero or more users and/or groups that are affected by the action. Note that this list doesn't include any actors or users in context."
        }, 
        "event_category": {
          "$ref": "#/definitions/EventCategory"
        }, 
        "context": {
          "$ref": "#/definitions/ContextLogInfo"
        }, 
        "details": {
          "$ref": "#/definitions/EventDetails"
        }, 
        "assets": {
          "items": {
            "$ref": "#/definitions/AssetLogInfo"
          }, 
          "type": "array", 
          "description": "Zero or more content assets involved in the action. Currently these include Dropbox files and folders but in the future we might add other asset types such as Paper documents, folders, projects, etc."
        }, 
        "involve_non_team_member": {
          "type": "boolean", 
          "description": "True if the action involved a non team member either as the actor or as one of the affected users. Might be missing due to historical data gap."
        }
      }
    }, 
    "FileAddCommentDetails": {
      "type": "object", 
      "description": "Added file comment.\ncomment_text: Comment text. Might be missing due to historical data gap.\n", 
      "properties": {
        "comment_text": {
          "type": "string", 
          "description": "Comment text. Might be missing due to historical data gap."
        }
      }
    }, 
    "ResellerSupportSessionEndType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "MembersAddArg": {
      "type": "object", 
      "description": "new_members: Details of new members to be added to the team.\nforce_async: Whether to force the add to happen asynchronously.\n", 
      "properties": {
        "new_members": {
          "items": {
            "$ref": "#/definitions/MemberAddArg"
          }, 
          "type": "array", 
          "description": "Details of new members to be added to the team."
        }, 
        "force_async": {
          "type": "boolean", 
          "description": "Whether to force the add to happen asynchronously."
        }
      }
    }, 
    "AccountCaptureChangePolicyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "PaperDocTrashedDetails": {
      "type": "object", 
      "description": "Deleted Paper doc.\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "MemberAddArg": {
      "type": "object", 
      "description": "member_email: None\nmember_given_name: Member's first name.\nmember_surname: Member's last name.\nmember_external_id: External ID for member.\nmember_persistent_id: Persistent ID for member. This field is only available to teams using persistent ID SAML configuration.\nsend_welcome_email: Whether to send a welcome email to the member. If send_welcome_email is false, no email invitation will be sent to the user. This may be useful for apps using single sign-on (SSO) flows for onboarding that want to handle announcements themselves.\nrole: None\nis_directory_restricted: Whether a user is directory restricted.\n", 
      "properties": {
        "send_welcome_email": {
          "type": "boolean", 
          "description": "Whether to send a welcome email to the member. If send_welcome_email is false, no email invitation will be sent to the user. This may be useful for apps using single sign-on (SSO) flows for onboarding that want to handle announcements themselves."
        }, 
        "is_directory_restricted": {
          "type": "boolean", 
          "description": "Whether a user is directory restricted."
        }, 
        "member_email": {
          "type": "string"
        }, 
        "member_persistent_id": {
          "type": "string", 
          "description": "Persistent ID for member. This field is only available to teams using persistent ID SAML configuration."
        }, 
        "member_given_name": {
          "type": "string", 
          "description": "Member's first name."
        }, 
        "role": {
          "$ref": "#/definitions/AdminTier"
        }, 
        "member_external_id": {
          "type": "string", 
          "description": "External ID for member."
        }, 
        "member_surname": {
          "type": "string", 
          "description": "Member's last name."
        }
      }
    }, 
    "MembersListArg": {
      "type": "object", 
      "description": "limit: Number of results to return per call.\ninclude_removed: Whether to return removed members.\n", 
      "properties": {
        "include_removed": {
          "type": "boolean", 
          "description": "Whether to return removed members."
        }, 
        "limit": {
          "type": "number", 
          "description": "Number of results to return per call."
        }
      }
    }, 
    "ActiveWebSession": {
      "type": "object", 
      "description": "Information on active web sessions.\nsession_id: The session id.\nuser_agent: Information on the hosting device.\nos: Information on the hosting operating system.\nbrowser: Information on the browser used for this web session.\nip_address: The IP address of the last activity from this session.\ncountry: The country from which the last activity from this session was made.\ncreated: The time this session was created.\nupdated: The time of the last activity from this session.\nexpires: The time this session expires.\n", 
      "properties": {
        "updated": {
          "type": "string", 
          "description": "The time of the last activity from this session."
        }, 
        "os": {
          "type": "string", 
          "description": "Information on the hosting operating system."
        }, 
        "created": {
          "type": "string", 
          "description": "The time this session was created."
        }, 
        "country": {
          "type": "string", 
          "description": "The country from which the last activity from this session was made."
        }, 
        "expires": {
          "type": "string", 
          "description": "The time this session expires."
        }, 
        "session_id": {
          "type": "string", 
          "description": "The session id."
        }, 
        "user_agent": {
          "type": "string", 
          "description": "Information on the hosting device."
        }, 
        "ip_address": {
          "type": "string", 
          "description": "The IP address of the last activity from this session."
        }, 
        "browser": {
          "type": "string", 
          "description": "Information on the browser used for this web session."
        }
      }
    }, 
    "SsoChangeCertDetails": {
      "type": "object", 
      "description": "Changed X.509 certificate for SSO.\nnew_certificate_details: New SSO certificate details.\nprevious_certificate_details: Previous SSO certificate details. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_certificate_details": {
          "$ref": "#/definitions/Certificate"
        }, 
        "previous_certificate_details": {
          "$ref": "#/definitions/Certificate"
        }
      }
    }, 
    "SsoAddLogoutUrlDetails": {
      "type": "object", 
      "description": "Added sign-out URL for SSO.\nnew_value: New single sign-on logout URL. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "type": "string", 
          "description": "New single sign-on logout URL. Might be missing due to historical data gap."
        }
      }
    }, 
    "EmmCreateUsageReportDetails": {
      "type": "object", 
      "description": "Created EMM mobile app usage report.\n", 
      "properties": {}
    }, 
    "SessionLogInfo": {
      "type": "object", 
      "description": "Session's logged information.\nsession_id: Session ID. Might be missing due to historical data gap.\n", 
      "properties": {
        "session_id": {
          "type": "string", 
          "description": "Session ID. Might be missing due to historical data gap."
        }
      }
    }, 
    "SharedContentAddMemberType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "FileAddCommentType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "NamespaceMetadata": {
      "type": "object", 
      "description": "Properties of a namespace.\nname: The name of this namespace.\nnamespace_id: The ID of this namespace.\nnamespace_type: The type of this namespace.\nteam_member_id: If this is a team member or app folder, the ID of the owning team member. Otherwise, this field is not present.\n", 
      "properties": {
        "team_member_id": {
          "type": "string", 
          "description": "If this is a team member or app folder, the ID of the owning team member. Otherwise, this field is not present."
        }, 
        "namespace_id": {
          "type": "string", 
          "description": "The ID of this namespace."
        }, 
        "name": {
          "type": "string", 
          "description": "The name of this namespace."
        }, 
        "namespace_type": {
          "$ref": "#/definitions/NamespaceType"
        }
      }
    }, 
    "TeamFolderListContinueError": {
      "type": "object", 
      "description": "invalid_cursor: The cursor is invalid.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "invalid_cursor", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of TeamFolderListContinueError"
        }
      }
    }, 
    "RevokeLinkedApiAppArg": {
      "type": "object", 
      "description": "app_id: The application's unique id.\nteam_member_id: The unique id of the member owning the device.\nkeep_app_folder: Whether to keep the application dedicated folder (in case the application uses  one).\n", 
      "properties": {
        "keep_app_folder": {
          "type": "boolean", 
          "description": "Whether to keep the application dedicated folder (in case the application uses  one)."
        }, 
        "team_member_id": {
          "type": "string", 
          "description": "The unique id of the member owning the device."
        }, 
        "app_id": {
          "type": "string", 
          "description": "The application's unique id."
        }
      }
    }, 
    "SetCustomQuotaArg": {
      "type": "object", 
      "description": "users_and_quotas: List of users and their custom quotas.\n", 
      "properties": {
        "users_and_quotas": {
          "items": {
            "$ref": "#/definitions/UserCustomQuotaArg"
          }, 
          "type": "array", 
          "description": "List of users and their custom quotas."
        }
      }
    }, 
    "NetworkControlChangePolicyDetails": {
      "type": "object", 
      "description": "Enabled/disabled network control.\nnew_value: New network control policy.\nprevious_value: Previous network control policy. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/NetworkControlPolicy"
        }, 
        "previous_value": {
          "$ref": "#/definitions/NetworkControlPolicy"
        }
      }
    }, 
    "SharedLinkDownloadDetails": {
      "type": "object", 
      "description": "Downloaded file/folder from shared link.\nshared_link_owner: Shared link owner details. Might be missing due to historical data gap.\n", 
      "properties": {
        "shared_link_owner": {
          "$ref": "#/definitions/UserLogInfo"
        }
      }
    }, 
    "FileRequestCloseType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "GroupChangeManagementTypeType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "ShowcaseCreatedType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "ShowcaseFileRemovedType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "SharedLinkVisibility": {
      "type": "object", 
      "description": "Defines who has access to a shared link.\npassword: None\npublic: None\nteam_only: None\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "password", 
            "public", 
            "team_only", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of SharedLinkVisibility"
        }
      }
    }, 
    "DomainInvitesApproveRequestToJoinTeamDetails": {
      "type": "object", 
      "description": "Approved user's request to join team.\n", 
      "properties": {}
    }, 
    "DeviceApprovalsChangeUnlinkActionType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "ListTeamDevicesError": {
      "type": "object", 
      "description": "reset: Indicates that the cursor has been invalidated. Call :route:`devices/list_team_devices` again with an empty cursor to obtain a new cursor.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "reset", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of ListTeamDevicesError"
        }
      }
    }, 
    "ShowcaseResolveCommentDetails": {
      "type": "object", 
      "description": "Resolved showcase comment.\nevent_uuid: Event unique identifier.\ncomment_text: Comment text.\n", 
      "properties": {
        "comment_text": {
          "type": "string", 
          "description": "Comment text."
        }, 
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "GroupRenameType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "MissingDetails": {
      "type": "object", 
      "description": "An indication that an error occurred while retrieving the event. Some attributes of the event may be omitted as a result.\nsource_event_fields: All the data that could be retrieved and converted from the source event.\n", 
      "properties": {
        "source_event_fields": {
          "type": "string", 
          "description": "All the data that could be retrieved and converted from the source event."
        }
      }
    }, 
    "NoteAclInviteOnlyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "ShowcaseEditedDetails": {
      "type": "object", 
      "description": "Edited showcase.\nevent_uuid: Event unique identifier.\n", 
      "properties": {
        "event_uuid": {
          "type": "string", 
          "description": "Event unique identifier."
        }
      }
    }, 
    "MemberTransferAccountContentsDetails": {
      "type": "object", 
      "description": "Transferred contents of deleted member account to another member.\n", 
      "properties": {}
    }, 
    "NetworkControlChangePolicyType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "MobileClientPlatform": {
      "type": "object", 
      "description": "iphone: Official Dropbox iPhone client.\nipad: Official Dropbox iPad client.\nandroid: Official Dropbox Android client.\nwindows_phone: Official Dropbox Windows phone client.\nblackberry: Official Dropbox Blackberry client.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "iphone", 
            "ipad", 
            "android", 
            "windows_phone", 
            "blackberry", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of MobileClientPlatform"
        }
      }
    }, 
    "TeamProfileAddLogoDetails": {
      "type": "object", 
      "description": "Added team logo to display on shared link headers.\n", 
      "properties": {}
    }, 
    "MembersRecoverError": {
      "type": "object", 
      "description": "user_not_found: No matching user found. The provided team_member_id, email, or external_id does not exist on this team.\nuser_unrecoverable: The user is not recoverable.\nuser_not_in_team: The user is not a member of the team.\nteam_license_limit: Team is full. The organization has no available licenses.\nother: None\n", 
      "properties": {
        ".tag": {
          "enum": [
            "user_not_found", 
            "user_unrecoverable", 
            "user_not_in_team", 
            "team_license_limit", 
            "other"
          ], 
          "type": "string", 
          "title": "Choice of MembersRecoverError"
        }
      }
    }, 
    "DeviceApprovalsChangeOverageActionType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "RemovedStatus": {
      "type": "object", 
      "description": "is_recoverable: True if the removed team member is recoverable.\n", 
      "properties": {
        "is_recoverable": {
          "type": "boolean", 
          "description": "True if the removed team member is recoverable."
        }
      }
    }, 
    "PaperContentAddMemberType": {
      "type": "object", 
      "description": "description: None\n", 
      "properties": {
        "description": {
          "type": "string"
        }
      }
    }, 
    "DeviceApprovalsChangeMobilePolicyDetails": {
      "type": "object", 
      "description": "Set/removed limit on number of mobile devices member can link to team Dropbox account.\nnew_value: New mobile device approvals policy. Might be missing due to historical data gap.\nprevious_value: Previous mobile device approvals policy. Might be missing due to historical data gap.\n", 
      "properties": {
        "new_value": {
          "$ref": "#/definitions/DeviceApprovalsPolicy"
        }, 
        "previous_value": {
          "$ref": "#/definitions/DeviceApprovalsPolicy"
        }
      }
    }, 
    "SharedContentCopyDetails": {
      "type": "object", 
      "description": "Copied shared file/folder to own Dropbox.\nshared_content_link: Shared content link.\nshared_content_access_level: Shared content access level.\ndestination_path: The path where the member saved the content.\nshared_content_owner: The shared content owner.\n", 
      "properties": {
        "shared_content_owner": {
          "$ref": "#/definitions/UserLogInfo"
        }, 
        "destination_path": {
          "type": "string", 
          "description": "The path where the member saved the content."
        }, 
        "shared_content_link": {
          "type": "string", 
          "description": "Shared content link."
        }, 
        "shared_content_access_level": {
          "$ref": "#/definitions/AccessLevel"
        }
      }
    }, 
    "MembersRemoveArg": {
      "type": "object", 
      "description": "user: Identity of user to remove/suspend.\nwipe_data: If provided, controls if the user's data will be deleted on their linked devices.\ntransfer_dest_id: If provided, files from the deleted member account will be transferred to this user.\ntransfer_admin_id: If provided, errors during the transfer process will be sent via email to this user. If the transfer_dest_id argument was provided, then this argument must be provided as well.\nkeep_account: Downgrade the member to a Basic account. The user will retain the email address associated with their Dropbox  account and data in their account that is not restricted to team members. In order to keep the account the argument wipe_data should be set to False.\n", 
      "properties": {
        "transfer_dest_id": {
          "$ref": "#/definitions/UserSelectorArg"
        }, 
        "transfer_admin_id": {
          "$ref": "#/definitions/UserSelectorArg"
        }, 
        "keep_account": {
          "type": "boolean", 
          "description": "Downgrade the member to a Basic account. The user will retain the email address associated with their Dropbox  account and data in their account that is not restricted to team members. In order to keep the account the argument wipe_data should be set to False."
        }, 
        "user": {
          "$ref": "#/definitions/UserSelectorArg"
        }, 
        "wipe_data": {
          "type": "boolean", 
          "description": "If provided, controls if the user's data will be deleted on their linked devices."
        }
      }
    }
  }, 
  "swagger": "2.0", 
  "consumes": [
    "application/json"
  ]
}
